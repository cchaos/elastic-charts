{"version":3,"sources":["webpack:///./src/index.scss?6779","webpack:///./src/index.scss","webpack:///./.storybook/style.scss?9be2","webpack:///./.storybook/style.scss","webpack:///./stories/bar_chart.tsx","webpack:///./src/specs/index.ts","webpack:///./src/specs/axis.tsx","webpack:///./src/specs/line_annotation.tsx","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/lib/axes/axis_utils.ts","webpack:///./src/lib/utils/ids.ts","webpack:///./src/lib/series/rendering.ts","webpack:///./src/state/utils.ts","webpack:///./src/lib/utils/commons.ts","webpack:///./src/specs/rect_annotation.tsx","webpack:///./src/specs/line_series.tsx","webpack:///./src/specs/bar_series.tsx","webpack:///./src/specs/area_series.tsx","webpack:///./src/lib/utils/scales/scale_band.ts","webpack:///./src/lib/series/domains/x_domain.ts","webpack:///./src/lib/series/nonstacked_series_utils.ts","webpack:///./src/lib/series/stacked_series_utils.ts","webpack:///./src/components/chart.tsx","webpack:///./src/specs/specs_parser.tsx","webpack:///./src/state/chart_state.ts","webpack:///./src/lib/series/legend.ts","webpack:///./src/lib/series/tooltip.ts","webpack:///./src/lib/utils/dimensions.ts","webpack:///./src/state/annotation_utils.ts","webpack:///./src/state/crosshair_utils.ts","webpack:///./src/components/annotation_tooltips.tsx","webpack:///./src/components/chart_resizer.tsx","webpack:///./src/components/crosshair.tsx","webpack:///./src/components/highlighter.tsx","webpack:///./src/components/legend.tsx","webpack:///./src/components/legend_element.tsx","webpack:///./src/components/legend_button.tsx","webpack:///./src/components/react_canvas/reactive_chart.tsx","webpack:///./src/components/react_canvas/area_geometries.tsx","webpack:///./src/components/react_canvas/globals.ts","webpack:///./src/components/react_canvas/axis.tsx","webpack:///./src/components/react_canvas/bar_geometries.tsx","webpack:///./src/components/react_canvas/bar_values.tsx","webpack:///./src/components/react_canvas/grid.tsx","webpack:///./src/components/react_canvas/line_annotation.tsx","webpack:///./src/components/react_canvas/line_geometries.tsx","webpack:///./src/components/react_canvas/rect_annotation.tsx","webpack:///./src/components/svg/reactive_chart.tsx","webpack:///./src/components/svg/axis.tsx","webpack:///./src/components/svg/bar_series.tsx","webpack:///./src/components/tooltips.tsx","webpack:///./src/lib/utils/scales/scales.ts","webpack:///./src/lib/themes/dark_theme.ts","webpack:///./src/utils/data_generators/data_generator.ts","webpack:///./src/utils/data_generators/simple_noise.ts","webpack:///./stories/line_chart.tsx","webpack:///./stories/area_chart.tsx","webpack:///./stories/axis.tsx","webpack:///./stories/mixed.tsx","webpack:///./stories/legend.tsx","webpack:///./stories/interactions.tsx","webpack:///./src/lib/series/utils/test_dataset_kibana.ts","webpack:///./stories/rotations.tsx","webpack:///./stories/styling.tsx","webpack:///./stories/grid.tsx","webpack:///./stories/annotations.tsx","webpack:///./stories/scales.tsx","webpack:///./src/lib/themes/theme.ts","webpack:///./src/lib/themes/light_theme.ts","webpack:///./src/lib/utils/interactions.ts","webpack:///./src/lib/series/series.ts","webpack:///./src/components/react_canvas/utils/rendering_props_utils.ts","webpack:///./src/lib/series/utils/test_dataset.ts","webpack:///./.storybook/theme_service.ts","webpack:///./src/lib/themes/theme_commons.ts","webpack:///./src/lib/series/scales.ts","webpack:///./src/index.ts","webpack:///./src/lib/series/specs.ts","webpack:///./src/specs/settings.tsx","webpack:///./src/lib/utils/scales/scale_continuous.ts","webpack:///./src/lib/utils/domain.ts","webpack:///./src/lib/series/domains/y_domain.ts","webpack:///./src/lib/series/series_utils.ts","webpack:///./src/lib/axes/canvas_text_bbox_calculator.ts","webpack:///./src/lib/series/curves.ts","webpack:///./src/utils/data/formatters.ts","webpack:///./src/lib/series/utils/test_dataset_tsvb.ts","webpack:///./.storybook/config.ts","webpack:///./node_modules/nested-object-assign/lib sync ^\\.\\/.*$"],"names":["content","__webpack_require__","module","i","options","attrs","nonce","hmr","transform","insertInto","undefined","locals","exports","push","withStorySource","__STORY__","__ADDS_MAP__","Bar Chart@stacked only grouped areas","startLoc","col","line","endLoc","Bar Chart@[test] switch ordinal/linear x axis","Bar Chart@[test] - stacked bar chart with null bars","Bar Chart@[test] - clustered bar chart with null bars","Bar Chart@[test] - time clustered","Bar Chart@[test] - linear clustered","Bar Chart@[test] - time","Bar Chart@[test] - linear","Bar Chart@band bar chart","Bar Chart@scale to extent","Bar Chart@negative and positive x values","Bar Chart@single data clustered chart scale to extent","Bar Chart@single data stacked chart scale to extent","Bar Chart@single data stacked chart","Bar Chart@single data clusterd chart","Bar Chart@single data chart","Bar Chart@with high data volume","Bar Chart@2y2g","Bar Chart@2y1g","Bar Chart@2y0g","Bar Chart@1y2g","Bar Chart@1y1g","Bar Chart@1y0g","Bar Chart@time stacked using various specs","Bar Chart@time clustered using various specs","Bar Chart@clustered multiple series specs","Bar Chart@clustered with axis and legend","Bar Chart@stacked with axis and legend","Bar Chart@with axis and legend","Bar Chart@with stacked log y axis","Bar Chart@with log y axis","Bar Chart@with time x axis","Bar Chart@with linear x axis no linear interval","Bar Chart@with linear x axis","Bar Chart@with ordinal x axis","Bar Chart@with axis","Bar Chart@with value label","Bar Chart@basic","addon_knobs_1","react_1","luxon_1","react_2","__importDefault","src_1","TestDatasets","__importStar","test_dataset_kibana_1","dateFormatter","timeFormatter","dataGen","DataGenerator","generateDataWithAdditional","num","__spread","generateSimpleSeries","x","y","g","frozenData","s","m","h","storiesOf","addDecorator","add","className","boolean","toggleSpec","data1","data2","map","datum","__assign","data","specId","default","createElement","Chart","BarSeries","id","getSpecId","name","xScaleType","yScaleType","xAccessor","yAccessors","displayValueSettings","showValueLabel","isAlternatingValueLabel","isValueContainedInElement","hideClippedValue","displayValueStyle","displayValue","fontSize","number","fontFamily","fontStyle","padding","fill","color","offsetX","offsetY","barStyle","barSeriesStyle","LIGHT_THEME","debug","chartRotation","select","0 deg","90 deg","-90 deg","180 deg","theme","mergeWithDefaultTheme","dataSize","small volume","medium volume","high volume","splitSeriesAccessors","stackAccessors","renderer","Settings","rotation","Axis","getAxisId","position","Position","Bottom","title","showOverlappingTicks","Left","tickFormat","d","Number","toFixed","yScaleToDataExtent","darkmode","defaultTheme","DARK_THEME","xDomain","max","formatter","niceTimeFormatByDay","showOverlappingLabels","KIBANA_METRICS","metrics","kibana_os_load","showLegend","legendPosition","Right","metric","label","slice","BARCHART_1Y0G","BARCHART_1Y1G","BARCHART_1Y2G","BARCHART_2Y0G","BARCHART_2Y1G","BARCHART_2Y2G","mixed","allPositive","Math","abs","allNegative","Top","random","min","lineData","scaleToDataExtent","y0Accessors","LineSeries","start","DateTime","fromISO","zone","toMillis","plus","minute","linear","ordinal","domain","groupId","getGroupId","hide","axis_1","line_annotation_1","LineAnnotation","rect_annotation_1","RectAnnotation","line_series_1","bar_series_1","area_series_1","AreaSeries","settings_1","mobx_react_1","specs_1","ids_1","AxisSpec","_super","__extends","prototype","componentDidMount","_a","this","props","chartStore","spec","children","__rest","addAxisSpec","componentDidUpdate","componentWillUnmount","removeAxisSpec","render","defaultProps","tickSize","tickPadding","tick","tickLabelRotation","PureComponent","inject","displayName","__docgenInfo","description","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","theme_1","LineAnnotationSpecComponent","_this","apply","arguments","markerRef","createRef","config","current","_b","offsetWidth","offsetHeight","markerDimensions","width","height","addAnnotationSpec","annotationId","removeAnnotationSpec","marker","ref","style","left","opacity","annotationType","DEFAULT_ANNOTATION_LINE_STYLE","hideLines","hideTooltips","zIndex","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","o","e","Error","code","keys","Object","resolve","scales_1","computeAxisTicksDimensions","axisSpec","yDomain","totalBarsInCluster","bboxCalculator","axisConfig","barsPadding","scale","getScaleForAxisSpec","dimensions","tickValues","ticks","tickLabels","tickLabelStyle","reduce","getMaxBboxDimensions","maxLabelBboxWidth","maxLabelBboxHeight","maxLabelTextWidth","maxLabelTextHeight","computeTickDimensions","axisScaleDomain","axisScaleType","scaleType","isYDomain","isStraightRotation","isVertical","minRange","maxRange","yScales","computeYScales","has","get","computeXScale","computeRotatedLabelDimensions","unrotatedDims","degreesRotation","radians","PI","rotatedHeight","sin","cos","centerRotationOrigin","axisTicksDimensions","coordinates","getTickLabelProps","tickPosition","axisPosition","isRotated","align","verticalAlign","isAxisLeft","isAxisTop","getVerticalAxisGridLineProps","chartWidth","getHorizontalAxisGridLineProps","chartHeight","getMinMaxRange","chartDimensions","getBottomTopAxisMinMaxRange","getLeftAxisMinMaxRange","getAvailableTicks","shift","offset","bandwidth","value","getVisibleTicks","allTicks","axisDim","sort","a","b","requiredSpace","previousOccupiedSpace","visibleTicks","length","overlappingTick","getAxisPosition","chartMargins","axisTitleHeight","cumTopSum","cumBottomSum","cumLeftSum","cumRightSum","top","topIncrement","bottomIncrement","leftIncrement","rightIncrement","right","bottom","computeAxisGridLinePositions","isVerticalAxis","isHorizontal","isLowerBound","isUpperBound","isCompleteBound","isBounded","acc","tickLabel","bbox","compute","getOrElse","rotatedBbox","ceil","labelWidth","labelHeight","prevWidth","prevHeight","prevLabelWidth","prevLabelHeight","getVerticalAxisTickLineProps","isLeftAxis","getHorizontalAxisTickLineProps","isTopAxis","getAxisTicksPositions","chartTheme","axisSpecs","axisDimensions","totalGroupsCount","chartPaddings","legendStyle","legend","axisPositions","Map","axisVisibleTicks","axisTicks","axisGridLinesPositions","verticalWidth","horizontalHeight","forEach","minMaxRanges","showGridLines","isVerticalAxis_1","gridLines","set","axes","axisTitleStyle","mergeDomainsByGroupId","axesSpecs","domainsByGroupId","errorMessage","prevGroupDomain","prevDomain","prevMin","prevMax","mergedDomain","toString","defaultValue","required","type","charAt","charCodeAt","concat","indexOf","lastIndexOf","localeCompare","match","replace","search","split","substring","toLowerCase","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","trim","substr","valueOf","codePointAt","includes","endsWith","normalize","repeat","startsWith","anchor","big","blink","bold","fixed","fontcolor","fontsize","italics","link","small","strike","sub","sup","__@iterator","padStart","padEnd","trimLeft","trimRight","newtype_ts_1","groupIdIso","iso","axisIdIso","specIdIso","annotationIdIso","wrap","getAnnotationId","d3_shape_1","utils_1","canvas_text_bbox_calculator_1","scale_continuous_1","curves_1","series_utils_1","isPointGeometry","ig","hasOwnProperty","isBarGeometry","renderPoints","dataset","xScale","yScale","hasY0Accessors","seriesKey","indexedGeometries","isLogScale","isLogarithmicScale","pointGeometries","points","yDatums","y1","unshift","y0","yDatum","index","radius","isHidden","range","originalY","initialY0","initialY1","pointGeometry","accessor","geometryId","mutableIndexedGeometryMapUpsert","renderBars","orderIndex","seriesStyle","barGeometries","CanvasTextBBoxCalculator","isInverted","formattedDisplayValue","valueFormatter","displayValueText","computedDisplayValueWidth","displayValueWidth","barGeometry","text","destroy","renderLine","curve","pathGenerator","defined","getCurveFactory","seriesPointStyle","point","seriesLineStyle","lineGeometry","renderArea","area","y1Line","lineY1","lines","y0Line","lineY0","seriesAreaStyle","seriesAreaLineStyle","areaGeometry","getGeometryStyle","highlightedLegendItem","sharedThemeStyle","specOpacity","individualHighlight","sharedStyle","highlighted","belongsToDataSeries","unhighlighted","hasHighlight","hasGeometryHover","isPointOnGeometry","xCoordinate","yCoordinate","indexedGeometry","axis_utils_1","x_domain_1","y_domain_1","rendering_1","series_1","commons_1","MAX_ANIMATABLE_BARS","MAX_ANIMATABLE_LINES_AREA_POINTS","findDataSeriesByColorValues","series","findIndex","item","isEqualSeriesKey","colorValues","getUpdatedCustomSeriesColors","seriesSpecs","updatedCustomSeriesColors","customSeriesColors","seriesColorValues","seriesLabel","getColorValuesAsString","computeSeriesDomains","customXDomain","deselectedDataSeries","getSplittedSeries","splittedSeries","xValues","seriesColors","splittedDataSeries","values","specsArray","mergeXDomain","mergeYDomain","formattedDataSeries","getFormattedDataseries","renderGeometries","indexOffset","clusteredCount","isStacked","dataSeries","seriesColorsMap","defaultColor","len","bars","areas","pointGeometriesIndex","barGeometriesIndex","lineGeometriesIndex","areaGeometriesIndex","geometriesCounts","areasPoints","linePoints","ds","getSpecById","seriesColorKey","isBarSeriesSpec","yAxis","getAxesSpecForSpecId","identity","renderedBars","key","mergeGeometriesIndexes","isLineSeriesSpec","lineShift","lineSeriesStyle","renderedLines","Boolean","isAreaSeriesSpec","areaShift","areaSeriesStyle","renderedAreas","geometriesIndex","xAxis","__values","_c","next","done","iterables","_i","iterables_1","iterables_1_1","iterable","iterable_1","iterable_1_1","mutableGeometriesIndex","geometry","existing","upsertGeometry","Array","isArray","isHorizontalRotation","isVerticalRotation","isLineAreaOnlyChart","specs","some","seriesType","updateDeselectedDataSeries","seriesIndex","updatedSeries","splice","computeSeriesGeometries","seriesColorMap","chartDims","chartColors","colors","scales","stacked","nonStacked","countBarsInCluster","stackedBarsInCluster","stackedGeometriesIndex","nonStackedGeometriesIndex","dataSeriesGroup","counts","geometries","defaultVizColor","barSeries","computeChartTransform","rotate","computeBrushExtent","chartTransform","minX","minY","maxX","maxY","isChartAnimatable","animationEnabled","clear","delete","size","entries","__@toStringTag","toLocaleString","pop","join","reverse","every","filter","reduceRight","find","copyWithin","__@unscopables","toExponential","toPrecision","compareByValueAsc","firstEl","secondEl","clamp","RectAnnotationSpecComponent","LineSeriesSpecComponent","addSeriesSpec","prevProps","removeSeriesSpec","hideInLegend","BarSeriesSpecComponent","AreaSeriesSpecComponent","d3_scale_1","ScaleBand","overrideBandwidth","d3Scale","scaleBand","safeBarPadding","paddingInner","paddingOuter","step","invertedScale","scaleQuantize","minInterval","invert","invertWithStep","isOrdinalScale","domain_1","mainXScaleType","convertXScaleTypes","seriesXComputedDomains","computeOrdinalDataDomain","computeContinuousDataDomain","__read","computedDomainMin","computedDomainMax","findMinInterval","isBandScale","timeZone","valuesLength","sortedValues","interval","seriesTypes","Set","scaleTypes","timeZones","formatNonStackedDataValues","scaleToExtent","formattedValues","formattedValue","formatNonStackedDataSeriesValues","dataseries","getYValueStackMap","stackMap","stack","computeYStackedMapValues","yValueStackMap","stackedValues","yStackArray","xValue","stackArray","stackedValue","currentValue","formatStackedDataSeriesValues","newData","computedY0","stackY","stackedY1","stackedY0","classnames_1","specs_parser_1","chart_state_1","annotation_tooltips_1","chart_resizer_1","crosshair_1","highlighter_1","legend_1","legend_button_1","reactive_chart_1","reactive_chart_2","tooltips_1","call","chartSpecStore","ChartStore","containerStyle","chartClass","Provider","Fragment","SpecsParser","ChartResizer","Crosshair","ReactiveChart","Tooltips","AnnotationTooltip","Legend","LegendButton","Highlighter","Component","SpecsSpecRootComponent","state","getDerivedStateFromProps","specsInitialized","computeChart","initialized","mobx_1","tooltip_1","light_theme_1","dimensions_1","interactions_1","annotation_utils_1","crosshair_utils_1","observable","box","parentDimensions","isBrushing","brushExtent","chartRendering","axesTicksDimensions","axesPositions","axesVisibleTicks","axesTicks","axesGridLinesPositions","annotationSpecs","annotationDimensions","legendItems","highlightedLegendItemKey","selectedLegendItemKey","tooltipData","array","deep","tooltipType","DEFAULT_TOOLTIP_TYPE","tooltipSnap","DEFAULT_TOOLTIP_SNAP","tooltipPosition","object","rawCursorPosition","cursorPosition","cursorBandPosition","cursorLinePosition","geometriesIndexKeys","highlightedGeometries","animateData","canDataBeAnimated","legendCollapsed","showLegendDisplayValue","toggleLegendCollapsed","action","setCursorPosition","seriesDomainsAndData","TooltipType","None","xPos","yPos","xAxisCursorPosition","getValidXPosition","yAxisCursorPosition","getValidYPosition","clearTooltipAndHighlighted","isLineAreaOnly","updatedCursorBand","getCursorBandPosition","isTooltipSnapEnabled","assign","updatedCursorLine","getCursorLinePosition","updatedTooltipPosition","getTooltipPosition","elements","xValueInfo","oneHighlighted","newHighlightedGeometries","tooltipValues","isHighlighted","isFollowTooltipType","formattedTooltip","formatTooltip","annotationTooltip","annotationTooltipState","AnnotationTypes","Rectangle","onElementOverListener","areIndexedGeometryArraysEquals","toJS","onElementOutListener","document","body","cursor","legendItemTooltipValues","computed","getSeriesTooltipValues","tooltipState","computeAnnotationTooltipState","isTooltipVisible","isCrosshairVisible","isCrosshairTooltipType","setShowLegend","selectedLegendItem","onLegendItemOver","legendItemKey","onLegendItemOverListener","currentLegendItem","listenerData","onLegendItemOut","onLegendItemOutListener","onLegendItemClick","onLegendItemClickListener","onLegendItemPlusClick","onLegendItemPlusClickListener","onLegendItemMinusClick","onLegendItemMinusClickListener","toggleSingleSeries","legendItem","toggleSeriesVisibility","setSeriesColor","specCustomSeriesColors","onBrushStart","onBrushEndListener","onBrushEnd","end","minValue","maxValue","handleChartClick","onElementClickListener","resetDeselectedDataSeries","setOnElementClickListener","listener","setOnElementOverListener","setOnElementOutListener","setOnBrushEndListener","setOnLegendItemOverListener","setOnLegendItemOutListener","setOnLegendItemClickListener","setOnLegendItemPlusClickListener","setOnLegendItemMinusClickListener","removeElementClickListener","removeElementOverListener","removeElementOutListener","removeOnLegendItemOverListener","removeOnLegendItemOutListener","removeOnLegendItemPlusClickListener","removeOnLegendItemMinusClickListener","isBrushEnabled","updateParentDimensions","isChanged","seriesSpec","axisId","annotationSpec","isLineAnnotation","mergedLineStyle","mergeWithDefaultAnnotationLine","isRectAnnotation","mergedRectStyle","mergeWithDefaultAnnotationRect","seriesDomains","getSeriesColorMap","computeLegend","computeChartDimensions","seriesGeometries","axisTicksPositions","updatedAnnotationDimensions","computeAnnotationDimensions","getSeriesColorLabel","hasSingleSeries","seriesColor","getSortedDataSeriesColorsValuesMap","isSeriesVisible","isLegendItemVisible","raw","lastValue","formatted","seriesTooltipValues","tooltipValue","emptyFormatter","searchIndexValue","isXValue","vLeftAxisSpecWidth","vRightAxisSpecWidth","hTopAxisSpecHeight","hBottomAxisSpecHeight","vMargin","hMargin","legendTopMargin","legendLeftMargin","computeYDomainLineAnnotationDimensions","dataValues","lineOverflow","lineColor","isHorizontalChartRotation","markerOffsets","lineProps","dataValue","details","detailsText","headerText","header","scaledYValue","isNaN","domainStart","domainEnd","yDomainPosition","leftHorizontalAxis","rightHorizontaAxis","baseLinePosition","linePosition","markerPosition","markerTransform","getAnnotationLineTooltipTransform","lineProp","icon","tooltipLinePosition","computeXDomainLineAnnotationDimensions","isContinuous","scaledXValue","xDomainPosition","startMarkerY","endMarkerY","computeLineAnnotationDimensions","domainType","DEFAULT_LINE_OVERFLOW","stroke","AnnotationDomainTypes","XDomain","scaleAndValidateDatum","scaledValue","computeRectAnnotationDimensions","rectsProps","x0","x1","x0Scaled","x1Scaled","y0Scaled","y1Scaled","xOffset","rectDimensions","rect","getAnnotationAxis","annotationAxis","isXDomain","isWithinLineBounds","startX","startY","endX","endY","isXDomainAnnotation","getRotatedCursor","isCursorWithinXBounds","isCursorWithinYBounds","isCursorWithinMarkerXBounds","isCursorWithinMarkerYBounds","markerWidth","markerHeight","markerWidthOffset","markerHeightOffset","bottomAxisYBounds","topAxisYBounds","leftAxisXBounds","rightAxisXBounds","getAnnotationLineTooltipXOffset","isHorizontalAxis","isChartHorizontalRotation","getAnnotationLineTooltipYOffset","getAnnotationLineTooltipPosition","xPosition","yPosition","yOffset","toTransformString","computeLineAnnotationTooltipState","annotationLines","isVisible","Line","lineOffset","strokeWidth","tooltipStartX","tooltipStartY","tooltipEndX","tooltipEndY","YDomain","flippedYDomainTooltipLinePosition","rotatedXDomainTooltipLinePosition","rotatedYDomainTooltipLinePosition","isWithinRectBounds","withinXBounds","withinYBounds","isRightRectTooltip","isBottomRectTooltip","computeRectTooltipLeft","isRightTooltip","cursorX","horizontalLeft","computeRectTooltipTop","isBottomTooltip","cursorY","verticalTop","computeRectTooltipOffset","offsetLeft","offsetTop","computeRectAnnotationTooltipState","annotationRects","renderTooltip","rectProps","tooltipLeft","tooltipTop","annotations","annotationAxisPosition","isVerticalAnnotationLine","annotationDimensions_1","annotationDimensions_1_1","annotationDimension","lineAnnotationTooltipState","rectAnnotationTooltipState","getSnapPosition","band","DEFAULT_SNAP_POSITION_BAND","getHorizontalTooltipPosition","cursorXPosition","isHorizontalRotated","getVerticalTooltipPosition","cursorYPosition","snapEnabled","invertedValue","snappedPosition","hPosition","vPosition","AnnotationTooltipComponent","LineAnnotationTooltip","RectAnnotationTooltip","renderAnnotationLineMarkers","markers","markerElement","renderAnnotationMarkers","lineMarkers","observer","debounce_1","resize_observer_polyfill_1","Resizer","onResize","contentRect","containerRef","ro","observe","unobserve","boxSizing","CrosshairComponent","renderBand","crosshair","visible","Crosshairs","VerticalCursor","background","borderTopWidth","borderTopColor","borderTopStyle","dash","borderLeftWidth","borderLeftColor","borderLeftStyle","HighlighterComponent","geom","cx","cy","r","eui_1","legend_element_1","LegendComponent","onCollapseLegend","onLegendItemMouseover","onLegendItemMouseout","renderLegendElement","legendItemGrow","containerProps","LegendElement","paddingStyle","legendClasses","elasticChartsLegend--collapsed","elasticChartsLegend--debug","paddingTop","paddingBottom","paddingLeft","paddingRight","EuiFlexGroup","gutterSize","responsive","legendItemProps","elasticChartsLegendList__item--hidden","onMouseEnter","onMouseLeave","EuiFlexItem","LegendElementComponent","closeColorPicker","setState","isColorPickerOpen","toggleColorPicker","onLegendTitleClick","onLegendItemPanelClose","console","log","onColorPickerChange","renderPlusButton","EuiButtonIcon","onClick","iconType","aria-label","renderMinusButton","onVisibilityClick","event","shiftKey","renderVisibilityButton","renderDisplayValue","show","EuiText","_d","onTitleClick","isSelected","titleClassNames","colorDotProps","colorDot","EuiIcon","displayValueClassNames","alignItems","justifyContent","grow","EuiPopover","button","isOpen","closePopover","panelPaddingSize","anchorPosition","EuiContextMenuPanel","EuiColorPicker","onChange","LegendButtonComponent","elasticChartsLegend__toggle--isOpen","react_konva_1","area_geometries_1","bar_geometries_1","bar_values_1","grid_1","line_geometries_1","limitPoint","getPoint","extent","layerX","layerY","firstRender","brushing","brushStart","brushEnd","renderBarSeries","getHighlightedLegendItem","element","BarGeometries","animated","renderLineSeries","LineGeometries","renderAreaSeries","AreaGeometries","renderAxes","axesComponents","renderGrids","gridComponents","Grid","gridLineStyle","linesPositions","renderAnnotations","annotationElements","annotation","lineStyle","rectStyle","rects","renderBarValues","BarValues","renderBrushTool","Rect","onStartBrusing","window","addEventListener","onEndBrushing","evt","removeEventListener","onBrushing","renderDebugChartBorders","listening","sortAndRenderElements","elemIdxA","elemIdxB","elemIdx","clippings","clipX","clipY","clipWidth","clipHeight","brushProps","onMouseDown","onMouseMove","layerClippings","nativeEvent","Stage","Layer","hitGraphEnabled","renderprops_konva_cjs_1","rendering_props_utils_1","barSeriesRef","renderAreaPoints","themeIsVisible","glyph","pointStyleProps","buildPointStyleProps","areaPoints","areaIndex","areaPointElements","areaPoint","pointIndex","Group","Spring","native","from","to","pointProps","buildAreaPointProps","Circle","renderAreaGeoms","areasToRender","areaProps","buildAreaProps","areaPath","xTransform","Path","renderAreaLines","linesToRender","customOpacity","geometryStyle","linePath","lineIndex","buildAreaLineProps","overPoint","GlobalKonvaElementProps","strokeHitEnabled","perfectDrawEnabled","renderTickLabel","labelStyle","tickLabelProps","centeredRectProps","textProps","Text","renderTickLine","tickLineStyle","renderAxis","renderAxisLine","renderAxisTitle","axisLineStyle","renderHorizontalAxisTitle","renderVerticalAxisTitle","titleStyle","renderBarGeoms","overBar","bar","border","barProps","buildBarProps","borderEnabled","displayValueProps","buildBarValueProps","barHeight","barWidth","debugProps","renderGridLine","mergeWithDefaultGridLineConfig","DEFAULT_GRID_LINE_CONFIG","renderGrid","renderAnnotationLine","lineConfig","renderAnnotation","renderLinePoints","linePointsElements","linePoint","buildLinePointProps","renderLineGeoms","lineElements","reset","buildLineProps","renderAnnotationRect","textAnchor","dominantBaseline","x2","y2","translation","orientation","renderHoriziontalAxisTitle","translate","renderAnimatedBars","geoms","warn","TooltipsComponent","classes","elasticChartsTooltip__rowHighlighted","ScaleType","theme_commons_1","DEFAULT_CHART_PADDING","DEFAULT_CHART_MARGINS","DEFAULT_MISSING_COLOR","DEFAULT_GEOMETRY_STYLES","vizColors","palettes","euiPaletteColorBlind","simple_noise_1","frequency","generator","Simple1DNoise","totalPoints","group","getValue","generateGroupedSeries","totalGroups","curr","maxVertices","amplitude","maxVerticesMask","scaledX","xFloor","floor","t","tRemapSmoothstep","xMin","xMax","lerp","Line Chart@multi series with log values (limit 0 or negative values)","Line Chart@stacked w axis and legend","Line Chart@multiple w axis and legend","Line Chart@curved w axis and legend","Line Chart@w axis and legend","Line Chart@linear w axis","Line Chart@ordinal w axis","Line Chart@w axis","Line Chart@basic","test_dataset_tsvb_1","TSVB_DATASET","Area Chart@stacked only grouped areas","Area Chart@stacked band area chart","Area Chart@band area chart","Area Chart@[test] - time","Area Chart@[test] - linear","Area Chart@stacked with separated specs - same naming","Area Chart@stacked with separated specs","Area Chart@stacked w axis and legend","Area Chart@w axis and legend","Area Chart@with 4 axes","Area Chart@with log y axis","Area Chart@with linear x axis","Area Chart@with time x axis","Area Chart@basic","data3","allMetrics","Axis@customizing domain limits [only one bound defined]","Axis@customizing domain limits [mixed ordinal & linear x domain]","Axis@customizing domain limits [mixed linear chart]","Axis@w many tick labels","Axis@with multi axis different tooltip formats","Axis@with multi axis bar/lines","Axis@with multi axis","Axis@4 axes","Axis@tick label rotation","Axis@basic","createThemeAction","renderAxisWithOptions","seriesGroup","axisTitle","axisProps","customTheme","leftDomain","rightDomain1","rightDomain2","right1Domain","Mixed Charts@[test] - bar/lines time","Mixed Charts@[test] - bar/lines linear","Mixed Charts@areas and bars","Mixed Charts@lines and areas","Mixed Charts@bar and lines","formatters_1","Legend@display values in legend elements","Legend@hide legend items by series","Legend@changing specs","Legend@top","Legend@left","Legend@bottom","Legend@right","splitSeries","hideBarSeriesInLegend","hideLineSeriesInLegend","tsvbSeries","namesArray","seriesComponents","nameIndex","sortIndex","steps","Interactions@crosshair with time axis","Interactions@brush disabled on ordinal x axis","Interactions@brush selection tool on time charts","Interactions@brush selection tool on bar chart linear","Interactions@brush selection tool on linear","Interactions@click/hovers on legend items [mixed chart]","Interactions@click/hovers on legend items [line chart]","Interactions@click/hovers on legend items [area chart]","Interactions@click/hovers on legend items [bar chart]","Interactions@line area bar point clicks and hovers","Interactions@line point clicks and hovers","Interactions@area point clicks and hovers","Interactions@bar clicks and hovers","addon_actions_1","theme_service_1","test_dataset_1","onElementListeners","onElementClick","onElementOver","onElementOut","onLegendItemListeners","hasAdditionalG1Value","seriesData","g1","g2","now","niceTimeFormatter","oneDay","hideBars","switchTheme","90","0","-90","180","numberFormatter","cross","vertical","follow","Follow","none","bucket_size","timeRange","app","field","metricAgg","units","format","hasCalculation","isDerivative","kibana_average_concurrent_connections","kibana_process_delay","kibana_memory","kibana_response_times","kibana_requests","kibanaSummary","uuid","host","transport_address","version","snapshot","status","availability","os_memory_free","uptime","Rotations@180 deg linear","Rotations@90 deg linear","Rotations@0 deg linear","Rotations@-90 deg linear","Rotations@180 deg ordinal","Rotations@90 deg ordinal","Rotations@0 deg ordinal","Rotations@-90 deg ordinal","Rotations@with ordinal axis","0 deg(default)","Stylings@custom series styles: area","Stylings@custom series styles: lines","Stylings@custom series styles: bars","Stylings@custom series colors through spec props","Stylings@theme/style","Stylings@axis","Stylings@margins and paddings","generateLineSeriesStyleKnobs","groupName","generateAreaSeriesStyleKnobs","dg","colorBlind","darkBackground","euiPaletteForDarkBackground","lightBackground","euiPaletteForLightBackground","forStatus","euiPaletteForStatus","barCustomSeriesColors","barDataSeriesColorValues","lineCustomSeriesColors","lineDataSeriesColorValues","customBarColorKnob","customLineColorKnob","useOnlyChartTheme","barSeriesStyle1","barSeriesStyle2","dataset1","dataset2","dataset3","lineSeriesStyle1","lineSeriesStyle2","areaStyle1","areaStyle2","Grids@multiple axes with the same position","Grids@basic","generateGridLineConfig","leftAxisGridLineConfig","rightAxisGridLineConfig","topAxisGridLineConfig","bottomAxisGridLineConfig","leftAxisGridLineConfig2","Annotations@[rect] styling","Annotations@[rect] basic annotation (line)","Annotations@[rect] basic annotation (bar)","Annotations@[line] styling","Annotations@[line] time series","Annotations@[line] basic yDomain","Annotations@[line] basic xDomain ordinal","Annotations@[line] basic xDomain continuous","generateAnnotationData","isLeft","dashWidth","dashGapWidth","alert","asterisk","questionInCircle","definedCoordinate","yAxisTitle","yAxisPosition","isBottom","xAxisTitle","xAxisPosition","hasCustomTooltip","tooltipStyle","backgroundColor","overflow","overflowWrap","Scales@x scale year scale: custom timezone - same zone tooltip","Scales@x scale: UTC Time zone - UTC tooltip","Scales@x scale: UTC Time zone - local tooltip","Scales@line chart with different timezones","today","Date","getTime","UTC_DATE","UTC_PLUS8_DATE","setZone","UTC_MINUS8_DATE","UTC_DATASET","CURRENT_TIMEZONE_DATASET","OTHER_PLUS8_TIMEZONE_DATASET","OTHER_MINUS8_TIMEZONE_DATASET","tooltipFn","timezones","utc","local","utcplus8","utcminus8","datasetSelected","tooltipSelected","fromMillis","toFormat","toUTC","info","toISO","defaultLine","defaultDetails","mergedConfig","DEFAULT_ANNOTATION_RECT_STYLE","chartDimension","areIndexedGeomsEquals","ig1","ig2","arePointsEqual","areBarEqual","arr1","arr2","nonstacked_series_utils_1","stacked_series_utils_1","accessors","colorAccessors","isMultipleY","colorsValues","splitSeriesLastValues","getAccessorsValues","getColorValues","colorValuesKey","cleanedDatum","cleanDatum","updateSeriesMap","rawDataSeries","seriesMap","seriesKeyString","yAccessorValue","yAccessor","y0Accessor","getRawDataSeries","lineSeries","areaSeries","seriesSpecsCount","colorValuesMap","seriesColorsArray","seriesA","seriesB","colorValuesA","colorValuesB","specSortIndex","specsByGroupIds","splitSpecsByGroupId","specsByGroupIdsEntries","stackedFormattedDataSeries","nonStackedFormattedDataSeries","groupSpecs","stackedDataSeries","nonStackedDataSeries","currentRawDataSeries","seriesValues","seriesSpecs_1","seriesSpecs_1_1","customColors","counter","globals_1","pointStrokeWidth","strokeEnabled","lineCap","lineJoin","rotateBarValueProps","barDimensions","displayValueDimensions","displayValueHeight","displayValueX","displayValueY","rotatedDisplayValueX","getBarValueClipDimensions","computedDimensions","isBarValueOverflow","clip","valuePosition","isOverflowX","isOverflowY","displayValueOffsetY","displayValueOffsetX","BARCHART_1Y0G_LINEAR","BARCHART_1Y1G_ORDINAL","BARCHART_1Y1G_LINEAR","CHART_ORDINAL_2Y0G","NOW","TIME_CHART_2Y0G","DAY","eui_theme_dark_css_1","eui_theme_light_css_1","unuse","use","scale_band_1","nonStackedBarsInCluster","ns","rangeDiff","isInverse","dividend","ScaleContinuous","yDomains","__export","chart_1","dark_theme_1","CurveType","data_generator_1","specs_2","1","freeze","updateChartStore","rendering","SettingsComponent","isLegendItemsSortDesc","d3_array_1","SCALES","scaleLinear","scaleLog","scaleSqrt","scaleUtc","limitLogScaleDomain","limitToMin","positive","bandwidthPadding","startDomain","endDomain","offset_1","shiftedDomainMin","minutes","shiftedDomainMax","rawTicks","hasHourTicks_1","currentDateTime","fromJSDate","currentOffset","minus","intervalCount","leftIndex","bisectLeft","prevValue1","nextValue1","nextValue","prevValue","isContinuousScale","d3_collection_1","computeDomainExtent","computedDomain","sorted","removeNull","uniqueValues","computeStackedContinuousDomain","nest","rollup","sum","getDataSeriesOnGroup","coerceYScaleTypes","coerceYScale","yValues","groupYScaleType","isStackedScaleToExtent","stackedDomain","stackMap_1","stackMap_1_1","stackValues","computeYStackedDomain","isNonStackedScaleToExtent","nonStackedDomain","groupDomain","customDomain","l","geometryValue","dataSeriesValues","legendItemSeriesKey","legendItemSpecId","geometrySeriesKey","hasSameSpecId","hasSameSeriesKey","Option_1","rootElement","scaledFontSize","offscreenCanvas","context","getContext","attachedRoot","documentElement","appendChild","scalingFactor","font","measure","measureText","removeChild","curveType","curveCardinal","curveNatural","curveMonotoneX","curveMonotoneY","curveBasis","curveCatmullRom","curveStep","curveStepAfter","curveStepBefore","curveLinear","minDate","maxDate","niceTimeFormat","Interval","fromDateTimes","count","days","invalidReason","invalidExplanation","isValid","abutsEnd","abutsStart","contains","difference","divideEqually","engulfs","equals","hasSame","intersection","isAfter","isBefore","isEmpty","overlaps","splitAt","splitBy","toDuration","union","mapEndpoints","lineWidth","addon_info_1","addon_options_1","withOptions","url","addonPanelInRight","sidebarAnimations","withKnobs","withInfo","inline","source","styles","infoBody","marginTop","marginBottom","configure","./nestedObjectAssign","./nestedObjectAssign.js"],"mappings":"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AAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,QAAA,IACAC,aAAA,IACAC,gB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AAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,WAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,WAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,WAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,WAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,WAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,WAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,WAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,WAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,UAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,WAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,OAItB2rD,qBAAsB,CACpB,CACEV,YAAa,aACbC,UAAW,CAAErlD,IAAK,UAAe1B,IAAK,YACtCU,OAAQ,CACNsmD,IAAK,SACLC,MAAO,wCACPC,UAAW,MACXvmD,MAAO,mBACPwE,YAAa,sCACbgiD,MAAO,KACPC,OAAQ,SACRC,gBAAgB,EAChBC,cAAc,GAEhBzrD,KAAM,CACJ,CAAC,UAAe,mBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,kBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,mBAChB,CAAC,WAAe,iBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,WAAe,mBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,oBAChB,CAAC,WAAe,oBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,kBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,mBAChB,CAAC,WAAe,oBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,WAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,kBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,oBAChB,CAAC,WAAe,oBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,oBAChB,CAAC,WAAe,eAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,WAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,WAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,UAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,oBAChB,CAAC,WAAe,kBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,mBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,oBAChB,CAAC,YAAe,uBAItB4rD,cAAe,CACb,CACEX,YAAa,aACbC,UAAW,CAAErlD,IAAK,UAAe1B,IAAK,YACtCU,OAAQ,CACNsmD,IAAK,SACLC,MAAO,8CACPC,UAAW,MACXvmD,MAAO,kBACPvB,MAAO,cACP+F,YAAa,mDACbgiD,MAAO,IACPC,OAAQ,UACRC,gBAAgB,EAChBC,cAAc,GAEhBzrD,KAAM,CACJ,CAAC,UAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,WAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,WAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,WAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,WAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,WAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,WAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,WAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,WAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,WAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,UAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,YAAe,YAChB,CAAC,WAAe,YAChB,CAAC,YAAe,YAChB,CAAC,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,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,WAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,WAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,WAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,KAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,WAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,WAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,KAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,WAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,WAAe,IAChB,CAAC,YAAe,KAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,KAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB,CAAC,YAAe,IAChB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Ae,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,SAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,MAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,IAChB,CAAC,WAAe,GAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,UAAe,IAChB,CAAC,WAAe,GAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,UAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,UAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,UAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,UAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,SAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,UAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,UAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,UAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,UAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,UAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,UAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,UAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,UAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,UAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,SAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,UAAe,IAChB,CAAC,WAAe,GAChB,CAAC,WAAe,IAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,IAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,IAElBo6B,OAAO,EACP3N,MAAO,CAAEkqB,MAAM,EAAMl1C,KAAM,GAAK0/D,UAAW,EAAG3Y,OAAO,GACrD3+B,OAAQ,CAAE8sB,MAAM,EAAMvsB,OAAQ,EAAG+2C,UAAW,GAC5C1wC,KAAM,CAAEkmB,MAAM,EAAOl1C,KAAM,GAAK0/D,UAAW,IAE7C,CACE7gE,GAAI,2CACJwE,MAAO,MACPpD,MAAO,kBACP1B,KAAM,CACJ,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,SAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,IAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,IAChB,CAAC,SAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,GAChB,CAAC,UAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,GAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,UAAe,IAChB,CAAC,WAAe,GAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,UAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,UAAe,GAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,UAAe,GAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,GAChB,CAAC,UAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,UAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,GAChB,CAAC,WAAe,IAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,SAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,IAElBo6B,OAAO,EACP3N,MAAO,CAAEkqB,MAAM,EAAMl1C,KAAM,GAAK0/D,UAAW,EAAG3Y,OAAO,GACrD3+B,OAAQ,CAAE8sB,MAAM,EAAMvsB,OAAQ,EAAG+2C,UAAW,GAC5C1wC,KAAM,CAAEkmB,MAAM,EAAOl1C,KAAM,GAAK0/D,UAAW,IAE7C,CACE7gE,GAAI,2CACJwE,MAAO,MACPpD,MAAO,iBACP1B,KAAM,CACJ,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,SAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,SAAe,IAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,IAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,GAChB,CAAC,WAAe,IAChB,CAAC,UAAe,GAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,IAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,IAChB,CAAC,WAAe,GAChB,CAAC,WAAe,IAChB,CAAC,WAAe,IAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,IAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,SAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,IAElBo6B,OAAO,EACP3N,MAAO,CAAEkqB,MAAM,EAAMl1C,KAAM,GAAK0/D,UAAW,EAAG3Y,OAAO,GACrD3+B,OAAQ,CAAE8sB,MAAM,EAAMvsB,OAAQ,EAAG+2C,UAAW,GAC5C1wC,KAAM,CAAEkmB,MAAM,EAAOl1C,KAAM,GAAK0/D,UAAW,IAE7C,CACE7gE,GAAI,2CACJwE,MAAO,MACPpD,MAAO,iBACP1B,KAAM,CACJ,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,SAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,SAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,IAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,IAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,SAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,IAElBo6B,OAAO,EACP3N,MAAO,CAAEkqB,MAAM,EAAMl1C,KAAM,GAAK0/D,UAAW,EAAG3Y,OAAO,GACrD3+B,OAAQ,CAAE8sB,MAAM,EAAMvsB,OAAQ,EAAG+2C,UAAW,GAC5C1wC,KAAM,CAAEkmB,MAAM,EAAOl1C,KAAM,GAAK0/D,UAAW,IAE7C,CACE7gE,GAAI,2CACJwE,MAAO,MACPpD,MAAO,eACP1B,KAAM,CACJ,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,SAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,SAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,UAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GAChB,CAAC,WAAe,GA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","file":"main.0e23a8ec99b37364a616.bundle.js","sourcesContent":["\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/lib/loader.js!./index.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"attrs\":{\"nonce\":\"Pk1rZ1XDlMuYe8ubWV3Lh0BzwrTigJQ=\"},\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/lib/loader.js!./index.scss\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/lib/loader.js!./index.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".elasticChartsLegend {\\n  position: absolute;\\n  display: flex;\\n  align-items: flex-start;\\n  flex-direction: row; }\\n\\n.elasticChartsLegend--collapsed {\\n  width: 32px !important;\\n  height: 32px !important; }\\n  .elasticChartsLegend--collapsed .elasticChartsLegendList {\\n    display: none; }\\n\\n.elasticChartsLegend--debug {\\n  background: red; }\\n\\n.elasticChartsLegend--top {\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  width: 100%;\\n  height: 64px;\\n  flex-direction: column;\\n  order: 1; }\\n  .elasticChartsLegend--top .elasticChartsLegendList__item {\\n    min-height: 26px;\\n    height: 26px;\\n    width: 160px;\\n    min-width: 160px; }\\n\\n.elasticChartsLegend--bottom {\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  width: 100%;\\n  height: 64px;\\n  flex-direction: column; }\\n  .elasticChartsLegend--bottom .elasticChartsLegendList__item {\\n    min-height: 26px;\\n    height: 26px;\\n    width: 160px;\\n    min-width: 160px; }\\n\\n.elasticChartsLegend--left {\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  width: 160px;\\n  order: 1; }\\n  .elasticChartsLegend--left .elasticChartsLegendList__item {\\n    min-height: 32px;\\n    height: 32px;\\n    min-width: 100%;\\n    width: 100%; }\\n\\n.elasticChartsLegend--right {\\n  top: 0;\\n  bottom: 0;\\n  right: 0;\\n  width: 160px; }\\n  .elasticChartsLegend--right .elasticChartsLegendList__item {\\n    min-height: 32px;\\n    height: 32px;\\n    min-width: 100%;\\n    width: 100%; }\\n\\n.elasticChartsLegendCollapser {\\n  width: 32px;\\n  height: 32px;\\n  flex-shrink: 0;\\n  flex-grow: 0; }\\n\\n.elasticChartsLegendCollapser--top {\\n  order: 2; }\\n\\n.elasticChartsLegendCollapser--left {\\n  order: 2; }\\n\\n.elasticChartsLegendListContainer {\\n  overflow: hidden;\\n  flex-shrink: 1;\\n  flex-grow: 0;\\n  max-width: 100%; }\\n\\n.elasticChartsLegendList {\\n  overflow-y: auto;\\n  overflow-x: hidden;\\n  height: 100%;\\n  max-width: 100%;\\n  width: 100%;\\n  scrollbar-width: thin; }\\n  .elasticChartsLegendList::-webkit-scrollbar {\\n    width: 16px;\\n    height: 16px; }\\n  .elasticChartsLegendList::-webkit-scrollbar-thumb {\\n    background-color: rgba(105, 112, 125, 0.5);\\n    border: 6px solid transparent;\\n    background-clip: content-box; }\\n  .elasticChartsLegendList::-webkit-scrollbar-corner, .elasticChartsLegendList::-webkit-scrollbar-track {\\n    background-color: transparent; }\\n\\n.elasticChartsLegendList__item {\\n  cursor: pointer;\\n  height: 24px;\\n  width: 160px;\\n  min-width: 160px; }\\n  .elasticChartsLegendList__item:hover .elasticChartsLegendListItem__title {\\n    text-decoration: underline; }\\n  .elasticChartsLegendList__item.elasticChartsLegendList__item--hidden {\\n    display: none; }\\n\\n.elasticChartsLegendListItem__title {\\n  width: 96px;\\n  max-width: 96px; }\\n  .elasticChartsLegendListItem__title.elasticChartsLegendListItem__title--selected {\\n    text-decoration: underline; }\\n  .elasticChartsLegendListItem__title.elasticChartsLegendListItem__title--hasDisplayValue {\\n    width: 64px;\\n    max-width: 64px; }\\n\\n.elasticChartsLegendListItem__displayValue {\\n  text-align: right; }\\n  .elasticChartsLegendListItem__displayValue.elasticChartsLegendListItem__displayValue--hidden {\\n    display: none; }\\n\\n.elasticChartsLegend__toggle {\\n  border-radius: 4px;\\n  border-bottom-right-radius: 0;\\n  border-top-left-radius: 0;\\n  border-bottom-left-radius: 0;\\n  position: absolute;\\n  bottom: 0;\\n  left: 0;\\n  opacity: 0;\\n  background-color: #FFF;\\n  transition: opacity 150ms cubic-bezier(0.694, 0.0482, 0.335, 1), background-color 150ms cubic-bezier(0.694, 0.0482, 0.335, 1) 500ms; }\\n  .elasticChartsLegend__toggle:focus {\\n    box-shadow: none;\\n    background-color: tintOrShade(#006BB4, 90%, 50%) !important; }\\n\\n.elasticChartsLegend__toggle--isOpen {\\n  background-color: rgba(52, 55, 65, 0.1); }\\n\\n.elasticChartsTooltip {\\n  box-shadow: 0 12px 24px 0 rgba(0, 0, 0, 0.1), 0 6px 12px 0 rgba(0, 0, 0, 0.1), 0 4px 4px 0 rgba(0, 0, 0, 0.1), 0 2px 2px 0 rgba(0, 0, 0, 0.1);\\n  font-size: 12px;\\n  font-size: 0.75rem;\\n  line-height: 1.5;\\n  pointer-events: none;\\n  position: absolute;\\n  z-index: 9000;\\n  background-color: rgba(64, 64, 64, 0.9);\\n  color: #FFF;\\n  border-radius: 4px;\\n  max-width: 320px;\\n  overflow: hidden;\\n  overflow-wrap: break-word;\\n  transition: opacity 250ms;\\n  user-select: none; }\\n  .elasticChartsTooltip table td,\\n  .elasticChartsTooltip table th {\\n    padding: 3px; }\\n  .elasticChartsTooltip table {\\n    width: 100%; }\\n\\n.elasticChartsTooltip__label {\\n  font-weight: 500;\\n  color: #cccccc;\\n  border-left: 3px solid red; }\\n\\n.elasticChartsTooltip__rowHighlighted {\\n  background-color: #cccccc;\\n  color: #1a1a1a; }\\n  .elasticChartsTooltip__rowHighlighted .elasticChartsTooltip__label {\\n    color: #1a1a1a; }\\n\\n.elasticChartsTooltip--hidden {\\n  opacity: 0; }\\n\\n.elasticChartsTooltip__header {\\n  margin: 0;\\n  background: rgba(204, 204, 204, 0.9);\\n  color: #000;\\n  padding: 0 8px; }\\n\\n.elasticChartsTooltip__table {\\n  margin: 4px; }\\n\\n.elasticChartsCrosshair {\\n  position: absolute;\\n  pointer-events: none; }\\n\\n.elasticChartsCrosshair__band {\\n  position: absolute;\\n  pointer-events: none; }\\n\\n.elasticChartsCrosshair__line {\\n  position: absolute;\\n  pointer-events: none;\\n  z-index: 8000;\\n  background: 'transparent'; }\\n\\n.elasticChartsHighlighter {\\n  position: absolute;\\n  z-index: 1000;\\n  pointer-events: none;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  width: 100%;\\n  height: 100%; }\\n\\n.elasticChartsAnnotation {\\n  font-size: 12px;\\n  font-size: 0.75rem;\\n  line-height: 1.5;\\n  pointer-events: none;\\n  position: absolute;\\n  z-index: 9000;\\n  max-width: 320px;\\n  overflow: hidden;\\n  overflow-wrap: break-word;\\n  transition: opacity 250ms;\\n  user-select: none; }\\n\\n.elasticChartsAnnotation--hidden, .elasticChartsAnnotation__tooltip--hidden {\\n  opacity: 0; }\\n\\n.elasticChartsAnnotation__tooltip {\\n  box-shadow: 0 12px 24px 0 rgba(0, 0, 0, 0.1), 0 6px 12px 0 rgba(0, 0, 0, 0.1), 0 4px 4px 0 rgba(0, 0, 0, 0.1), 0 2px 2px 0 rgba(0, 0, 0, 0.1);\\n  font-size: 12px;\\n  font-size: 0.75rem;\\n  line-height: 1.5;\\n  pointer-events: none;\\n  position: absolute;\\n  z-index: 9000;\\n  background-color: rgba(64, 64, 64, 0.9);\\n  color: #FFF;\\n  border-radius: 4px;\\n  max-width: 320px;\\n  overflow: hidden;\\n  overflow-wrap: break-word;\\n  transition: opacity 250ms;\\n  user-select: none; }\\n\\n.elasticChartsAnnotation__header {\\n  margin: 0;\\n  background: rgba(204, 204, 204, 0.9);\\n  color: #000;\\n  padding: 0 8px; }\\n\\n.elasticChartsAnnotation__details {\\n  margin: 0;\\n  padding: 0 8px;\\n  display: flex; }\\n\\n.elasticChartsAnnotation__detailsMarker {\\n  margin-right: 4px; }\\n\\n.elasticChartsLegend {\\n  position: absolute;\\n  display: flex;\\n  align-items: flex-start;\\n  flex-direction: row; }\\n\\n.elasticChartsLegend--collapsed {\\n  width: 32px !important;\\n  height: 32px !important; }\\n  .elasticChartsLegend--collapsed .elasticChartsLegendList {\\n    display: none; }\\n\\n.elasticChartsLegend--debug {\\n  background: red; }\\n\\n.elasticChartsLegend--top {\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  width: 100%;\\n  height: 64px;\\n  flex-direction: column;\\n  order: 1; }\\n  .elasticChartsLegend--top .elasticChartsLegendList__item {\\n    min-height: 26px;\\n    height: 26px;\\n    width: 160px;\\n    min-width: 160px; }\\n\\n.elasticChartsLegend--bottom {\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  width: 100%;\\n  height: 64px;\\n  flex-direction: column; }\\n  .elasticChartsLegend--bottom .elasticChartsLegendList__item {\\n    min-height: 26px;\\n    height: 26px;\\n    width: 160px;\\n    min-width: 160px; }\\n\\n.elasticChartsLegend--left {\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  width: 160px;\\n  order: 1; }\\n  .elasticChartsLegend--left .elasticChartsLegendList__item {\\n    min-height: 32px;\\n    height: 32px;\\n    min-width: 100%;\\n    width: 100%; }\\n\\n.elasticChartsLegend--right {\\n  top: 0;\\n  bottom: 0;\\n  right: 0;\\n  width: 160px; }\\n  .elasticChartsLegend--right .elasticChartsLegendList__item {\\n    min-height: 32px;\\n    height: 32px;\\n    min-width: 100%;\\n    width: 100%; }\\n\\n.elasticChartsLegendCollapser {\\n  width: 32px;\\n  height: 32px;\\n  flex-shrink: 0;\\n  flex-grow: 0; }\\n\\n.elasticChartsLegendCollapser--top {\\n  order: 2; }\\n\\n.elasticChartsLegendCollapser--left {\\n  order: 2; }\\n\\n.elasticChartsLegendListContainer {\\n  overflow: hidden;\\n  flex-shrink: 1;\\n  flex-grow: 0;\\n  max-width: 100%; }\\n\\n.elasticChartsLegendList {\\n  overflow-y: auto;\\n  overflow-x: hidden;\\n  height: 100%;\\n  max-width: 100%;\\n  width: 100%;\\n  scrollbar-width: thin; }\\n  .elasticChartsLegendList::-webkit-scrollbar {\\n    width: 16px;\\n    height: 16px; }\\n  .elasticChartsLegendList::-webkit-scrollbar-thumb {\\n    background-color: rgba(105, 112, 125, 0.5);\\n    border: 6px solid transparent;\\n    background-clip: content-box; }\\n  .elasticChartsLegendList::-webkit-scrollbar-corner, .elasticChartsLegendList::-webkit-scrollbar-track {\\n    background-color: transparent; }\\n\\n.elasticChartsLegendList__item {\\n  cursor: pointer;\\n  height: 24px;\\n  width: 160px;\\n  min-width: 160px; }\\n  .elasticChartsLegendList__item:hover .elasticChartsLegendListItem__title {\\n    text-decoration: underline; }\\n  .elasticChartsLegendList__item.elasticChartsLegendList__item--hidden {\\n    display: none; }\\n\\n.elasticChartsLegendListItem__title {\\n  width: 96px;\\n  max-width: 96px; }\\n  .elasticChartsLegendListItem__title.elasticChartsLegendListItem__title--selected {\\n    text-decoration: underline; }\\n  .elasticChartsLegendListItem__title.elasticChartsLegendListItem__title--hasDisplayValue {\\n    width: 64px;\\n    max-width: 64px; }\\n\\n.elasticChartsLegendListItem__displayValue {\\n  text-align: right; }\\n  .elasticChartsLegendListItem__displayValue.elasticChartsLegendListItem__displayValue--hidden {\\n    display: none; }\\n\\n.elasticChartsLegend__toggle {\\n  border-radius: 4px;\\n  border-bottom-right-radius: 0;\\n  border-top-left-radius: 0;\\n  border-bottom-left-radius: 0;\\n  position: absolute;\\n  bottom: 0;\\n  left: 0;\\n  opacity: 0;\\n  background-color: #FFF;\\n  transition: opacity 150ms cubic-bezier(0.694, 0.0482, 0.335, 1), background-color 150ms cubic-bezier(0.694, 0.0482, 0.335, 1) 500ms; }\\n  .elasticChartsLegend__toggle:focus {\\n    box-shadow: none;\\n    background-color: tintOrShade(#006BB4, 90%, 50%) !important; }\\n\\n.elasticChartsLegend__toggle--isOpen {\\n  background-color: rgba(52, 55, 65, 0.1); }\\n\\n.elasticChartsTooltip {\\n  box-shadow: 0 12px 24px 0 rgba(0, 0, 0, 0.1), 0 6px 12px 0 rgba(0, 0, 0, 0.1), 0 4px 4px 0 rgba(0, 0, 0, 0.1), 0 2px 2px 0 rgba(0, 0, 0, 0.1);\\n  font-size: 12px;\\n  font-size: 0.75rem;\\n  line-height: 1.5;\\n  pointer-events: none;\\n  position: absolute;\\n  z-index: 9000;\\n  background-color: rgba(64, 64, 64, 0.9);\\n  color: #FFF;\\n  border-radius: 4px;\\n  max-width: 320px;\\n  overflow: hidden;\\n  overflow-wrap: break-word;\\n  transition: opacity 250ms;\\n  user-select: none; }\\n  .elasticChartsTooltip table td,\\n  .elasticChartsTooltip table th {\\n    padding: 3px; }\\n  .elasticChartsTooltip table {\\n    width: 100%; }\\n\\n.elasticChartsTooltip__label {\\n  font-weight: 500;\\n  color: #cccccc;\\n  border-left: 3px solid red; }\\n\\n.elasticChartsTooltip__rowHighlighted {\\n  background-color: #cccccc;\\n  color: #1a1a1a; }\\n  .elasticChartsTooltip__rowHighlighted .elasticChartsTooltip__label {\\n    color: #1a1a1a; }\\n\\n.elasticChartsTooltip--hidden {\\n  opacity: 0; }\\n\\n.elasticChartsTooltip__header {\\n  margin: 0;\\n  background: rgba(204, 204, 204, 0.9);\\n  color: #000;\\n  padding: 0 8px; }\\n\\n.elasticChartsTooltip__table {\\n  margin: 4px; }\\n\\n.elasticCharts {\\n  position: relative;\\n  width: 100%;\\n  height: 100%; }\\n\\n.elasticCharts:hover .elasticChartsLegend__toggle {\\n  opacity: 1; }\\n\", \"\"]);\n\n","\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/lib/loader.js!./style.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"attrs\":{\"nonce\":\"Pk1rZ1XDlMuYe8ubWV3Lh0BzwrTigJQ=\"},\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/lib/loader.js!./style.scss\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/lib/loader.js!./style.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".story-chart {\\n  background: white; }\\n\\n.story-chart-dark {\\n  background: #1D1E24; }\\n\\n#root {\\n  background-color: blanchedalmond; }\\n\\n#story-root {\\n  padding: 20px;\\n  width: 100%;\\n  height: 400px;\\n  position: relative; }\\n\\n#story-root + div table {\\n  border: 1px solid gray; }\\n\\n#story-root + div table th {\\n  border: 1px solid gray;\\n  padding: 5px; }\\n\\n#story-root + div table td {\\n  border: 1px solid gray;\\n  padding: 5px; }\\n\\n.Pane.vertical.Pane1 {\\n  background: red; }\\n\", \"\"]);\n\n","\n  export var withStorySource = require('@storybook/addon-storysource').withStorySource;\n  export var __STORY__ = \"import { boolean, color, number, select } from '@storybook/addon-knobs';\\nimport { storiesOf } from '@storybook/react';\\nimport { DateTime } from 'luxon';\\nimport React from 'react';\\nimport {\\n  Axis,\\n  BarSeries,\\n  Chart,\\n  DARK_THEME,\\n  DataGenerator,\\n  getAxisId,\\n  getGroupId,\\n  getSpecId,\\n  LIGHT_THEME,\\n  LineSeries,\\n  mergeWithDefaultTheme,\\n  niceTimeFormatByDay,\\n  Position,\\n  Rotation,\\n  ScaleType,\\n  Settings,\\n  timeFormatter,\\n} from '../src/';\\nimport * as TestDatasets from '../src/lib/series/utils/test_dataset';\\nimport { KIBANA_METRICS } from '../src/lib/series/utils/test_dataset_kibana';\\nconst dateFormatter = timeFormatter('HH:mm:ss');\\n\\nconst dataGen = new DataGenerator();\\nfunction generateDataWithAdditional(num: number) {\\n  return [...dataGen.generateSimpleSeries(num), { x: num, y: 0.25, g: 0 }, { x: num + 1, y: 8, g: 0 }];\\n}\\nconst frozenDataSmallVolume = generateDataWithAdditional(10);\\nconst frozenDataMediumVolume = generateDataWithAdditional(50);\\nconst frozenDataHighVolume = generateDataWithAdditional(1500);\\n\\nconst frozenData: { [key: string]: any[] } = {\\n  s: frozenDataSmallVolume,\\n  m: frozenDataMediumVolume,\\n  h: frozenDataHighVolume,\\n};\\n\\nstoriesOf('Bar Chart', module)\\n  .add('basic', () => {\\n    const darkmode = boolean('darkmode', false);\\n    const className = darkmode ? 'story-chart-dark' : 'story-chart';\\n    const toggleSpec = boolean('toggle bar spec', true);\\n    const data1 = [{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }];\\n    const data2 = data1.map(datum => ({ ...datum, y: datum.y - 1 }));\\n    const data = toggleSpec ? data1 : data2;\\n    const specId = toggleSpec ? 'bars1' : 'bars2';\\n\\n    return (\\n      <Chart className={className}>\\n        <BarSeries\\n          id={getSpecId(specId)}\\n          name={'Simple bar series'}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={data}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('with value label', () => {\\n    const showValueLabel = boolean('show value label', false);\\n    const isAlternatingValueLabel = boolean('alternating value label', false);\\n    const isValueContainedInElement = boolean('contain value label within bar element', false);\\n    const hideClippedValue = boolean('hide clipped value', false);\\n\\n    const displayValueSettings = {\\n      showValueLabel,\\n      isAlternatingValueLabel,\\n      isValueContainedInElement,\\n      hideClippedValue,\\n    };\\n\\n    const displayValueStyle = {\\n      displayValue: {\\n        fontSize: number('value font size', 10),\\n        fontFamily: `'Open Sans', Helvetica, Arial, sans-serif`,\\n        fontStyle: 'normal',\\n        padding: 0,\\n        fill: color('value color', '#000'),\\n        offsetX: number('offsetX', 0),\\n        offsetY: number('offsetY', 0),\\n      },\\n    };\\n\\n    const barStyle = {\\n      barSeriesStyle: {\\n        ...LIGHT_THEME.barSeriesStyle,\\n        ...displayValueStyle,\\n      },\\n    };\\n\\n    const debug = boolean('debug', true);\\n    const chartRotation = select<Rotation>(\\n      'chartRotation',\\n      {\\n        '0 deg': 0,\\n        '90 deg': 90,\\n        '-90 deg': -90,\\n        '180 deg': 180,\\n      },\\n      0\\n    );\\n\\n    const theme = mergeWithDefaultTheme(barStyle, LIGHT_THEME);\\n    const dataSize = select(\\n      'data volume size',\\n      {\\n        'small volume': 's',\\n        'medium volume': 'm',\\n        'high volume': 'h',\\n      },\\n      's'\\n    );\\n    const data = frozenData[dataSize];\\n\\n    const isSplitSeries = boolean('split series', false);\\n    const isStackedSeries = boolean('stacked series', false);\\n\\n    const splitSeriesAccessors = isSplitSeries ? ['g'] : undefined;\\n    const stackAccessors = isStackedSeries ? ['x'] : undefined;\\n\\n    return (\\n      <Chart renderer=\\\"canvas\\\" className={'story-chart'}>\\n        <Settings theme={theme} debug={debug} rotation={chartRotation} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          displayValueSettings={displayValueSettings}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          splitSeriesAccessors={splitSeriesAccessors}\\n          stackAccessors={stackAccessors}\\n          data={data}\\n          yScaleToDataExtent={false}\\n        />\\n        <BarSeries\\n          id={getSpecId('bars2')}\\n          displayValueSettings={displayValueSettings}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          stackAccessors={['x']}\\n          splitSeriesAccessors={['g']}\\n          data={[\\n            { x: 0, y: 2, g: 'a' },\\n            { x: 1, y: 7, g: 'a' },\\n            { x: 2, y: 3, g: 'a' },\\n            { x: 3, y: 6, g: 'a' },\\n            { x: 0, y: 4, g: 'b' },\\n            { x: 1, y: 5, g: 'b' },\\n            { x: 2, y: 8, g: 'b' },\\n            { x: 3, y: 2, g: 'b' },\\n          ]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('with axis', () => {\\n    const darkmode = boolean('darkmode', false);\\n    const className = darkmode ? 'story-chart-dark' : 'story-chart';\\n    const defaultTheme = darkmode ? DARK_THEME : LIGHT_THEME;\\n    return (\\n      <Chart className={className}>\\n        <Settings theme={defaultTheme} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('with ordinal x axis', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Ordinal}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 'a', y: 2 }, { x: 'b', y: 7 }, { x: 'c', y: 3 }, { x: 'd', y: 6 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('with linear x axis', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 1, y: 2 }, { x: 2, y: 7 }, { x: 4, y: 3 }, { x: 9, y: 6 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('with linear x axis no linear interval', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings xDomain={{ max: 100 }} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[\\n            { x: 0, y: 2 },\\n            { x: 10, y: 7 },\\n            { x: 11.5, y: 9 },\\n            { x: 13.5, y: 3 },\\n            { x: 50, y: 6 },\\n            { x: 66, y: 13 },\\n            { x: 90, y: 4 },\\n          ]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('with time x axis', () => {\\n    const formatter = timeFormatter(niceTimeFormatByDay(1));\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings debug={boolean('debug', false)} />\\n        <Axis\\n          id={getAxisId('bottom')}\\n          position={Position.Bottom}\\n          title={'Bottom axis'}\\n          showOverlappingTicks={boolean('showOverlappingTicks bottom axis', false)}\\n          showOverlappingLabels={boolean('showOverlappingLabels bottom axis', false)}\\n          tickFormat={formatter}\\n        />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('with log y axis', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Log}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[\\n            { x: 1, y: 0 },\\n            { x: 2, y: 1 },\\n            { x: 3, y: 2 },\\n            { x: 4, y: 3 },\\n            { x: 5, y: 4 },\\n            { x: 6, y: 5 },\\n            { x: 7, y: 6 },\\n            { x: 8, y: 7 },\\n          ]}\\n          yScaleToDataExtent={true}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('with stacked log y axis', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Log}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          splitSeriesAccessors={['g']}\\n          stackAccessors={['x']}\\n          data={[\\n            { x: 1, y: 0, g: 'a' },\\n            { x: 1, y: 0, g: 'b' },\\n            { x: 2, y: 1, g: 'a' },\\n            { x: 2, y: 1, g: 'b' },\\n            { x: 3, y: 2, g: 'a' },\\n            { x: 3, y: 2, g: 'b' },\\n            { x: 4, y: 3, g: 'a' },\\n            { x: 4, y: 0, g: 'b' },\\n            { x: 5, y: 4, g: 'a' },\\n            { x: 5, y: 0.5, g: 'b' },\\n            { x: 6, y: 5, g: 'a' },\\n            { x: 6, y: 1, g: 'b' },\\n            { x: 7, y: 6, g: 'b' },\\n            { x: 8, y: 7, g: 'a' },\\n            { x: 8, y: 10, g: 'b' },\\n            { x: 9, y: 4, g: 'a' },\\n          ]}\\n          yScaleToDataExtent={true}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('with axis and legend', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          name={'Simple bar series'}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('stacked with axis and legend', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          stackAccessors={['x']}\\n          splitSeriesAccessors={['g']}\\n          data={[\\n            { x: 0, y: 2, g: 'a' },\\n            { x: 1, y: 7, g: 'a' },\\n            { x: 2, y: 3, g: 'a' },\\n            { x: 3, y: 6, g: 'a' },\\n            { x: 0, y: 4, g: 'b' },\\n            { x: 1, y: 5, g: 'b' },\\n            { x: 2, y: 8, g: 'b' },\\n            { x: 3, y: 2, g: 'b' },\\n          ]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('clustered with axis and legend', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          splitSeriesAccessors={['g']}\\n          data={[\\n            { x: 0, y: 2, g: 'a' },\\n            { x: 1, y: 7, g: 'a' },\\n            { x: 2, y: 3, g: 'a' },\\n            { x: 3, y: 6, g: 'a' },\\n            { x: 0, y: 4, g: 'b' },\\n            { x: 1, y: 5, g: 'b' },\\n            { x: 2, y: 8, g: 'b' },\\n            { x: 3, y: 2, g: 'b' },\\n          ]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('clustered multiple series specs', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'elements'} showOverlappingTicks={true} />\\n        <Axis id={getAxisId('left2')} title={'count'} position={Position.Left} tickFormat={d => Number(d).toFixed(2)} />\\n\\n        <BarSeries\\n          id={getSpecId('bar series 1')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n        />\\n        <BarSeries\\n          id={getSpecId('bar series 2')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 1 }, { x: 1, y: 2 }, { x: 2, y: 3 }, { x: 3, y: 4 }]}\\n        />\\n        <BarSeries\\n          id={getSpecId('bar series 3')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          splitSeriesAccessors={['g']}\\n          data={[\\n            { x: 0, y: 1, g: 'a' },\\n            { x: 1, y: 2, g: 'a' },\\n            { x: 2, y: 3, g: 'a' },\\n            { x: 3, y: 4, g: 'a' },\\n            { x: 0, y: 5, g: 'b' },\\n            { x: 1, y: 8, g: 'b' },\\n            { x: 2, y: 9, g: 'b' },\\n            { x: 3, y: 2, g: 'b' },\\n          ]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('time clustered using various specs', () => {\\n    const formatter = timeFormatter(niceTimeFormatByDay(1));\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings debug={boolean('debug', false)} />\\n        <Axis\\n          id={getAxisId('bottom')}\\n          position={Position.Bottom}\\n          title={'Bottom axis'}\\n          showOverlappingTicks={boolean('showOverlappingTicks bottom axis', false)}\\n          showOverlappingLabels={boolean('showOverlappingLabels bottom axis', false)}\\n          tickFormat={formatter}\\n        />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId(KIBANA_METRICS.metrics.kibana_os_load[0].metric.label)}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\\n        />\\n        <BarSeries\\n          id={getSpecId(KIBANA_METRICS.metrics.kibana_os_load[1].metric.label)}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[1].data}\\n        />\\n        <BarSeries\\n          id={getSpecId(KIBANA_METRICS.metrics.kibana_os_load[2].metric.label)}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[2].data}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('time stacked using various specs', () => {\\n    const formatter = timeFormatter(niceTimeFormatByDay(1));\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings debug={boolean('debug', false)} />\\n        <Axis\\n          id={getAxisId('bottom')}\\n          position={Position.Bottom}\\n          title={'Bottom axis'}\\n          showOverlappingTicks={boolean('showOverlappingTicks bottom axis', false)}\\n          showOverlappingLabels={boolean('showOverlappingLabels bottom axis', false)}\\n          tickFormat={formatter}\\n        />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId(KIBANA_METRICS.metrics.kibana_os_load[2].metric.label)}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          stackAccessors={[0]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[2].data.slice(0, 20)}\\n        />\\n        <BarSeries\\n          id={getSpecId(KIBANA_METRICS.metrics.kibana_os_load[1].metric.label)}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          stackAccessors={[0]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[1].data.slice(0, 20)}\\n        />\\n        <BarSeries\\n          id={getSpecId(KIBANA_METRICS.metrics.kibana_os_load[0].metric.label)}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          stackAccessors={[0]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data.slice(0, 20)}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('1y0g', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars1')}\\n          xScaleType={ScaleType.Ordinal}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={TestDatasets.BARCHART_1Y0G}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('1y1g', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars1')}\\n          xScaleType={ScaleType.Ordinal}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          splitSeriesAccessors={['g']}\\n          data={TestDatasets.BARCHART_1Y1G}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('1y2g', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars1')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          splitSeriesAccessors={['g1', 'g2']}\\n          data={TestDatasets.BARCHART_1Y2G}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('2y0g', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars1')}\\n          xScaleType={ScaleType.Ordinal}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y1', 'y2']}\\n          data={TestDatasets.BARCHART_2Y0G}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('2y1g', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars1')}\\n          xScaleType={ScaleType.Ordinal}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y1', 'y2']}\\n          splitSeriesAccessors={['g']}\\n          data={TestDatasets.BARCHART_2Y1G}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('2y2g', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars1')}\\n          xScaleType={ScaleType.Ordinal}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y1', 'y2']}\\n          splitSeriesAccessors={['g1', 'g2']}\\n          data={TestDatasets.BARCHART_2Y2G}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('with high data volume', () => {\\n    const dg = new DataGenerator();\\n    const data = dg.generateSimpleSeries(15000);\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={data}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('single data chart', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 1, y: 10 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('single data clusterd chart', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          splitSeriesAccessors={['g']}\\n          data={[{ x: 1, y: 10, g: 'a' }, { x: 1, y: 5, g: 'b' }, { x: 1, y: 3, g: 'c' }, { x: 1, y: 10, g: 'd' }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('single data stacked chart', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          splitSeriesAccessors={['g']}\\n          stackAccessors={['x']}\\n          data={[{ x: 1, y: 10, g: 'a' }, { x: 1, y: 5, g: 'b' }, { x: 1, y: 3, g: 'c' }, { x: 1, y: 10, g: 'd' }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('single data stacked chart scale to extent', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          splitSeriesAccessors={['g']}\\n          stackAccessors={['x']}\\n          data={[{ x: 0, y: 10, g: 'a' }, { x: 0, y: 20, g: 'b' }, { x: 0, y: 30, g: 'c' }]}\\n          yScaleToDataExtent={true}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('single data clustered chart scale to extent', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          splitSeriesAccessors={['g']}\\n          data={[{ x: 0, y: 10, g: 'a' }, { x: 0, y: 20, g: 'b' }, { x: 0, y: 30, g: 'c' }]}\\n          yScaleToDataExtent={true}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('negative and positive x values', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          splitSeriesAccessors={['g']}\\n          stackAccessors={['x']}\\n          data={[\\n            { x: -3, y: 1 },\\n            { x: 0, y: 4 },\\n            { x: -2, y: 2 },\\n            { x: 1, y: 3 },\\n            { x: 2, y: 2 },\\n            { x: -1, y: 3 },\\n            { x: 3, y: 1 },\\n          ]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('scale to extent', () => {\\n    const yScaleToDataExtent = boolean('yScaleDataToExtent', false);\\n    const mixed = [\\n      { x: 3, y: 1 },\\n      { x: 0, y: -4 },\\n      { x: 2, y: 2 },\\n      { x: 1, y: -3 },\\n      { x: 2, y: 2 },\\n      { x: 1, y: -3 },\\n      { x: 3, y: 1 },\\n    ];\\n\\n    const allPositive = mixed.map(datum => ({ x: datum.x, y: Math.abs(datum.y) }));\\n    const allNegative = mixed.map(datum => ({ x: datum.x, y: Math.abs(datum.y) * -1 }));\\n\\n    const dataChoice = select(\\n      'data',\\n      {\\n        mixed: 'mixed',\\n        allPositive: 'all positive',\\n        allNegative: 'all negative',\\n      },\\n      'mixed'\\n    );\\n\\n    let data = mixed;\\n    switch (dataChoice) {\\n      case 'all positive':\\n        data = allPositive;\\n        break;\\n      case 'all negative':\\n        data = allNegative;\\n        break;\\n    }\\n\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis id={getAxisId('top')} position={Position.Top} title={'Top axis'} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          splitSeriesAccessors={['g']}\\n          stackAccessors={['x']}\\n          data={data}\\n          yScaleToDataExtent={yScaleToDataExtent}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('band bar chart', () => {\\n    const data = KIBANA_METRICS.metrics.kibana_os_load[0].data.map(d => {\\n      return {\\n        x: d[0],\\n        max: d[1] + 4 + 4 * Math.random(),\\n        min: d[1] - 4 - 4 * Math.random(),\\n      };\\n    });\\n    const lineData = KIBANA_METRICS.metrics.kibana_os_load[0].data.map(d => {\\n      return [d[0], d[1]];\\n    });\\n    const scaleToDataExtent = boolean('scale to extent', true);\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis\\n          id={getAxisId('bottom')}\\n          title={'timestamp per 1 minute'}\\n          position={Position.Bottom}\\n          showOverlappingTicks={true}\\n          tickFormat={dateFormatter}\\n        />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={'x'}\\n          yAccessors={['max']}\\n          y0Accessors={['min']}\\n          data={data}\\n          // this is a temporary hack to display names for min and max values\\n          splitSeriesAccessors={['fake']}\\n          yScaleToDataExtent={scaleToDataExtent}\\n        />\\n\\n        <LineSeries\\n          id={getSpecId('average')}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={lineData}\\n          yScaleToDataExtent={scaleToDataExtent}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('[test] - linear', () => {\\n    const data = [[1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 4], [7, 3], [8, 2], [9, 1]];\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis id={getAxisId('bottom')} title={'index'} position={Position.Bottom} />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n        <BarSeries\\n          id={getSpecId('lines')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={data}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('[test] - time', () => {\\n    const start = DateTime.fromISO('2019-01-01T00:00:00.000', { zone: 'utc' });\\n    const data = [\\n      [start.toMillis(), 1],\\n      [start.plus({ minute: 1 }).toMillis(), 2],\\n      [start.plus({ minute: 2 }).toMillis(), 3],\\n      [start.plus({ minute: 3 }).toMillis(), 4],\\n      [start.plus({ minute: 4 }).toMillis(), 5],\\n      [start.plus({ minute: 5 }).toMillis(), 4],\\n      [start.plus({ minute: 6 }).toMillis(), 3],\\n      [start.plus({ minute: 7 }).toMillis(), 2],\\n      [start.plus({ minute: 8 }).toMillis(), 1],\\n    ];\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis id={getAxisId('bottom')} title={'index'} position={Position.Bottom} tickFormat={dateFormatter} />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n        <BarSeries\\n          id={getSpecId('data')}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={data}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('[test] - linear clustered', () => {\\n    const data = [[1, 1, 3], [2, 2, 4], [3, 3, 5], [4, 4, 6], [5, 5, 7], [6, 4, 6], [7, 3, 5], [8, 2, 4], [9, 1, 3]];\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis id={getAxisId('bottom')} title={'index'} position={Position.Bottom} />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n        <BarSeries\\n          id={getSpecId('lines')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1, 2]}\\n          data={data}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('[test] - time clustered', () => {\\n    const start = DateTime.fromISO('2019-01-01T00:00:00.000', { zone: 'utc' });\\n    const data = [\\n      [start.toMillis(), 1, 4],\\n      [start.plus({ minute: 1 }).toMillis(), 2, 5],\\n      [start.plus({ minute: 2 }).toMillis(), 3, 6],\\n      [start.plus({ minute: 3 }).toMillis(), 4, 7],\\n      [start.plus({ minute: 4 }).toMillis(), 5, 8],\\n      [start.plus({ minute: 5 }).toMillis(), 4, 7],\\n      [start.plus({ minute: 6 }).toMillis(), 3, 6],\\n      [start.plus({ minute: 7 }).toMillis(), 2, 5],\\n      [start.plus({ minute: 8 }).toMillis(), 1, 4],\\n    ];\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis id={getAxisId('bottom')} title={'index'} position={Position.Bottom} tickFormat={dateFormatter} />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n        <BarSeries\\n          id={getSpecId('data')}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1, 2]}\\n          data={data}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('[test] - clustered bar chart with null bars', () => {\\n    const data = [\\n      [1, 1, 3, 'a'],\\n      [2, null, 4, 'a'],\\n      [3, 3, 5, 'a'],\\n      [4, 4, 6, 'a'],\\n      [1, 1, 3, 'b'],\\n      [2, 2, 4, 'b'],\\n      [3, 3, 5, 'b'],\\n      [4, 4, 6, 'b'],\\n    ];\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis id={getAxisId('bottom')} title={'index'} position={Position.Bottom} />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n        <BarSeries\\n          id={getSpecId('lines')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          splitSeriesAccessors={[3]}\\n          data={data}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('[test] - stacked bar chart with null bars', () => {\\n    const data = [\\n      [1, 1, 3, 'a'],\\n      [2, null, 4, 'a'],\\n      [3, 3, 5, 'a'],\\n      [4, 4, 6, 'a'],\\n      [1, 1, 3, 'b'],\\n      [2, 2, 4, 'b'],\\n      [3, null, 5, 'b'],\\n      [4, 4, 6, 'b'],\\n    ];\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis id={getAxisId('bottom')} title={'index'} position={Position.Bottom} />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n        <BarSeries\\n          id={getSpecId('lines')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          splitSeriesAccessors={[3]}\\n          stackAccessors={[0]}\\n          data={data}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('[test] switch ordinal/linear x axis', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={select(\\n            'scaleType',\\n            {\\n              linear: ScaleType.Linear,\\n              ordinal: ScaleType.Ordinal,\\n            },\\n            ScaleType.Linear\\n          )}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('stacked only grouped areas', () => {\\n    const data1 = [[1, 2], [2, 2], [3, 3], [4, 5], [5, 5], [6, 3], [7, 8], [8, 2], [9, 1]];\\n    const data2 = [[1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 4], [7, 3], [8, 2], [9, 4]];\\n    const data3 = [[1, 6], [2, 6], [3, 3], [4, 2], [5, 1], [6, 1], [7, 5], [8, 6], [9, 7]];\\n    const data4 = [[1, 2], [2, 6], [3, 2], [4, 9], [5, 2], [6, 3], [7, 1], [8, 2], [9, 7]];\\n    const data5 = [[1, 1], [2, 7], [3, 5], [4, 6], [5, 5], [6, 4], [7, 2], [8, 4], [9, 8]];\\n    return (\\n      <Chart renderer=\\\"canvas\\\" className={'story-chart'}>\\n        <Axis id={getAxisId('bottom')} title={'index'} position={Position.Bottom} />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n          domain={{ min: 0, max: 15 }}\\n        />\\n        <Axis\\n          id={getAxisId('left group b')}\\n          groupId={getGroupId('gb')}\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n          hide={true}\\n          domain={{ min: 0, max: 15 }}\\n        />\\n        <BarSeries\\n          id={getSpecId('stacked bar 1')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          stackAccessors={[0]}\\n          data={data1}\\n          yScaleToDataExtent={false}\\n        />\\n        <BarSeries\\n          id={getSpecId('stacked bar 2')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          stackAccessors={[0]}\\n          data={data2}\\n          yScaleToDataExtent={false}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('stacked bar A')}\\n          groupId={getGroupId('gb')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          stackAccessors={[0]}\\n          data={data4}\\n          yScaleToDataExtent={false}\\n        />\\n        <BarSeries\\n          id={getSpecId('stacked bar B')}\\n          groupId={getGroupId('gb')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          stackAccessors={[0]}\\n          data={data5}\\n          yScaleToDataExtent={false}\\n        />\\n        <BarSeries\\n          id={getSpecId('non stacked bar')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={data3}\\n          yScaleToDataExtent={false}\\n        />\\n      </Chart>\\n    );\\n  });\\n\";\n  export var __ADDS_MAP__ = {\"Bar Chart@stacked only grouped areas\":{\"startLoc\":{\"col\":7,\"line\":1243},\"endLoc\":{\"col\":3,\"line\":1322}},\"Bar Chart@[test] switch ordinal/linear x axis\":{\"startLoc\":{\"col\":7,\"line\":1214},\"endLoc\":{\"col\":3,\"line\":1242}},\"Bar Chart@[test] - stacked bar chart with null bars\":{\"startLoc\":{\"col\":7,\"line\":1181},\"endLoc\":{\"col\":3,\"line\":1213}},\"Bar Chart@[test] - clustered bar chart with null bars\":{\"startLoc\":{\"col\":7,\"line\":1149},\"endLoc\":{\"col\":3,\"line\":1180}},\"Bar Chart@[test] - time clustered\":{\"startLoc\":{\"col\":7,\"line\":1116},\"endLoc\":{\"col\":3,\"line\":1148}},\"Bar Chart@[test] - linear clustered\":{\"startLoc\":{\"col\":7,\"line\":1094},\"endLoc\":{\"col\":3,\"line\":1115}},\"Bar Chart@[test] - time\":{\"startLoc\":{\"col\":7,\"line\":1061},\"endLoc\":{\"col\":3,\"line\":1093}},\"Bar Chart@[test] - linear\":{\"startLoc\":{\"col\":7,\"line\":1039},\"endLoc\":{\"col\":3,\"line\":1060}},\"Bar Chart@band bar chart\":{\"startLoc\":{\"col\":7,\"line\":986},\"endLoc\":{\"col\":3,\"line\":1038}},\"Bar Chart@scale to extent\":{\"startLoc\":{\"col\":7,\"line\":927},\"endLoc\":{\"col\":3,\"line\":985}},\"Bar Chart@negative and positive x values\":{\"startLoc\":{\"col\":7,\"line\":895},\"endLoc\":{\"col\":3,\"line\":926}},\"Bar Chart@single data clustered chart scale to extent\":{\"startLoc\":{\"col\":7,\"line\":871},\"endLoc\":{\"col\":3,\"line\":894}},\"Bar Chart@single data stacked chart scale to extent\":{\"startLoc\":{\"col\":7,\"line\":846},\"endLoc\":{\"col\":3,\"line\":870}},\"Bar Chart@single data stacked chart\":{\"startLoc\":{\"col\":7,\"line\":822},\"endLoc\":{\"col\":3,\"line\":845}},\"Bar Chart@single data clusterd chart\":{\"startLoc\":{\"col\":7,\"line\":799},\"endLoc\":{\"col\":3,\"line\":821}},\"Bar Chart@single data chart\":{\"startLoc\":{\"col\":7,\"line\":777},\"endLoc\":{\"col\":3,\"line\":798}},\"Bar Chart@with high data volume\":{\"startLoc\":{\"col\":7,\"line\":753},\"endLoc\":{\"col\":3,\"line\":776}},\"Bar Chart@2y2g\":{\"startLoc\":{\"col\":7,\"line\":729},\"endLoc\":{\"col\":3,\"line\":752}},\"Bar Chart@2y1g\":{\"startLoc\":{\"col\":7,\"line\":705},\"endLoc\":{\"col\":3,\"line\":728}},\"Bar Chart@2y0g\":{\"startLoc\":{\"col\":7,\"line\":682},\"endLoc\":{\"col\":3,\"line\":704}},\"Bar Chart@1y2g\":{\"startLoc\":{\"col\":7,\"line\":658},\"endLoc\":{\"col\":3,\"line\":681}},\"Bar Chart@1y1g\":{\"startLoc\":{\"col\":7,\"line\":634},\"endLoc\":{\"col\":3,\"line\":657}},\"Bar Chart@1y0g\":{\"startLoc\":{\"col\":7,\"line\":611},\"endLoc\":{\"col\":3,\"line\":633}},\"Bar Chart@time stacked using various specs\":{\"startLoc\":{\"col\":7,\"line\":561},\"endLoc\":{\"col\":3,\"line\":610}},\"Bar Chart@time clustered using various specs\":{\"startLoc\":{\"col\":7,\"line\":514},\"endLoc\":{\"col\":3,\"line\":560}},\"Bar Chart@clustered multiple series specs\":{\"startLoc\":{\"col\":7,\"line\":470},\"endLoc\":{\"col\":3,\"line\":513}},\"Bar Chart@clustered with axis and legend\":{\"startLoc\":{\"col\":7,\"line\":437},\"endLoc\":{\"col\":3,\"line\":469}},\"Bar Chart@stacked with axis and legend\":{\"startLoc\":{\"col\":7,\"line\":403},\"endLoc\":{\"col\":3,\"line\":436}},\"Bar Chart@with axis and legend\":{\"startLoc\":{\"col\":7,\"line\":379},\"endLoc\":{\"col\":3,\"line\":402}},\"Bar Chart@with stacked log y axis\":{\"startLoc\":{\"col\":7,\"line\":337},\"endLoc\":{\"col\":3,\"line\":378}},\"Bar Chart@with log y axis\":{\"startLoc\":{\"col\":7,\"line\":305},\"endLoc\":{\"col\":3,\"line\":336}},\"Bar Chart@with time x axis\":{\"startLoc\":{\"col\":7,\"line\":274},\"endLoc\":{\"col\":3,\"line\":304}},\"Bar Chart@with linear x axis no linear interval\":{\"startLoc\":{\"col\":7,\"line\":243},\"endLoc\":{\"col\":3,\"line\":273}},\"Bar Chart@with linear x axis\":{\"startLoc\":{\"col\":7,\"line\":221},\"endLoc\":{\"col\":3,\"line\":242}},\"Bar Chart@with ordinal x axis\":{\"startLoc\":{\"col\":7,\"line\":199},\"endLoc\":{\"col\":3,\"line\":220}},\"Bar Chart@with axis\":{\"startLoc\":{\"col\":7,\"line\":173},\"endLoc\":{\"col\":3,\"line\":198}},\"Bar Chart@with value label\":{\"startLoc\":{\"col\":7,\"line\":66},\"endLoc\":{\"col\":3,\"line\":172}},\"Bar Chart@basic\":{\"startLoc\":{\"col\":7,\"line\":43},\"endLoc\":{\"col\":3,\"line\":65}}};\n  \n  import { boolean, color, number, select } from '@storybook/addon-knobs';\nimport { storiesOf } from '@storybook/react';\nimport { DateTime } from 'luxon';\nimport React from 'react';\nimport {\n  Axis,\n  BarSeries,\n  Chart,\n  DARK_THEME,\n  DataGenerator,\n  getAxisId,\n  getGroupId,\n  getSpecId,\n  LIGHT_THEME,\n  LineSeries,\n  mergeWithDefaultTheme,\n  niceTimeFormatByDay,\n  Position,\n  Rotation,\n  ScaleType,\n  Settings,\n  timeFormatter,\n} from '../src/';\nimport * as TestDatasets from '../src/lib/series/utils/test_dataset';\nimport { KIBANA_METRICS } from '../src/lib/series/utils/test_dataset_kibana';\nconst dateFormatter = timeFormatter('HH:mm:ss');\n\nconst dataGen = new DataGenerator();\nfunction generateDataWithAdditional(num: number) {\n  return [\n    ...dataGen.generateSimpleSeries(num),\n    { x: num, y: 0.25, g: 0 },\n    { x: num + 1, y: 8, g: 0 },\n  ];\n}\nconst frozenDataSmallVolume = generateDataWithAdditional(10);\nconst frozenDataMediumVolume = generateDataWithAdditional(50);\nconst frozenDataHighVolume = generateDataWithAdditional(1500);\n\nconst frozenData: { [key: string]: any[] } = {\n  s: frozenDataSmallVolume,\n  m: frozenDataMediumVolume,\n  h: frozenDataHighVolume,\n};\n\nstoriesOf('Bar Chart', module).addDecorator(withStorySource(__STORY__, __ADDS_MAP__))\n  .add('basic', () => {\n    const darkmode = boolean('darkmode', false);\n    const className = darkmode ? 'story-chart-dark' : 'story-chart';\n    const toggleSpec = boolean('toggle bar spec', true);\n    const data1 = [{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }];\n    const data2 = data1.map((datum) => ({ ...datum, y: datum.y - 1 }));\n    const data = toggleSpec ? data1 : data2;\n    const specId = toggleSpec ? 'bars1' : 'bars2';\n\n    return (\n      <Chart className={className}>\n        <BarSeries\n          id={getSpecId(specId)}\n          name={'Simple bar series'}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={data}\n        />\n      </Chart>\n    );\n  })\n  .add('with value label', () => {\n    const showValueLabel = boolean('show value label', false);\n    const isAlternatingValueLabel = boolean('alternating value label', false);\n    const isValueContainedInElement = boolean('contain value label within bar element', false);\n    const hideClippedValue = boolean('hide clipped value', false);\n\n    const displayValueSettings = {\n      showValueLabel,\n      isAlternatingValueLabel,\n      isValueContainedInElement,\n      hideClippedValue,\n    };\n\n    const displayValueStyle = {\n      displayValue: {\n        fontSize: number('value font size', 10),\n        fontFamily: `'Open Sans', Helvetica, Arial, sans-serif`,\n        fontStyle: 'normal',\n        padding: 0,\n        fill: color('value color', '#000'),\n        offsetX: number('offsetX', 0),\n        offsetY: number('offsetY', 0),\n      },\n    };\n\n    const barStyle = {\n      barSeriesStyle: {\n        ...LIGHT_THEME.barSeriesStyle,\n        ...displayValueStyle,\n      },\n    };\n\n    const debug = boolean('debug', true);\n    const chartRotation = select<Rotation>(\n      'chartRotation',\n      {\n        '0 deg': 0,\n        '90 deg': 90,\n        '-90 deg': -90,\n        '180 deg': 180,\n      },\n      0,\n    );\n\n    const theme = mergeWithDefaultTheme(barStyle, LIGHT_THEME);\n    const dataSize = select(\n      'data volume size',\n      {\n        'small volume': 's',\n        'medium volume': 'm',\n        'high volume': 'h',\n      },\n      's',\n    );\n    const data = frozenData[dataSize];\n\n    const isSplitSeries = boolean('split series', false);\n    const isStackedSeries = boolean('stacked series', false);\n\n    const splitSeriesAccessors = isSplitSeries ? ['g'] : undefined;\n    const stackAccessors = isStackedSeries ? ['x'] : undefined;\n\n    return (\n      <Chart renderer=\"canvas\" className={'story-chart'}>\n        <Settings theme={theme} debug={debug} rotation={chartRotation} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n        <BarSeries\n          id={getSpecId('bars')}\n          displayValueSettings={displayValueSettings}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          splitSeriesAccessors={splitSeriesAccessors}\n          stackAccessors={stackAccessors}\n          data={data}\n          yScaleToDataExtent={false}\n        />\n        <BarSeries\n          id={getSpecId('bars2')}\n          displayValueSettings={displayValueSettings}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          stackAccessors={['x']}\n          splitSeriesAccessors={['g']}\n          data={[\n            { x: 0, y: 2, g: 'a' },\n            { x: 1, y: 7, g: 'a' },\n            { x: 2, y: 3, g: 'a' },\n            { x: 3, y: 6, g: 'a' },\n            { x: 0, y: 4, g: 'b' },\n            { x: 1, y: 5, g: 'b' },\n            { x: 2, y: 8, g: 'b' },\n            { x: 3, y: 2, g: 'b' },\n          ]}\n        />\n      </Chart>\n    );\n  })\n  .add('with axis', () => {\n    const darkmode = boolean('darkmode', false);\n    const className = darkmode ? 'story-chart-dark' : 'story-chart';\n    const defaultTheme = darkmode ? DARK_THEME : LIGHT_THEME;\n    return (\n      <Chart className={className}>\n        <Settings theme={defaultTheme} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('with ordinal x axis', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Ordinal}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 'a', y: 2 }, { x: 'b', y: 7 }, { x: 'c', y: 3 }, { x: 'd', y: 6 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('with linear x axis', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 1, y: 2 }, { x: 2, y: 7 }, { x: 4, y: 3 }, { x: 9, y: 6 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('with linear x axis no linear interval', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings xDomain={{ max: 100 }} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[\n            { x: 0, y: 2 },\n            { x: 10, y: 7 },\n            { x: 11.5, y: 9 },\n            { x: 13.5, y: 3 },\n            { x: 50, y: 6 },\n            { x: 66, y: 13 },\n            { x: 90, y: 4 },\n          ]}\n        />\n      </Chart>\n    );\n  })\n  .add('with time x axis', () => {\n    const formatter = timeFormatter(niceTimeFormatByDay(1));\n    return (\n      <Chart className={'story-chart'}>\n        <Settings debug={boolean('debug', false)} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={boolean('showOverlappingTicks bottom axis', false)}\n          showOverlappingLabels={boolean('showOverlappingLabels bottom axis', false)}\n          tickFormat={formatter}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\n        />\n      </Chart>\n    );\n  })\n  .add('with log y axis', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Log}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[\n            { x: 1, y: 0 },\n            { x: 2, y: 1 },\n            { x: 3, y: 2 },\n            { x: 4, y: 3 },\n            { x: 5, y: 4 },\n            { x: 6, y: 5 },\n            { x: 7, y: 6 },\n            { x: 8, y: 7 },\n          ]}\n          yScaleToDataExtent={true}\n        />\n      </Chart>\n    );\n  })\n  .add('with stacked log y axis', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Log}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          splitSeriesAccessors={['g']}\n          stackAccessors={['x']}\n          data={[\n            { x: 1, y: 0, g: 'a' },\n            { x: 1, y: 0, g: 'b' },\n            { x: 2, y: 1, g: 'a' },\n            { x: 2, y: 1, g: 'b' },\n            { x: 3, y: 2, g: 'a' },\n            { x: 3, y: 2, g: 'b' },\n            { x: 4, y: 3, g: 'a' },\n            { x: 4, y: 0, g: 'b' },\n            { x: 5, y: 4, g: 'a' },\n            { x: 5, y: 0.5, g: 'b' },\n            { x: 6, y: 5, g: 'a' },\n            { x: 6, y: 1, g: 'b' },\n            { x: 7, y: 6, g: 'b' },\n            { x: 8, y: 7, g: 'a' },\n            { x: 8, y: 10, g: 'b' },\n            { x: 9, y: 4, g: 'a' },\n          ]}\n          yScaleToDataExtent={true}\n        />\n      </Chart>\n    );\n  })\n  .add('with axis and legend', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          name={'Simple bar series'}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('stacked with axis and legend', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          stackAccessors={['x']}\n          splitSeriesAccessors={['g']}\n          data={[\n            { x: 0, y: 2, g: 'a' },\n            { x: 1, y: 7, g: 'a' },\n            { x: 2, y: 3, g: 'a' },\n            { x: 3, y: 6, g: 'a' },\n            { x: 0, y: 4, g: 'b' },\n            { x: 1, y: 5, g: 'b' },\n            { x: 2, y: 8, g: 'b' },\n            { x: 3, y: 2, g: 'b' },\n          ]}\n        />\n      </Chart>\n    );\n  })\n  .add('clustered with axis and legend', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          splitSeriesAccessors={['g']}\n          data={[\n            { x: 0, y: 2, g: 'a' },\n            { x: 1, y: 7, g: 'a' },\n            { x: 2, y: 3, g: 'a' },\n            { x: 3, y: 6, g: 'a' },\n            { x: 0, y: 4, g: 'b' },\n            { x: 1, y: 5, g: 'b' },\n            { x: 2, y: 8, g: 'b' },\n            { x: 3, y: 2, g: 'b' },\n          ]}\n        />\n      </Chart>\n    );\n  })\n  .add('clustered multiple series specs', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'elements'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'count'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bar series 1')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n        />\n        <BarSeries\n          id={getSpecId('bar series 2')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 1 }, { x: 1, y: 2 }, { x: 2, y: 3 }, { x: 3, y: 4 }]}\n        />\n        <BarSeries\n          id={getSpecId('bar series 3')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          splitSeriesAccessors={['g']}\n          data={[\n            { x: 0, y: 1, g: 'a' },\n            { x: 1, y: 2, g: 'a' },\n            { x: 2, y: 3, g: 'a' },\n            { x: 3, y: 4, g: 'a' },\n            { x: 0, y: 5, g: 'b' },\n            { x: 1, y: 8, g: 'b' },\n            { x: 2, y: 9, g: 'b' },\n            { x: 3, y: 2, g: 'b' },\n          ]}\n        />\n      </Chart>\n    );\n  })\n  .add('time clustered using various specs', () => {\n    const formatter = timeFormatter(niceTimeFormatByDay(1));\n    return (\n      <Chart className={'story-chart'}>\n        <Settings debug={boolean('debug', false)} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={boolean('showOverlappingTicks bottom axis', false)}\n          showOverlappingLabels={boolean('showOverlappingLabels bottom axis', false)}\n          tickFormat={formatter}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId(KIBANA_METRICS.metrics.kibana_os_load[0].metric.label)}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\n        />\n        <BarSeries\n          id={getSpecId(KIBANA_METRICS.metrics.kibana_os_load[1].metric.label)}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[1].data}\n        />\n        <BarSeries\n          id={getSpecId(KIBANA_METRICS.metrics.kibana_os_load[2].metric.label)}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[2].data}\n        />\n      </Chart>\n    );\n  })\n  .add('time stacked using various specs', () => {\n    const formatter = timeFormatter(niceTimeFormatByDay(1));\n    return (\n      <Chart className={'story-chart'}>\n        <Settings debug={boolean('debug', false)} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={boolean('showOverlappingTicks bottom axis', false)}\n          showOverlappingLabels={boolean('showOverlappingLabels bottom axis', false)}\n          tickFormat={formatter}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId(KIBANA_METRICS.metrics.kibana_os_load[2].metric.label)}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          stackAccessors={[0]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[2].data.slice(0, 20)}\n        />\n        <BarSeries\n          id={getSpecId(KIBANA_METRICS.metrics.kibana_os_load[1].metric.label)}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          stackAccessors={[0]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[1].data.slice(0, 20)}\n        />\n        <BarSeries\n          id={getSpecId(KIBANA_METRICS.metrics.kibana_os_load[0].metric.label)}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          stackAccessors={[0]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data.slice(0, 20)}\n        />\n      </Chart>\n    );\n  })\n  .add('1y0g', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars1')}\n          xScaleType={ScaleType.Ordinal}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={TestDatasets.BARCHART_1Y0G}\n        />\n      </Chart>\n    );\n  })\n  .add('1y1g', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars1')}\n          xScaleType={ScaleType.Ordinal}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          splitSeriesAccessors={['g']}\n          data={TestDatasets.BARCHART_1Y1G}\n        />\n      </Chart>\n    );\n  })\n  .add('1y2g', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars1')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          splitSeriesAccessors={['g1', 'g2']}\n          data={TestDatasets.BARCHART_1Y2G}\n        />\n      </Chart>\n    );\n  })\n  .add('2y0g', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars1')}\n          xScaleType={ScaleType.Ordinal}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y1', 'y2']}\n          data={TestDatasets.BARCHART_2Y0G}\n        />\n      </Chart>\n    );\n  })\n  .add('2y1g', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars1')}\n          xScaleType={ScaleType.Ordinal}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y1', 'y2']}\n          splitSeriesAccessors={['g']}\n          data={TestDatasets.BARCHART_2Y1G}\n        />\n      </Chart>\n    );\n  })\n  .add('2y2g', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars1')}\n          xScaleType={ScaleType.Ordinal}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y1', 'y2']}\n          splitSeriesAccessors={['g1', 'g2']}\n          data={TestDatasets.BARCHART_2Y2G}\n        />\n      </Chart>\n    );\n  })\n  .add('with high data volume', () => {\n    const dg = new DataGenerator();\n    const data = dg.generateSimpleSeries(15000);\n    return (\n      <Chart className={'story-chart'}>\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={data}\n        />\n      </Chart>\n    );\n  })\n  .add('single data chart', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 1, y: 10 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('single data clusterd chart', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          splitSeriesAccessors={['g']}\n          data={[\n            { x: 1, y: 10, g: 'a' },\n            { x: 1, y: 5, g: 'b' },\n            { x: 1, y: 3, g: 'c' },\n            { x: 1, y: 10, g: 'd' },\n          ]}\n        />\n      </Chart>\n    );\n  })\n  .add('single data stacked chart', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          splitSeriesAccessors={['g']}\n          stackAccessors={['x']}\n          data={[\n            { x: 1, y: 10, g: 'a' },\n            { x: 1, y: 5, g: 'b' },\n            { x: 1, y: 3, g: 'c' },\n            { x: 1, y: 10, g: 'd' },\n          ]}\n        />\n      </Chart>\n    );\n  })\n  .add('single data stacked chart scale to extent', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          splitSeriesAccessors={['g']}\n          stackAccessors={['x']}\n          data={[{ x: 0, y: 10, g: 'a' }, { x: 0, y: 20, g: 'b' }, { x: 0, y: 30, g: 'c' }]}\n          yScaleToDataExtent={true}\n        />\n      </Chart>\n    );\n  })\n  .add('single data clustered chart scale to extent', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          splitSeriesAccessors={['g']}\n          data={[{ x: 0, y: 10, g: 'a' }, { x: 0, y: 20, g: 'b' }, { x: 0, y: 30, g: 'c' }]}\n          yScaleToDataExtent={true}\n        />\n      </Chart>\n    );\n  })\n  .add('negative and positive x values', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          splitSeriesAccessors={['g']}\n          stackAccessors={['x']}\n          data={[\n            { x: -3, y: 1 },\n            { x: 0, y: 4 },\n            { x: -2, y: 2 },\n            { x: 1, y: 3 },\n            { x: 2, y: 2 },\n            { x: -1, y: 3 },\n            { x: 3, y: 1 },\n          ]}\n        />\n      </Chart>\n    );\n  })\n  .add('scale to extent', () => {\n    const yScaleToDataExtent = boolean('yScaleDataToExtent', false);\n    const mixed = [\n      { x: 3, y: 1 },\n      { x: 0, y: -4 },\n      { x: 2, y: 2 },\n      { x: 1, y: -3 },\n      { x: 2, y: 2 },\n      { x: 1, y: -3 },\n      { x: 3, y: 1 },\n    ];\n\n    const allPositive = mixed.map((datum) => ({ x: datum.x, y: Math.abs(datum.y) }));\n    const allNegative = mixed.map((datum) => ({ x: datum.x, y: Math.abs(datum.y) * -1 }));\n\n    const dataChoice = select(\n      'data',\n      {\n        mixed: 'mixed',\n        allPositive: 'all positive',\n        allNegative: 'all negative',\n      },\n      'mixed',\n    );\n\n    let data = mixed;\n    switch (dataChoice) {\n      case 'all positive':\n        data = allPositive;\n        break;\n      case 'all negative':\n        data = allNegative;\n        break;\n    }\n\n    return (\n      <Chart className={'story-chart'}>\n        <Axis id={getAxisId('top')} position={Position.Top} title={'Top axis'} />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          splitSeriesAccessors={['g']}\n          stackAccessors={['x']}\n          data={data}\n          yScaleToDataExtent={yScaleToDataExtent}\n        />\n      </Chart>\n    );\n  })\n  .add('band bar chart', () => {\n    const data = KIBANA_METRICS.metrics.kibana_os_load[0].data.map((d) => {\n      return {\n        x: d[0],\n        max: d[1] + 4 + 4 * Math.random(),\n        min: d[1] - 4 - 4 * Math.random(),\n      };\n    });\n    const lineData = KIBANA_METRICS.metrics.kibana_os_load[0].data.map((d) => {\n      return [d[0], d[1]];\n    });\n    const scaleToDataExtent = boolean('scale to extent', true);\n    return (\n      <Chart className={'story-chart'}>\n        <Axis\n          id={getAxisId('bottom')}\n          title={'timestamp per 1 minute'}\n          position={Position.Bottom}\n          showOverlappingTicks={true}\n          tickFormat={dateFormatter}\n        />\n        <Axis\n          id={getAxisId('left')}\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={'x'}\n          yAccessors={['max']}\n          y0Accessors={['min']}\n          data={data}\n          // this is a temporary hack to display names for min and max values\n          splitSeriesAccessors={['fake']}\n          yScaleToDataExtent={scaleToDataExtent}\n        />\n\n        <LineSeries\n          id={getSpecId('average')}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={lineData}\n          yScaleToDataExtent={scaleToDataExtent}\n        />\n      </Chart>\n    );\n  })\n  .add('[test] - linear', () => {\n    const data = [[1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 4], [7, 3], [8, 2], [9, 1]];\n    return (\n      <Chart className={'story-chart'}>\n        <Axis id={getAxisId('bottom')} title={'index'} position={Position.Bottom} />\n        <Axis\n          id={getAxisId('left')}\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n        <BarSeries\n          id={getSpecId('lines')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={data}\n        />\n      </Chart>\n    );\n  })\n  .add('[test] - time', () => {\n    const start = DateTime.fromISO('2019-01-01T00:00:00.000', { zone: 'utc' });\n    const data = [\n      [start.toMillis(), 1],\n      [start.plus({ minute: 1 }).toMillis(), 2],\n      [start.plus({ minute: 2 }).toMillis(), 3],\n      [start.plus({ minute: 3 }).toMillis(), 4],\n      [start.plus({ minute: 4 }).toMillis(), 5],\n      [start.plus({ minute: 5 }).toMillis(), 4],\n      [start.plus({ minute: 6 }).toMillis(), 3],\n      [start.plus({ minute: 7 }).toMillis(), 2],\n      [start.plus({ minute: 8 }).toMillis(), 1],\n    ];\n    return (\n      <Chart className={'story-chart'}>\n        <Axis\n          id={getAxisId('bottom')}\n          title={'index'}\n          position={Position.Bottom}\n          tickFormat={dateFormatter}\n        />\n        <Axis\n          id={getAxisId('left')}\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n        <BarSeries\n          id={getSpecId('data')}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={data}\n        />\n      </Chart>\n    );\n  })\n  .add('[test] - linear clustered', () => {\n    const data = [\n      [1, 1, 3],\n      [2, 2, 4],\n      [3, 3, 5],\n      [4, 4, 6],\n      [5, 5, 7],\n      [6, 4, 6],\n      [7, 3, 5],\n      [8, 2, 4],\n      [9, 1, 3],\n    ];\n    return (\n      <Chart className={'story-chart'}>\n        <Axis id={getAxisId('bottom')} title={'index'} position={Position.Bottom} />\n        <Axis\n          id={getAxisId('left')}\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n        <BarSeries\n          id={getSpecId('lines')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1, 2]}\n          data={data}\n        />\n      </Chart>\n    );\n  })\n  .add('[test] - time clustered', () => {\n    const start = DateTime.fromISO('2019-01-01T00:00:00.000', { zone: 'utc' });\n    const data = [\n      [start.toMillis(), 1, 4],\n      [start.plus({ minute: 1 }).toMillis(), 2, 5],\n      [start.plus({ minute: 2 }).toMillis(), 3, 6],\n      [start.plus({ minute: 3 }).toMillis(), 4, 7],\n      [start.plus({ minute: 4 }).toMillis(), 5, 8],\n      [start.plus({ minute: 5 }).toMillis(), 4, 7],\n      [start.plus({ minute: 6 }).toMillis(), 3, 6],\n      [start.plus({ minute: 7 }).toMillis(), 2, 5],\n      [start.plus({ minute: 8 }).toMillis(), 1, 4],\n    ];\n    return (\n      <Chart className={'story-chart'}>\n        <Axis\n          id={getAxisId('bottom')}\n          title={'index'}\n          position={Position.Bottom}\n          tickFormat={dateFormatter}\n        />\n        <Axis\n          id={getAxisId('left')}\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n        <BarSeries\n          id={getSpecId('data')}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1, 2]}\n          data={data}\n        />\n      </Chart>\n    );\n  })\n  .add('[test] - clustered bar chart with null bars', () => {\n    const data = [\n      [1, 1, 3, 'a'],\n      [2, null, 4, 'a'],\n      [3, 3, 5, 'a'],\n      [4, 4, 6, 'a'],\n      [1, 1, 3, 'b'],\n      [2, 2, 4, 'b'],\n      [3, 3, 5, 'b'],\n      [4, 4, 6, 'b'],\n    ];\n    return (\n      <Chart className={'story-chart'}>\n        <Axis id={getAxisId('bottom')} title={'index'} position={Position.Bottom} />\n        <Axis\n          id={getAxisId('left')}\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n        <BarSeries\n          id={getSpecId('lines')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          splitSeriesAccessors={[3]}\n          data={data}\n        />\n      </Chart>\n    );\n  })\n  .add('[test] - stacked bar chart with null bars', () => {\n    const data = [\n      [1, 1, 3, 'a'],\n      [2, null, 4, 'a'],\n      [3, 3, 5, 'a'],\n      [4, 4, 6, 'a'],\n      [1, 1, 3, 'b'],\n      [2, 2, 4, 'b'],\n      [3, null, 5, 'b'],\n      [4, 4, 6, 'b'],\n    ];\n    return (\n      <Chart className={'story-chart'}>\n        <Axis id={getAxisId('bottom')} title={'index'} position={Position.Bottom} />\n        <Axis\n          id={getAxisId('left')}\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n        <BarSeries\n          id={getSpecId('lines')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          splitSeriesAccessors={[3]}\n          stackAccessors={[0]}\n          data={data}\n        />\n      </Chart>\n    );\n  })\n  .add('[test] switch ordinal/linear x axis', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={select(\n            'scaleType',\n            {\n              linear: ScaleType.Linear,\n              ordinal: ScaleType.Ordinal,\n            },\n            ScaleType.Linear,\n          )}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('stacked only grouped areas', () => {\n    const data1 = [[1, 2], [2, 2], [3, 3], [4, 5], [5, 5], [6, 3], [7, 8], [8, 2], [9, 1]];\n    const data2 = [[1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 4], [7, 3], [8, 2], [9, 4]];\n    const data3 = [[1, 6], [2, 6], [3, 3], [4, 2], [5, 1], [6, 1], [7, 5], [8, 6], [9, 7]];\n    const data4 = [[1, 2], [2, 6], [3, 2], [4, 9], [5, 2], [6, 3], [7, 1], [8, 2], [9, 7]];\n    const data5 = [[1, 1], [2, 7], [3, 5], [4, 6], [5, 5], [6, 4], [7, 2], [8, 4], [9, 8]];\n    return (\n      <Chart renderer=\"canvas\" className={'story-chart'}>\n        <Axis id={getAxisId('bottom')} title={'index'} position={Position.Bottom} />\n        <Axis\n          id={getAxisId('left')}\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n          domain={{ min: 0, max: 15 }}\n        />\n        <Axis\n          id={getAxisId('left group b')}\n          groupId={getGroupId('gb')}\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n          hide={true}\n          domain={{ min: 0, max: 15 }}\n        />\n        <BarSeries\n          id={getSpecId('stacked bar 1')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          stackAccessors={[0]}\n          data={data1}\n          yScaleToDataExtent={false}\n        />\n        <BarSeries\n          id={getSpecId('stacked bar 2')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          stackAccessors={[0]}\n          data={data2}\n          yScaleToDataExtent={false}\n        />\n\n        <BarSeries\n          id={getSpecId('stacked bar A')}\n          groupId={getGroupId('gb')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          stackAccessors={[0]}\n          data={data4}\n          yScaleToDataExtent={false}\n        />\n        <BarSeries\n          id={getSpecId('stacked bar B')}\n          groupId={getGroupId('gb')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          stackAccessors={[0]}\n          data={data5}\n          yScaleToDataExtent={false}\n        />\n        <BarSeries\n          id={getSpecId('non stacked bar')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={data3}\n          yScaleToDataExtent={false}\n        />\n      </Chart>\n    );\n  });\n\n  ","export { Axis } from './axis';\nexport { LineAnnotation } from './line_annotation';\nexport { RectAnnotation } from './rect_annotation';\nexport { LineSeries } from './line_series';\nexport { BarSeries } from './bar_series';\nexport { AreaSeries } from './area_series';\nexport { Settings } from './settings';\n","import { inject } from 'mobx-react';\nimport { PureComponent } from 'react';\nimport { AxisSpec as AxisSpecType, Position } from '../lib/series/specs';\nimport { getGroupId } from '../lib/utils/ids';\nimport { SpecProps } from './specs_parser';\n\ntype AxisSpecProps = SpecProps & AxisSpecType;\n\nclass AxisSpec extends PureComponent<AxisSpecProps> {\n  static defaultProps: Partial<AxisSpecProps> = {\n    groupId: getGroupId('__global__'),\n    hide: false,\n    showOverlappingTicks: false,\n    showOverlappingLabels: false,\n    position: Position.Left,\n    tickSize: 10,\n    tickPadding: 10,\n    tickFormat: (tick: any) => `${tick}`,\n    tickLabelRotation: 0,\n  };\n  componentDidMount() {\n    const { chartStore, children, ...spec } = this.props;\n    chartStore!.addAxisSpec({ ...spec });\n  }\n  componentDidUpdate() {\n    const { chartStore, children, ...spec } = this.props;\n    chartStore!.addAxisSpec({ ...spec });\n  }\n  componentWillUnmount() {\n    const { id } = this.props;\n    this.props.chartStore!.removeAxisSpec(id);\n  }\n  render() {\n    return null;\n  }\n}\n\nexport const Axis = inject('chartStore')(AxisSpec);\ntry {\n    // @ts-ignore\n    Axis.displayName = \"Axis\";\n    // @ts-ignore\n    Axis.__docgenInfo = { \"description\": \"\", \"displayName\": \"Axis\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/specs/axis.tsx#Axis\"] = { docgenInfo: Axis.__docgenInfo, name: \"Axis\", path: \"src/specs/axis.tsx#Axis\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { inject } from 'mobx-react';\nimport React, { createRef, CSSProperties, PureComponent } from 'react';\nimport { LineAnnotationSpec } from '../lib/series/specs';\nimport { DEFAULT_ANNOTATION_LINE_STYLE } from '../lib/themes/theme';\nimport { getGroupId } from '../lib/utils/ids';\nimport { SpecProps } from './specs_parser';\n\ntype LineAnnotationProps = SpecProps & LineAnnotationSpec;\n\nexport class LineAnnotationSpecComponent extends PureComponent<LineAnnotationProps> {\n  static defaultProps: Partial<LineAnnotationProps> = {\n    groupId: getGroupId('__global__'),\n    annotationType: 'line',\n    style: DEFAULT_ANNOTATION_LINE_STYLE,\n    hideLines: false,\n    hideTooltips: false,\n    zIndex: 1,\n  };\n\n  private markerRef = createRef<HTMLDivElement>();\n\n  componentDidMount() {\n    const { chartStore, children, ...config } = this.props;\n    if (this.markerRef.current) {\n      const { offsetWidth, offsetHeight } = this.markerRef.current;\n      config.markerDimensions = {\n        width: offsetWidth,\n        height: offsetHeight,\n      };\n    }\n    chartStore!.addAnnotationSpec({ ...config });\n  }\n  componentDidUpdate() {\n    const { chartStore, children, ...config } = this.props;\n    if (this.markerRef.current) {\n      const { offsetWidth, offsetHeight } = this.markerRef.current;\n      config.markerDimensions = {\n        width: offsetWidth,\n        height: offsetHeight,\n      };\n    }\n    chartStore!.addAnnotationSpec({ ...config });\n  }\n  componentWillUnmount() {\n    const { chartStore, annotationId } = this.props;\n    chartStore!.removeAnnotationSpec(annotationId);\n  }\n  render() {\n    if (!this.props.marker) {\n      return null;\n    }\n\n    // We need to get the width & height of the marker passed into the spec\n    // so we render the marker offscreen if one has been defined & update the config\n    // with the width & height.\n    const offscreenStyle: CSSProperties = {\n      position: 'absolute',\n      left: -9999,\n      opacity: 0,\n    };\n\n    return (<div ref={this.markerRef} style={{ ...offscreenStyle }}>{this.props.marker}</div>);\n  }\n}\n\nexport const LineAnnotation = inject('chartStore')(LineAnnotationSpecComponent);\ntry {\n    // @ts-ignore\n    LineAnnotationSpecComponent.displayName = \"LineAnnotationSpecComponent\";\n    // @ts-ignore\n    LineAnnotationSpecComponent.__docgenInfo = { \"description\": \"\", \"displayName\": \"LineAnnotationSpecComponent\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/specs/line_annotation.tsx#LineAnnotationSpecComponent\"] = { docgenInfo: LineAnnotationSpecComponent.__docgenInfo, name: \"LineAnnotationSpecComponent\", path: \"src/specs/line_annotation.tsx#LineAnnotationSpecComponent\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    LineAnnotation.displayName = \"LineAnnotation\";\n    // @ts-ignore\n    LineAnnotation.__docgenInfo = { \"description\": \"\", \"displayName\": \"LineAnnotation\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/specs/line_annotation.tsx#LineAnnotation\"] = { docgenInfo: LineAnnotation.__docgenInfo, name: \"LineAnnotation\", path: \"src/specs/line_annotation.tsx#LineAnnotation\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","var map = {\n\t\"./af\": 490,\n\t\"./af.js\": 490,\n\t\"./ar\": 491,\n\t\"./ar-dz\": 492,\n\t\"./ar-dz.js\": 492,\n\t\"./ar-kw\": 493,\n\t\"./ar-kw.js\": 493,\n\t\"./ar-ly\": 494,\n\t\"./ar-ly.js\": 494,\n\t\"./ar-ma\": 495,\n\t\"./ar-ma.js\": 495,\n\t\"./ar-sa\": 496,\n\t\"./ar-sa.js\": 496,\n\t\"./ar-tn\": 497,\n\t\"./ar-tn.js\": 497,\n\t\"./ar.js\": 491,\n\t\"./az\": 498,\n\t\"./az.js\": 498,\n\t\"./be\": 499,\n\t\"./be.js\": 499,\n\t\"./bg\": 500,\n\t\"./bg.js\": 500,\n\t\"./bm\": 501,\n\t\"./bm.js\": 501,\n\t\"./bn\": 502,\n\t\"./bn.js\": 502,\n\t\"./bo\": 503,\n\t\"./bo.js\": 503,\n\t\"./br\": 504,\n\t\"./br.js\": 504,\n\t\"./bs\": 505,\n\t\"./bs.js\": 505,\n\t\"./ca\": 506,\n\t\"./ca.js\": 506,\n\t\"./cs\": 507,\n\t\"./cs.js\": 507,\n\t\"./cv\": 508,\n\t\"./cv.js\": 508,\n\t\"./cy\": 509,\n\t\"./cy.js\": 509,\n\t\"./da\": 510,\n\t\"./da.js\": 510,\n\t\"./de\": 511,\n\t\"./de-at\": 512,\n\t\"./de-at.js\": 512,\n\t\"./de-ch\": 513,\n\t\"./de-ch.js\": 513,\n\t\"./de.js\": 511,\n\t\"./dv\": 514,\n\t\"./dv.js\": 514,\n\t\"./el\": 515,\n\t\"./el.js\": 515,\n\t\"./en-SG\": 516,\n\t\"./en-SG.js\": 516,\n\t\"./en-au\": 517,\n\t\"./en-au.js\": 517,\n\t\"./en-ca\": 518,\n\t\"./en-ca.js\": 518,\n\t\"./en-gb\": 519,\n\t\"./en-gb.js\": 519,\n\t\"./en-ie\": 520,\n\t\"./en-ie.js\": 520,\n\t\"./en-il\": 521,\n\t\"./en-il.js\": 521,\n\t\"./en-nz\": 522,\n\t\"./en-nz.js\": 522,\n\t\"./eo\": 523,\n\t\"./eo.js\": 523,\n\t\"./es\": 524,\n\t\"./es-do\": 525,\n\t\"./es-do.js\": 525,\n\t\"./es-us\": 526,\n\t\"./es-us.js\": 526,\n\t\"./es.js\": 524,\n\t\"./et\": 527,\n\t\"./et.js\": 527,\n\t\"./eu\": 528,\n\t\"./eu.js\": 528,\n\t\"./fa\": 529,\n\t\"./fa.js\": 529,\n\t\"./fi\": 530,\n\t\"./fi.js\": 530,\n\t\"./fo\": 531,\n\t\"./fo.js\": 531,\n\t\"./fr\": 532,\n\t\"./fr-ca\": 533,\n\t\"./fr-ca.js\": 533,\n\t\"./fr-ch\": 534,\n\t\"./fr-ch.js\": 534,\n\t\"./fr.js\": 532,\n\t\"./fy\": 535,\n\t\"./fy.js\": 535,\n\t\"./ga\": 536,\n\t\"./ga.js\": 536,\n\t\"./gd\": 537,\n\t\"./gd.js\": 537,\n\t\"./gl\": 538,\n\t\"./gl.js\": 538,\n\t\"./gom-latn\": 539,\n\t\"./gom-latn.js\": 539,\n\t\"./gu\": 540,\n\t\"./gu.js\": 540,\n\t\"./he\": 541,\n\t\"./he.js\": 541,\n\t\"./hi\": 542,\n\t\"./hi.js\": 542,\n\t\"./hr\": 543,\n\t\"./hr.js\": 543,\n\t\"./hu\": 544,\n\t\"./hu.js\": 544,\n\t\"./hy-am\": 545,\n\t\"./hy-am.js\": 545,\n\t\"./id\": 546,\n\t\"./id.js\": 546,\n\t\"./is\": 547,\n\t\"./is.js\": 547,\n\t\"./it\": 548,\n\t\"./it-ch\": 549,\n\t\"./it-ch.js\": 549,\n\t\"./it.js\": 548,\n\t\"./ja\": 550,\n\t\"./ja.js\": 550,\n\t\"./jv\": 551,\n\t\"./jv.js\": 551,\n\t\"./ka\": 552,\n\t\"./ka.js\": 552,\n\t\"./kk\": 553,\n\t\"./kk.js\": 553,\n\t\"./km\": 554,\n\t\"./km.js\": 554,\n\t\"./kn\": 555,\n\t\"./kn.js\": 555,\n\t\"./ko\": 556,\n\t\"./ko.js\": 556,\n\t\"./ku\": 557,\n\t\"./ku.js\": 557,\n\t\"./ky\": 558,\n\t\"./ky.js\": 558,\n\t\"./lb\": 559,\n\t\"./lb.js\": 559,\n\t\"./lo\": 560,\n\t\"./lo.js\": 560,\n\t\"./lt\": 561,\n\t\"./lt.js\": 561,\n\t\"./lv\": 562,\n\t\"./lv.js\": 562,\n\t\"./me\": 563,\n\t\"./me.js\": 563,\n\t\"./mi\": 564,\n\t\"./mi.js\": 564,\n\t\"./mk\": 565,\n\t\"./mk.js\": 565,\n\t\"./ml\": 566,\n\t\"./ml.js\": 566,\n\t\"./mn\": 567,\n\t\"./mn.js\": 567,\n\t\"./mr\": 568,\n\t\"./mr.js\": 568,\n\t\"./ms\": 569,\n\t\"./ms-my\": 570,\n\t\"./ms-my.js\": 570,\n\t\"./ms.js\": 569,\n\t\"./mt\": 571,\n\t\"./mt.js\": 571,\n\t\"./my\": 572,\n\t\"./my.js\": 572,\n\t\"./nb\": 573,\n\t\"./nb.js\": 573,\n\t\"./ne\": 574,\n\t\"./ne.js\": 574,\n\t\"./nl\": 575,\n\t\"./nl-be\": 576,\n\t\"./nl-be.js\": 576,\n\t\"./nl.js\": 575,\n\t\"./nn\": 577,\n\t\"./nn.js\": 577,\n\t\"./pa-in\": 578,\n\t\"./pa-in.js\": 578,\n\t\"./pl\": 579,\n\t\"./pl.js\": 579,\n\t\"./pt\": 580,\n\t\"./pt-br\": 581,\n\t\"./pt-br.js\": 581,\n\t\"./pt.js\": 580,\n\t\"./ro\": 582,\n\t\"./ro.js\": 582,\n\t\"./ru\": 583,\n\t\"./ru.js\": 583,\n\t\"./sd\": 584,\n\t\"./sd.js\": 584,\n\t\"./se\": 585,\n\t\"./se.js\": 585,\n\t\"./si\": 586,\n\t\"./si.js\": 586,\n\t\"./sk\": 587,\n\t\"./sk.js\": 587,\n\t\"./sl\": 588,\n\t\"./sl.js\": 588,\n\t\"./sq\": 589,\n\t\"./sq.js\": 589,\n\t\"./sr\": 590,\n\t\"./sr-cyrl\": 591,\n\t\"./sr-cyrl.js\": 591,\n\t\"./sr.js\": 590,\n\t\"./ss\": 592,\n\t\"./ss.js\": 592,\n\t\"./sv\": 593,\n\t\"./sv.js\": 593,\n\t\"./sw\": 594,\n\t\"./sw.js\": 594,\n\t\"./ta\": 595,\n\t\"./ta.js\": 595,\n\t\"./te\": 596,\n\t\"./te.js\": 596,\n\t\"./tet\": 597,\n\t\"./tet.js\": 597,\n\t\"./tg\": 598,\n\t\"./tg.js\": 598,\n\t\"./th\": 599,\n\t\"./th.js\": 599,\n\t\"./tl-ph\": 600,\n\t\"./tl-ph.js\": 600,\n\t\"./tlh\": 601,\n\t\"./tlh.js\": 601,\n\t\"./tr\": 602,\n\t\"./tr.js\": 602,\n\t\"./tzl\": 603,\n\t\"./tzl.js\": 603,\n\t\"./tzm\": 604,\n\t\"./tzm-latn\": 605,\n\t\"./tzm-latn.js\": 605,\n\t\"./tzm.js\": 604,\n\t\"./ug-cn\": 606,\n\t\"./ug-cn.js\": 606,\n\t\"./uk\": 607,\n\t\"./uk.js\": 607,\n\t\"./ur\": 608,\n\t\"./ur.js\": 608,\n\t\"./uz\": 609,\n\t\"./uz-latn\": 610,\n\t\"./uz-latn.js\": 610,\n\t\"./uz.js\": 609,\n\t\"./vi\": 611,\n\t\"./vi.js\": 611,\n\t\"./x-pseudo\": 612,\n\t\"./x-pseudo.js\": 612,\n\t\"./yo\": 613,\n\t\"./yo.js\": 613,\n\t\"./zh-cn\": 614,\n\t\"./zh-cn.js\": 614,\n\t\"./zh-hk\": 615,\n\t\"./zh-hk.js\": 615,\n\t\"./zh-tw\": 616,\n\t\"./zh-tw.js\": 616\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1145;","import { XDomain } from '../series/domains/x_domain';\nimport { YDomain } from '../series/domains/y_domain';\nimport { computeXScale, computeYScales } from '../series/scales';\nimport {\n  AxisSpec,\n  CompleteBoundedDomain,\n  DomainRange,\n  LowerBoundedDomain,\n  Position,\n  Rotation,\n  TickFormatter,\n  UpperBoundedDomain,\n} from '../series/specs';\nimport { AxisConfig, Theme } from '../themes/theme';\nimport { Dimensions, Margins } from '../utils/dimensions';\nimport { Domain } from '../utils/domain';\nimport { AxisId, GroupId } from '../utils/ids';\nimport { Scale, ScaleType } from '../utils/scales/scales';\nimport { BBox, BBoxCalculator } from './bbox_calculator';\n\nexport type AxisLinePosition = [number, number, number, number];\n\nexport interface AxisTick {\n  value: number | string;\n  label: string;\n  position: number;\n}\n\nexport interface AxisTicksDimensions {\n  axisScaleType: ScaleType;\n  axisScaleDomain: Domain;\n  tickValues: string[] | number[];\n  tickLabels: string[];\n  maxLabelBboxWidth: number;\n  maxLabelBboxHeight: number;\n  maxLabelTextWidth: number;\n  maxLabelTextHeight: number;\n}\n\nexport interface TickLabelProps {\n  x: number;\n  y: number;\n  align: string;\n  verticalAlign: string;\n}\n\n/**\n * Compute the ticks values and identify max width and height of the labels\n * so we can compute the max space occupied by the axis component.\n * @param axisSpec tbe spec of the axis\n * @param xDomain the x domain associated\n * @param yDomain the y domain array\n * @param totalBarsInCluster the total number of grouped series\n * @param bboxCalculator an instance of the boundingbox calculator\n * @param chartRotation the rotation of the chart\n */\nexport function computeAxisTicksDimensions(\n  axisSpec: AxisSpec,\n  xDomain: XDomain,\n  yDomain: YDomain[],\n  totalBarsInCluster: number,\n  bboxCalculator: BBoxCalculator,\n  chartRotation: Rotation,\n  axisConfig: AxisConfig,\n  barsPadding?: number,\n): AxisTicksDimensions | null {\n  if (axisSpec.hide) {\n    return null;\n  }\n\n  const scale = getScaleForAxisSpec(\n    axisSpec,\n    xDomain,\n    yDomain,\n    totalBarsInCluster,\n    chartRotation,\n    0,\n    1,\n    barsPadding,\n  );\n  if (!scale) {\n    throw new Error(`Cannot compute scale for axis spec ${axisSpec.id}`);\n  }\n  const dimensions = computeTickDimensions(\n    scale,\n    axisSpec.tickFormat,\n    bboxCalculator,\n    axisConfig,\n    axisSpec.tickLabelRotation,\n  );\n\n  return {\n    axisScaleDomain: xDomain.domain,\n    axisScaleType: xDomain.scaleType,\n    ...dimensions,\n  };\n}\n\nexport function isYDomain(position: Position, chartRotation: Rotation): boolean {\n  const isStraightRotation = chartRotation === 0 || chartRotation === 180;\n  if (isVertical(position)) {\n    return isStraightRotation;\n  }\n\n  return !isStraightRotation;\n}\n\nexport function getScaleForAxisSpec(\n  axisSpec: AxisSpec,\n  xDomain: XDomain,\n  yDomain: YDomain[],\n  totalBarsInCluster: number,\n  chartRotation: Rotation,\n  minRange: number,\n  maxRange: number,\n  barsPadding?: number,\n): Scale | null {\n  const axisIsYDomain = isYDomain(axisSpec.position, chartRotation);\n\n  if (axisIsYDomain) {\n    const yScales = computeYScales(yDomain, minRange, maxRange);\n    if (yScales.has(axisSpec.groupId)) {\n      return yScales.get(axisSpec.groupId)!;\n    }\n    return null;\n  } else {\n    return computeXScale(xDomain, totalBarsInCluster, minRange, maxRange, barsPadding);\n  }\n}\n\nexport function computeRotatedLabelDimensions(unrotatedDims: BBox, degreesRotation: number): BBox {\n  const { width, height } = unrotatedDims;\n\n  const radians = (degreesRotation * Math.PI) / 180;\n\n  const rotatedHeight = Math.abs(width * Math.sin(radians)) + Math.abs(height * Math.cos(radians));\n  const rotatedWidth = Math.abs(width * Math.cos(radians)) + Math.abs(height * Math.sin(radians));\n\n  return {\n    width: rotatedWidth,\n    height: rotatedHeight,\n  };\n}\n\nexport const getMaxBboxDimensions = (\n  bboxCalculator: BBoxCalculator,\n  fontSize: number,\n  fontFamily: string,\n  tickLabelRotation: number,\n) => (\n  acc: { [key: string]: number },\n  tickLabel: string,\n): {\n  maxLabelBboxWidth: number;\n  maxLabelBboxHeight: number;\n  maxLabelTextWidth: number;\n  maxLabelTextHeight: number;\n} => {\n  const bbox = bboxCalculator.compute(tickLabel, fontSize, fontFamily).getOrElse({\n    width: 0,\n    height: 0,\n  });\n\n  const rotatedBbox = computeRotatedLabelDimensions(bbox, tickLabelRotation);\n\n  const width = Math.ceil(rotatedBbox.width);\n  const height = Math.ceil(rotatedBbox.height);\n  const labelWidth = Math.ceil(bbox.width);\n  const labelHeight = Math.ceil(bbox.height);\n\n  const prevWidth = acc.maxLabelBboxWidth;\n  const prevHeight = acc.maxLabelBboxHeight;\n  const prevLabelWidth = acc.maxLabelTextWidth;\n  const prevLabelHeight = acc.maxLabelTextHeight;\n\n  return {\n    maxLabelBboxWidth: prevWidth > width ? prevWidth : width,\n    maxLabelBboxHeight: prevHeight > height ? prevHeight : height,\n    maxLabelTextWidth: prevLabelWidth > labelWidth ? prevLabelWidth : labelWidth,\n    maxLabelTextHeight: prevLabelHeight > labelHeight ? prevLabelHeight : labelHeight,\n  };\n};\n\nfunction computeTickDimensions(\n  scale: Scale,\n  tickFormat: TickFormatter,\n  bboxCalculator: BBoxCalculator,\n  axisConfig: AxisConfig,\n  tickLabelRotation: number = 0,\n) {\n  const tickValues = scale.ticks();\n  const tickLabels = tickValues.map(tickFormat);\n\n  const {\n    tickLabelStyle: { fontFamily, fontSize },\n  } = axisConfig;\n\n  const {\n    maxLabelBboxWidth,\n    maxLabelBboxHeight,\n    maxLabelTextWidth,\n    maxLabelTextHeight,\n  } = tickLabels.reduce(\n    getMaxBboxDimensions(bboxCalculator, fontSize, fontFamily, tickLabelRotation),\n    { maxLabelBboxWidth: 0, maxLabelBboxHeight: 0, maxLabelTextWidth: 0, maxLabelTextHeight: 0 },\n  );\n\n  return {\n    tickValues,\n    tickLabels,\n    maxLabelBboxWidth,\n    maxLabelBboxHeight,\n    maxLabelTextWidth,\n    maxLabelTextHeight,\n  };\n}\n\n/**\n * The Konva api sets the top right corner of a shape as the default origin of rotation.\n * In order to apply rotation to tick labels while preserving their relative position to the axis,\n * we compute offsets to apply to the Text element as well as adjust the x/y coordinates to adjust\n * for these offsets.\n */\nexport function centerRotationOrigin(\n  axisTicksDimensions: {\n    maxLabelBboxWidth: number;\n    maxLabelBboxHeight: number;\n    maxLabelTextWidth: number;\n    maxLabelTextHeight: number;\n  },\n  coordinates: { x: number; y: number },\n): { x: number; y: number; offsetX: number; offsetY: number } {\n  const {\n    maxLabelBboxWidth,\n    maxLabelBboxHeight,\n    maxLabelTextWidth,\n    maxLabelTextHeight,\n  } = axisTicksDimensions;\n\n  const offsetX = maxLabelTextWidth / 2;\n  const offsetY = maxLabelTextHeight / 2;\n  const x = coordinates.x + maxLabelBboxWidth / 2;\n  const y = coordinates.y + maxLabelBboxHeight / 2;\n\n  return { offsetX, offsetY, x, y };\n}\n\n/**\n * Gets the computed x/y coordinates & alignment properties for an axis tick label.\n * @param isVerticalAxis if the axis is vertical (in contrast to horizontal)\n * @param tickLabelRotation degree of rotation of the tick label\n * @param tickSize length of tick line\n * @param tickPadding amount of padding between label and tick line\n * @param tickPosition position of tick relative to axis line origin and other ticks along it\n * @param axisPosition position of where the axis sits relative to the visualization\n * @param axisTicksDimensions computed axis dimensions and values (from computeTickDimensions)\n */\nexport function getTickLabelProps(\n  tickLabelRotation: number,\n  tickSize: number,\n  tickPadding: number,\n  tickPosition: number,\n  axisPosition: Position,\n  axisTicksDimensions: AxisTicksDimensions,\n): TickLabelProps {\n  const { maxLabelBboxWidth, maxLabelBboxHeight } = axisTicksDimensions;\n  const isVerticalAxis = isVertical(axisPosition);\n  const isRotated = tickLabelRotation !== 0;\n  let align = 'center';\n  let verticalAlign = 'middle';\n\n  if (isVerticalAxis) {\n    const isAxisLeft = axisPosition === Position.Left;\n\n    if (!isRotated) {\n      align = isAxisLeft ? 'right' : 'left';\n    }\n\n    return {\n      x: isAxisLeft ? -maxLabelBboxWidth : tickSize + tickPadding,\n      y: tickPosition - maxLabelBboxHeight / 2,\n      align,\n      verticalAlign,\n    };\n  }\n\n  const isAxisTop = axisPosition === Position.Top;\n\n  if (!isRotated) {\n    verticalAlign = isAxisTop ? 'bottom' : 'top';\n  }\n\n  return {\n    x: tickPosition - maxLabelBboxWidth / 2,\n    y: isAxisTop ? 0 : tickSize + tickPadding,\n    align,\n    verticalAlign,\n  };\n}\n\nexport function getVerticalAxisTickLineProps(\n  position: Position,\n  tickPadding: number,\n  tickSize: number,\n  tickPosition: number,\n): AxisLinePosition {\n  const isLeftAxis = position === Position.Left;\n  const y = tickPosition;\n  const x1 = isLeftAxis ? tickPadding : 0;\n  const x2 = isLeftAxis ? tickSize + tickPadding : tickSize;\n\n  return [x1, y, x2, y];\n}\n\nexport function getHorizontalAxisTickLineProps(\n  position: Position,\n  tickPadding: number,\n  tickSize: number,\n  tickPosition: number,\n  labelHeight: number,\n): AxisLinePosition {\n  const isTopAxis = position === Position.Top;\n  const x = tickPosition;\n  const y1 = isTopAxis ? labelHeight + tickPadding : 0;\n  const y2 = isTopAxis ? labelHeight + tickPadding + tickSize : tickSize;\n\n  return [x, y1, x, y2];\n}\n\nexport function getVerticalAxisGridLineProps(\n  tickPosition: number,\n  chartWidth: number,\n): AxisLinePosition {\n  return [0, tickPosition, chartWidth, tickPosition];\n}\n\nexport function getHorizontalAxisGridLineProps(\n  tickPosition: number,\n  chartHeight: number,\n): AxisLinePosition {\n  return [tickPosition, 0, tickPosition, chartHeight];\n}\n\nexport function getMinMaxRange(\n  axisPosition: Position,\n  chartRotation: Rotation,\n  chartDimensions: Dimensions,\n): {\n  minRange: number;\n  maxRange: number;\n} {\n  const { width, height } = chartDimensions;\n  switch (axisPosition) {\n    case Position.Bottom:\n    case Position.Top:\n      return getBottomTopAxisMinMaxRange(chartRotation, width);\n    case Position.Left:\n    case Position.Right:\n      return getLeftAxisMinMaxRange(chartRotation, height);\n  }\n}\n\nexport function getBottomTopAxisMinMaxRange(chartRotation: Rotation, width: number) {\n  switch (chartRotation) {\n    case 0:\n      // dealing with x domain\n      return { minRange: 0, maxRange: width };\n    case 90:\n      // dealing with y domain\n      return { minRange: 0, maxRange: width };\n    case -90:\n      // dealing with y domain\n      return { minRange: width, maxRange: 0 };\n    case 180:\n      // dealing with x domain\n      return { minRange: width, maxRange: 0 };\n  }\n}\nexport function getLeftAxisMinMaxRange(chartRotation: Rotation, height: number) {\n  switch (chartRotation) {\n    case 0:\n      // dealing with y domain\n      return { minRange: height, maxRange: 0 };\n    case 90:\n      // dealing with x domain\n      return { minRange: 0, maxRange: height };\n    case -90:\n      // dealing with x domain\n      return { minRange: height, maxRange: 0 };\n    case 180:\n      // dealing with y domain\n      return { minRange: 0, maxRange: height };\n  }\n}\n\nexport function getAvailableTicks(axisSpec: AxisSpec, scale: Scale, totalBarsInCluster: number) {\n  const ticks = scale.ticks();\n  const shift = totalBarsInCluster > 0 ? totalBarsInCluster : 1;\n  const offset = (scale.bandwidth * shift) / 2;\n  return ticks.map((tick) => {\n    return {\n      value: tick,\n      label: axisSpec.tickFormat(tick),\n      position: scale.scale(tick) + offset,\n    };\n  });\n}\nexport function getVisibleTicks(\n  allTicks: AxisTick[],\n  axisSpec: AxisSpec,\n  axisDim: AxisTicksDimensions,\n): AxisTick[] {\n  // We sort the ticks by position so that we can incrementally compute previousOccupiedSpace\n  allTicks.sort((a: AxisTick, b: AxisTick) => a.position - b.position);\n\n  const { showOverlappingTicks, showOverlappingLabels } = axisSpec;\n  const { maxLabelBboxHeight, maxLabelBboxWidth } = axisDim;\n\n  const requiredSpace = isVertical(axisSpec.position)\n    ? maxLabelBboxHeight / 2\n    : maxLabelBboxWidth / 2;\n\n  let previousOccupiedSpace = 0;\n  const visibleTicks = [];\n  for (let i = 0; i < allTicks.length; i++) {\n    const { position } = allTicks[i];\n\n    if (i === 0) {\n      visibleTicks.push(allTicks[i]);\n      previousOccupiedSpace = position + requiredSpace;\n    } else if (position - requiredSpace >= previousOccupiedSpace) {\n      visibleTicks.push(allTicks[i]);\n      previousOccupiedSpace = position + requiredSpace;\n    } else {\n      // still add the tick but without a label\n      if (showOverlappingTicks || showOverlappingLabels) {\n        const overlappingTick = {\n          ...allTicks[i],\n          label: showOverlappingLabels ? allTicks[i].label : '',\n        };\n        visibleTicks.push(overlappingTick);\n      }\n    }\n  }\n  return visibleTicks;\n}\n\nexport function getAxisPosition(\n  chartDimensions: Dimensions,\n  chartMargins: Margins,\n  axisTitleHeight: number,\n  axisSpec: AxisSpec,\n  axisDim: AxisTicksDimensions,\n  cumTopSum: number,\n  cumBottomSum: number,\n  cumLeftSum: number,\n  cumRightSum: number,\n) {\n  const { position, tickSize, tickPadding } = axisSpec;\n  const { maxLabelBboxHeight, maxLabelBboxWidth } = axisDim;\n  const { top, left, height, width } = chartDimensions;\n  const dimensions = {\n    top,\n    left,\n    width,\n    height,\n  };\n  let topIncrement = 0;\n  let bottomIncrement = 0;\n  let leftIncrement = 0;\n  let rightIncrement = 0;\n\n  if (isVertical(position)) {\n    if (position === Position.Left) {\n      leftIncrement =\n        maxLabelBboxWidth + tickSize + tickPadding + chartMargins.left + axisTitleHeight;\n      dimensions.left = maxLabelBboxWidth + cumLeftSum + chartMargins.left + axisTitleHeight;\n    } else {\n      rightIncrement =\n        maxLabelBboxWidth + tickSize + tickPadding + chartMargins.right + axisTitleHeight;\n      dimensions.left = left + width + cumRightSum;\n    }\n    dimensions.width = maxLabelBboxWidth;\n  } else {\n    if (position === Position.Top) {\n      topIncrement =\n        maxLabelBboxHeight + tickSize + tickPadding + chartMargins.top + axisTitleHeight;\n      dimensions.top = cumTopSum + chartMargins.top + axisTitleHeight;\n    } else {\n      bottomIncrement =\n        maxLabelBboxHeight + tickSize + tickPadding + chartMargins.bottom + axisTitleHeight;\n      dimensions.top = top + height + cumBottomSum;\n    }\n    dimensions.height = maxLabelBboxHeight;\n  }\n\n  return { dimensions, topIncrement, bottomIncrement, leftIncrement, rightIncrement };\n}\n\nexport function getAxisTicksPositions(\n  chartDimensions: Dimensions,\n  chartTheme: Theme,\n  chartRotation: Rotation,\n  showLegend: boolean,\n  axisSpecs: Map<AxisId, AxisSpec>,\n  axisDimensions: Map<AxisId, AxisTicksDimensions>,\n  xDomain: XDomain,\n  yDomain: YDomain[],\n  totalGroupsCount: number,\n  legendPosition?: Position,\n  barsPadding?: number,\n) {\n  const { chartPaddings, chartMargins } = chartTheme;\n  const legendStyle = chartTheme.legend;\n  const axisPositions: Map<AxisId, Dimensions> = new Map();\n  const axisVisibleTicks: Map<AxisId, AxisTick[]> = new Map();\n  const axisTicks: Map<AxisId, AxisTick[]> = new Map();\n  const axisGridLinesPositions: Map<AxisId, AxisLinePosition[]> = new Map();\n\n  let cumTopSum = 0;\n  let cumBottomSum = chartPaddings.bottom;\n  let cumLeftSum = 0;\n  let cumRightSum = chartPaddings.right;\n  if (showLegend) {\n    switch (legendPosition) {\n      case Position.Left:\n        cumLeftSum += legendStyle.verticalWidth;\n        break;\n      // case Position.Right:\n      //   cumRightSum += legendStyle.verticalWidth;\n      //   break;\n      // case Position.Bottom:\n      //   cumBottomSum += legendStyle.horizontalHeight;\n      //   break;\n      case Position.Top:\n        cumTopSum += legendStyle.horizontalHeight;\n        break;\n    }\n  }\n  // console.log({cumRightSum});\n  // let cumTopSum = showLegend ? legendStyle.horizontalHeight : 0;\n  // let cumBottomSum = chartConfig.paddings.bottom;\n  // let cumLeftSum = showLegend ? legendStyle.verticalWidth : 0;\n  // let cumRightSum = chartConfig.paddings.right;\n  axisDimensions.forEach((axisDim, id) => {\n    const axisSpec = axisSpecs.get(id);\n\n    // Consider refactoring this so this condition can be tested\n    // Given some of the values that get passed around, maybe re-write as a reduce instead of forEach?\n    if (!axisSpec) {\n      return;\n    }\n    const minMaxRanges = getMinMaxRange(axisSpec.position, chartRotation, chartDimensions);\n\n    const scale = getScaleForAxisSpec(\n      axisSpec,\n      xDomain,\n      yDomain,\n      totalGroupsCount,\n      chartRotation,\n      minMaxRanges.minRange,\n      minMaxRanges.maxRange,\n      barsPadding,\n    );\n\n    if (!scale) {\n      throw new Error(`Cannot compute scale for axis spec ${axisSpec.id}`);\n    }\n\n    const allTicks = getAvailableTicks(axisSpec, scale, totalGroupsCount);\n    const visibleTicks = getVisibleTicks(allTicks, axisSpec, axisDim);\n\n    if (axisSpec.showGridLines) {\n      const isVerticalAxis = isVertical(axisSpec.position);\n      const gridLines = visibleTicks.map(\n        (tick: AxisTick): AxisLinePosition => {\n          return computeAxisGridLinePositions(isVerticalAxis, tick.position, chartDimensions);\n        },\n      );\n      axisGridLinesPositions.set(id, gridLines);\n    }\n\n    const { fontSize, padding } = chartTheme.axes.axisTitleStyle;\n    const axisTitleHeight = fontSize + padding;\n\n    const axisPosition = getAxisPosition(\n      chartDimensions,\n      chartMargins,\n      axisTitleHeight,\n      axisSpec,\n      axisDim,\n      cumTopSum,\n      cumBottomSum,\n      cumLeftSum,\n      cumRightSum,\n    );\n\n    cumTopSum += axisPosition.topIncrement;\n    cumBottomSum += axisPosition.bottomIncrement;\n    cumLeftSum += axisPosition.leftIncrement;\n    cumRightSum += axisPosition.rightIncrement;\n    axisPositions.set(id, axisPosition.dimensions);\n    axisVisibleTicks.set(id, visibleTicks);\n    axisTicks.set(id, allTicks);\n  });\n  return {\n    axisPositions,\n    axisTicks,\n    axisVisibleTicks,\n    axisGridLinesPositions,\n  };\n}\n\nexport function computeAxisGridLinePositions(\n  isVerticalAxis: boolean,\n  tickPosition: number,\n  chartDimensions: Dimensions,\n): AxisLinePosition {\n  const positions = isVerticalAxis\n    ? getVerticalAxisGridLineProps(tickPosition, chartDimensions.width)\n    : getHorizontalAxisGridLineProps(tickPosition, chartDimensions.height);\n\n  return positions;\n}\n\nexport function isVertical(position: Position) {\n  return position === Position.Left || position === Position.Right;\n}\n\nexport function isHorizontal(position: Position) {\n  return !isVertical(position);\n}\n\nexport function isLowerBound(domain: Partial<CompleteBoundedDomain>): domain is LowerBoundedDomain {\n  return domain.min != null;\n}\n\nexport function isUpperBound(domain: Partial<CompleteBoundedDomain>): domain is UpperBoundedDomain {\n  return domain.max != null;\n}\n\nexport function isCompleteBound(\n  domain: Partial<CompleteBoundedDomain>,\n): domain is CompleteBoundedDomain {\n  return domain.max != null && domain.min != null;\n}\n\nexport function isBounded(domain: Partial<CompleteBoundedDomain>): domain is DomainRange {\n  return domain.max != null || domain.min != null;\n}\n\nexport function mergeDomainsByGroupId(\n  axesSpecs: Map<AxisId, AxisSpec>,\n  chartRotation: Rotation,\n): Map<GroupId, DomainRange> {\n  const domainsByGroupId = new Map<GroupId, DomainRange>();\n\n  axesSpecs.forEach((spec: AxisSpec, id: AxisId) => {\n    const { groupId, domain } = spec;\n\n    if (!domain) {\n      return;\n    }\n\n    const isAxisYDomain = isYDomain(spec.position, chartRotation);\n\n    if (!isAxisYDomain) {\n      const errorMessage = `[Axis ${id}]: custom domain for xDomain should be defined in Settings`;\n      throw new Error(errorMessage);\n    }\n\n    if (isCompleteBound(domain) && domain.min > domain.max) {\n      const errorMessage = `[Axis ${id}]: custom domain is invalid, min is greater than max`;\n      throw new Error(errorMessage);\n    }\n\n    const prevGroupDomain = domainsByGroupId.get(groupId);\n\n    if (prevGroupDomain) {\n      const prevDomain = prevGroupDomain as DomainRange;\n\n      const prevMin = isLowerBound(prevDomain) ? prevDomain.min : undefined;\n      const prevMax = isUpperBound(prevDomain) ? prevDomain.max : undefined;\n\n      let max = prevMax;\n      let min = prevMin;\n\n      if (isCompleteBound(domain)) {\n        min = prevMin != null ? Math.min(domain.min, prevMin) : domain.min;\n        max = prevMax != null ? Math.max(domain.max, prevMax) : domain.max;\n      } else if (isLowerBound(domain)) {\n        min = prevMin != null ? Math.min(domain.min, prevMin) : domain.min;\n      } else if (isUpperBound(domain)) {\n        max = prevMax != null ? Math.max(domain.max, prevMax) : domain.max;\n      }\n\n      const mergedDomain = {\n        min,\n        max,\n      };\n\n      if (isBounded(mergedDomain)) {\n        domainsByGroupId.set(groupId, mergedDomain);\n      }\n    } else {\n      domainsByGroupId.set(groupId, domain);\n    }\n  });\n\n  return domainsByGroupId;\n}\ntry {\n    // @ts-ignore\n    computeAxisTicksDimensions.displayName = \"computeAxisTicksDimensions\";\n    // @ts-ignore\n    computeAxisTicksDimensions.__docgenInfo = { \"description\": \"Compute the ticks values and identify max width and height of the labels\\nso we can compute the max space occupied by the axis component.\\n@param axisSpec tbe spec of the axis\\n@param xDomain the x domain associated\\n@param yDomain the y domain array\\n@param totalBarsInCluster the total number of grouped series\\n@param bboxCalculator an instance of the boundingbox calculator\\n@param chartRotation the rotation of the chart\", \"displayName\": \"computeAxisTicksDimensions\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/axes/axis_utils.ts#computeAxisTicksDimensions\"] = { docgenInfo: computeAxisTicksDimensions.__docgenInfo, name: \"computeAxisTicksDimensions\", path: \"src/lib/axes/axis_utils.ts#computeAxisTicksDimensions\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    centerRotationOrigin.displayName = \"centerRotationOrigin\";\n    // @ts-ignore\n    centerRotationOrigin.__docgenInfo = { \"description\": \"The Konva api sets the top right corner of a shape as the default origin of rotation.\\nIn order to apply rotation to tick labels while preserving their relative position to the axis,\\nwe compute offsets to apply to the Text element as well as adjust the x/y coordinates to adjust\\nfor these offsets.\", \"displayName\": \"centerRotationOrigin\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/axes/axis_utils.ts#centerRotationOrigin\"] = { docgenInfo: centerRotationOrigin.__docgenInfo, name: \"centerRotationOrigin\", path: \"src/lib/axes/axis_utils.ts#centerRotationOrigin\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    getTickLabelProps.displayName = \"getTickLabelProps\";\n    // @ts-ignore\n    getTickLabelProps.__docgenInfo = { \"description\": \"Gets the computed x/y coordinates & alignment properties for an axis tick label.\\n@param isVerticalAxis if the axis is vertical (in contrast to horizontal)\\n@param tickLabelRotation degree of rotation of the tick label\\n@param tickSize length of tick line\\n@param tickPadding amount of padding between label and tick line\\n@param tickPosition position of tick relative to axis line origin and other ticks along it\\n@param axisPosition position of where the axis sits relative to the visualization\\n@param axisTicksDimensions computed axis dimensions and values (from computeTickDimensions)\", \"displayName\": \"getTickLabelProps\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/axes/axis_utils.ts#getTickLabelProps\"] = { docgenInfo: getTickLabelProps.__docgenInfo, name: \"getTickLabelProps\", path: \"src/lib/axes/axis_utils.ts#getTickLabelProps\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    isVertical.displayName = \"isVertical\";\n    // @ts-ignore\n    isVertical.__docgenInfo = { \"description\": \"\", \"displayName\": \"isVertical\", \"props\": { \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of a string.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"charAt\": { \"defaultValue\": null, \"description\": \"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.\", \"name\": \"charAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => string\" } }, \"charCodeAt\": { \"defaultValue\": null, \"description\": \"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.\", \"name\": \"charCodeAt\", \"required\": true, \"type\": { \"name\": \"(index: number) => number\" } }, \"concat\": { \"defaultValue\": null, \"description\": \"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.\", \"name\": \"concat\", \"required\": true, \"type\": { \"name\": \"(...strings: string[]) => string\" } }, \"indexOf\": { \"defaultValue\": null, \"description\": \"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.\", \"name\": \"indexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"lastIndexOf\": { \"defaultValue\": null, \"description\": \"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.\", \"name\": \"lastIndexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"localeCompare\": { \"defaultValue\": null, \"description\": \"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.\", \"name\": \"localeCompare\", \"required\": true, \"type\": { \"name\": \"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }\" } }, \"match\": { \"defaultValue\": null, \"description\": \"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.\", \"name\": \"match\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }\" } }, \"replace\": { \"defaultValue\": null, \"description\": \"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.\", \"name\": \"replace\", \"required\": true, \"type\": { \"name\": \"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri...\" } }, \"search\": { \"defaultValue\": null, \"description\": \"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.\", \"name\": \"search\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }\" } }, \"slice\": { \"defaultValue\": null, \"description\": \"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\rIf this value is not specified, the substring continues to the end of stringObj.\", \"name\": \"slice\", \"required\": true, \"type\": { \"name\": \"(start?: number, end?: number) => string\" } }, \"split\": { \"defaultValue\": null, \"description\": \"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.\", \"name\": \"split\", \"required\": true, \"type\": { \"name\": \"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }\" } }, \"substring\": { \"defaultValue\": null, \"description\": \"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\rIf end is omitted, the characters from start through the end of the original string are returned.\", \"name\": \"substring\", \"required\": true, \"type\": { \"name\": \"(start: number, end?: number) => string\" } }, \"toLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to lowercase.\", \"name\": \"toLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toUpperCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to uppercase.\", \"name\": \"toUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleUpperCase\": { \"defaultValue\": null, \"description\": \"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trim\": { \"defaultValue\": null, \"description\": \"Removes the leading and trailing white space and line terminator characters from a string.\", \"name\": \"trim\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"length\": { \"defaultValue\": null, \"description\": \"Returns the length of a String object.\", \"name\": \"length\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"substr\": { \"defaultValue\": null, \"description\": \"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.\", \"name\": \"substr\", \"required\": true, \"type\": { \"name\": \"(from: number, length?: number) => string\" } }, \"valueOf\": { \"defaultValue\": null, \"description\": \"Returns the primitive value of the specified object.\", \"name\": \"valueOf\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"codePointAt\": { \"defaultValue\": null, \"description\": \"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\r\\nthe String resulting from converting this object to a String.\\r\\nIf there is no element at that position, the result is undefined.\\r\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\", \"name\": \"codePointAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => number\" } }, \"includes\": { \"defaultValue\": null, \"description\": \"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\r\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.\", \"name\": \"includes\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"endsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nendPosition \\u2013 length(this). Otherwise returns false.\", \"name\": \"endsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, endPosition?: number) => boolean\" } }, \"normalize\": { \"defaultValue\": null, \"description\": \"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\r\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\", \"name\": \"normalize\", \"required\": true, \"type\": { \"name\": \"{ (form: \\\"NFC\\\" | \\\"NFD\\\" | \\\"NFKC\\\" | \\\"NFKD\\\"): string; (form?: string): string; }\" } }, \"repeat\": { \"defaultValue\": null, \"description\": \"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append\", \"name\": \"repeat\", \"required\": true, \"type\": { \"name\": \"(count: number) => string\" } }, \"startsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nposition. Otherwise returns false.\", \"name\": \"startsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"anchor\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name\", \"name\": \"anchor\", \"required\": true, \"type\": { \"name\": \"(name: string) => string\" } }, \"big\": { \"defaultValue\": null, \"description\": \"Returns a <big> HTML element\", \"name\": \"big\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"blink\": { \"defaultValue\": null, \"description\": \"Returns a <blink> HTML element\", \"name\": \"blink\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"bold\": { \"defaultValue\": null, \"description\": \"Returns a <b> HTML element\", \"name\": \"bold\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fixed\": { \"defaultValue\": null, \"description\": \"Returns a <tt> HTML element\", \"name\": \"fixed\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fontcolor\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the color attribute value\", \"name\": \"fontcolor\", \"required\": true, \"type\": { \"name\": \"(color: string) => string\" } }, \"fontsize\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value\", \"name\": \"fontsize\", \"required\": true, \"type\": { \"name\": \"{ (size: number): string; (size: string): string; }\" } }, \"italics\": { \"defaultValue\": null, \"description\": \"Returns an <i> HTML element\", \"name\": \"italics\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"link\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML element and sets the href attribute value\", \"name\": \"link\", \"required\": true, \"type\": { \"name\": \"(url: string) => string\" } }, \"small\": { \"defaultValue\": null, \"description\": \"Returns a <small> HTML element\", \"name\": \"small\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"strike\": { \"defaultValue\": null, \"description\": \"Returns a <strike> HTML element\", \"name\": \"strike\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sub\": { \"defaultValue\": null, \"description\": \"Returns a <sub> HTML element\", \"name\": \"sub\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sup\": { \"defaultValue\": null, \"description\": \"Returns a <sup> HTML element\", \"name\": \"sup\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"__@iterator\": { \"defaultValue\": null, \"description\": \"Iterator\", \"name\": \"__@iterator\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<string>\" } }, \"padStart\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padStart\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"padEnd\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padEnd\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"trimLeft\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the left end of a string.\", \"name\": \"trimLeft\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trimRight\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the right end of a string.\", \"name\": \"trimRight\", \"required\": true, \"type\": { \"name\": \"() => string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/axes/axis_utils.ts#isVertical\"] = { docgenInfo: isVertical.__docgenInfo, name: \"isVertical\", path: \"src/lib/axes/axis_utils.ts#isVertical\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    isHorizontal.displayName = \"isHorizontal\";\n    // @ts-ignore\n    isHorizontal.__docgenInfo = { \"description\": \"\", \"displayName\": \"isHorizontal\", \"props\": { \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of a string.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"charAt\": { \"defaultValue\": null, \"description\": \"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.\", \"name\": \"charAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => string\" } }, \"charCodeAt\": { \"defaultValue\": null, \"description\": \"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.\", \"name\": \"charCodeAt\", \"required\": true, \"type\": { \"name\": \"(index: number) => number\" } }, \"concat\": { \"defaultValue\": null, \"description\": \"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.\", \"name\": \"concat\", \"required\": true, \"type\": { \"name\": \"(...strings: string[]) => string\" } }, \"indexOf\": { \"defaultValue\": null, \"description\": \"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.\", \"name\": \"indexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"lastIndexOf\": { \"defaultValue\": null, \"description\": \"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.\", \"name\": \"lastIndexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"localeCompare\": { \"defaultValue\": null, \"description\": \"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.\", \"name\": \"localeCompare\", \"required\": true, \"type\": { \"name\": \"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }\" } }, \"match\": { \"defaultValue\": null, \"description\": \"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.\", \"name\": \"match\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }\" } }, \"replace\": { \"defaultValue\": null, \"description\": \"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.\", \"name\": \"replace\", \"required\": true, \"type\": { \"name\": \"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri...\" } }, \"search\": { \"defaultValue\": null, \"description\": \"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.\", \"name\": \"search\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }\" } }, \"slice\": { \"defaultValue\": null, \"description\": \"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\rIf this value is not specified, the substring continues to the end of stringObj.\", \"name\": \"slice\", \"required\": true, \"type\": { \"name\": \"(start?: number, end?: number) => string\" } }, \"split\": { \"defaultValue\": null, \"description\": \"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.\", \"name\": \"split\", \"required\": true, \"type\": { \"name\": \"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }\" } }, \"substring\": { \"defaultValue\": null, \"description\": \"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\rIf end is omitted, the characters from start through the end of the original string are returned.\", \"name\": \"substring\", \"required\": true, \"type\": { \"name\": \"(start: number, end?: number) => string\" } }, \"toLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to lowercase.\", \"name\": \"toLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toUpperCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to uppercase.\", \"name\": \"toUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleUpperCase\": { \"defaultValue\": null, \"description\": \"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trim\": { \"defaultValue\": null, \"description\": \"Removes the leading and trailing white space and line terminator characters from a string.\", \"name\": \"trim\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"length\": { \"defaultValue\": null, \"description\": \"Returns the length of a String object.\", \"name\": \"length\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"substr\": { \"defaultValue\": null, \"description\": \"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.\", \"name\": \"substr\", \"required\": true, \"type\": { \"name\": \"(from: number, length?: number) => string\" } }, \"valueOf\": { \"defaultValue\": null, \"description\": \"Returns the primitive value of the specified object.\", \"name\": \"valueOf\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"codePointAt\": { \"defaultValue\": null, \"description\": \"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\r\\nthe String resulting from converting this object to a String.\\r\\nIf there is no element at that position, the result is undefined.\\r\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\", \"name\": \"codePointAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => number\" } }, \"includes\": { \"defaultValue\": null, \"description\": \"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\r\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.\", \"name\": \"includes\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"endsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nendPosition \\u2013 length(this). Otherwise returns false.\", \"name\": \"endsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, endPosition?: number) => boolean\" } }, \"normalize\": { \"defaultValue\": null, \"description\": \"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\r\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\", \"name\": \"normalize\", \"required\": true, \"type\": { \"name\": \"{ (form: \\\"NFC\\\" | \\\"NFD\\\" | \\\"NFKC\\\" | \\\"NFKD\\\"): string; (form?: string): string; }\" } }, \"repeat\": { \"defaultValue\": null, \"description\": \"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append\", \"name\": \"repeat\", \"required\": true, \"type\": { \"name\": \"(count: number) => string\" } }, \"startsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nposition. Otherwise returns false.\", \"name\": \"startsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"anchor\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name\", \"name\": \"anchor\", \"required\": true, \"type\": { \"name\": \"(name: string) => string\" } }, \"big\": { \"defaultValue\": null, \"description\": \"Returns a <big> HTML element\", \"name\": \"big\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"blink\": { \"defaultValue\": null, \"description\": \"Returns a <blink> HTML element\", \"name\": \"blink\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"bold\": { \"defaultValue\": null, \"description\": \"Returns a <b> HTML element\", \"name\": \"bold\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fixed\": { \"defaultValue\": null, \"description\": \"Returns a <tt> HTML element\", \"name\": \"fixed\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fontcolor\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the color attribute value\", \"name\": \"fontcolor\", \"required\": true, \"type\": { \"name\": \"(color: string) => string\" } }, \"fontsize\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value\", \"name\": \"fontsize\", \"required\": true, \"type\": { \"name\": \"{ (size: number): string; (size: string): string; }\" } }, \"italics\": { \"defaultValue\": null, \"description\": \"Returns an <i> HTML element\", \"name\": \"italics\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"link\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML element and sets the href attribute value\", \"name\": \"link\", \"required\": true, \"type\": { \"name\": \"(url: string) => string\" } }, \"small\": { \"defaultValue\": null, \"description\": \"Returns a <small> HTML element\", \"name\": \"small\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"strike\": { \"defaultValue\": null, \"description\": \"Returns a <strike> HTML element\", \"name\": \"strike\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sub\": { \"defaultValue\": null, \"description\": \"Returns a <sub> HTML element\", \"name\": \"sub\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sup\": { \"defaultValue\": null, \"description\": \"Returns a <sup> HTML element\", \"name\": \"sup\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"__@iterator\": { \"defaultValue\": null, \"description\": \"Iterator\", \"name\": \"__@iterator\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<string>\" } }, \"padStart\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padStart\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"padEnd\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padEnd\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"trimLeft\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the left end of a string.\", \"name\": \"trimLeft\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trimRight\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the right end of a string.\", \"name\": \"trimRight\", \"required\": true, \"type\": { \"name\": \"() => string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/axes/axis_utils.ts#isHorizontal\"] = { docgenInfo: isHorizontal.__docgenInfo, name: \"isHorizontal\", path: \"src/lib/axes/axis_utils.ts#isHorizontal\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    isLowerBound.displayName = \"isLowerBound\";\n    // @ts-ignore\n    isLowerBound.__docgenInfo = { \"description\": \"\", \"displayName\": \"isLowerBound\", \"props\": { \"min\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"min\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"max\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"max\", \"required\": false, \"type\": { \"name\": \"number\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/axes/axis_utils.ts#isLowerBound\"] = { docgenInfo: isLowerBound.__docgenInfo, name: \"isLowerBound\", path: \"src/lib/axes/axis_utils.ts#isLowerBound\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    isUpperBound.displayName = \"isUpperBound\";\n    // @ts-ignore\n    isUpperBound.__docgenInfo = { \"description\": \"\", \"displayName\": \"isUpperBound\", \"props\": { \"min\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"min\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"max\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"max\", \"required\": false, \"type\": { \"name\": \"number\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/axes/axis_utils.ts#isUpperBound\"] = { docgenInfo: isUpperBound.__docgenInfo, name: \"isUpperBound\", path: \"src/lib/axes/axis_utils.ts#isUpperBound\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    isCompleteBound.displayName = \"isCompleteBound\";\n    // @ts-ignore\n    isCompleteBound.__docgenInfo = { \"description\": \"\", \"displayName\": \"isCompleteBound\", \"props\": { \"min\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"min\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"max\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"max\", \"required\": false, \"type\": { \"name\": \"number\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/axes/axis_utils.ts#isCompleteBound\"] = { docgenInfo: isCompleteBound.__docgenInfo, name: \"isCompleteBound\", path: \"src/lib/axes/axis_utils.ts#isCompleteBound\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    isBounded.displayName = \"isBounded\";\n    // @ts-ignore\n    isBounded.__docgenInfo = { \"description\": \"\", \"displayName\": \"isBounded\", \"props\": { \"min\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"min\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"max\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"max\", \"required\": false, \"type\": { \"name\": \"number\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/axes/axis_utils.ts#isBounded\"] = { docgenInfo: isBounded.__docgenInfo, name: \"isBounded\", path: \"src/lib/axes/axis_utils.ts#isBounded\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { iso, Newtype } from 'newtype-ts';\n\nexport interface GroupId extends Newtype<{ readonly GroupId: unique symbol }, string> { }\nexport interface AxisId extends Newtype<{ readonly AxisId: unique symbol }, string> { }\nexport interface SpecId extends Newtype<{ readonly SpecId: unique symbol }, string> { }\nexport interface AnnotationId extends Newtype<{ readonly AnnotationId: unique symbol }, string> { }\n\nconst groupIdIso = iso<GroupId>();\nconst axisIdIso = iso<AxisId>();\nconst specIdIso = iso<SpecId>();\nconst annotationIdIso = iso<AnnotationId>();\n\nexport function getGroupId(id: string): GroupId {\n  return groupIdIso.wrap(id);\n}\nexport function getAxisId(id: string): AxisId {\n  return axisIdIso.wrap(id);\n}\nexport function getSpecId(id: string): SpecId {\n  return specIdIso.wrap(id);\n}\nexport function getAnnotationId(id: string): AnnotationId {\n  return annotationIdIso.wrap(id);\n}\ntry {\n    // @ts-ignore\n    getGroupId.displayName = \"getGroupId\";\n    // @ts-ignore\n    getGroupId.__docgenInfo = { \"description\": \"\", \"displayName\": \"getGroupId\", \"props\": { \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of a string.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"charAt\": { \"defaultValue\": null, \"description\": \"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.\", \"name\": \"charAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => string\" } }, \"charCodeAt\": { \"defaultValue\": null, \"description\": \"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.\", \"name\": \"charCodeAt\", \"required\": true, \"type\": { \"name\": \"(index: number) => number\" } }, \"concat\": { \"defaultValue\": null, \"description\": \"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.\", \"name\": \"concat\", \"required\": true, \"type\": { \"name\": \"(...strings: string[]) => string\" } }, \"indexOf\": { \"defaultValue\": null, \"description\": \"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.\", \"name\": \"indexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"lastIndexOf\": { \"defaultValue\": null, \"description\": \"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.\", \"name\": \"lastIndexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"localeCompare\": { \"defaultValue\": null, \"description\": \"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.\", \"name\": \"localeCompare\", \"required\": true, \"type\": { \"name\": \"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }\" } }, \"match\": { \"defaultValue\": null, \"description\": \"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.\", \"name\": \"match\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }\" } }, \"replace\": { \"defaultValue\": null, \"description\": \"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.\", \"name\": \"replace\", \"required\": true, \"type\": { \"name\": \"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri...\" } }, \"search\": { \"defaultValue\": null, \"description\": \"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.\", \"name\": \"search\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }\" } }, \"slice\": { \"defaultValue\": null, \"description\": \"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\rIf this value is not specified, the substring continues to the end of stringObj.\", \"name\": \"slice\", \"required\": true, \"type\": { \"name\": \"(start?: number, end?: number) => string\" } }, \"split\": { \"defaultValue\": null, \"description\": \"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.\", \"name\": \"split\", \"required\": true, \"type\": { \"name\": \"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }\" } }, \"substring\": { \"defaultValue\": null, \"description\": \"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\rIf end is omitted, the characters from start through the end of the original string are returned.\", \"name\": \"substring\", \"required\": true, \"type\": { \"name\": \"(start: number, end?: number) => string\" } }, \"toLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to lowercase.\", \"name\": \"toLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toUpperCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to uppercase.\", \"name\": \"toUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleUpperCase\": { \"defaultValue\": null, \"description\": \"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trim\": { \"defaultValue\": null, \"description\": \"Removes the leading and trailing white space and line terminator characters from a string.\", \"name\": \"trim\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"length\": { \"defaultValue\": null, \"description\": \"Returns the length of a String object.\", \"name\": \"length\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"substr\": { \"defaultValue\": null, \"description\": \"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.\", \"name\": \"substr\", \"required\": true, \"type\": { \"name\": \"(from: number, length?: number) => string\" } }, \"valueOf\": { \"defaultValue\": null, \"description\": \"Returns the primitive value of the specified object.\", \"name\": \"valueOf\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"codePointAt\": { \"defaultValue\": null, \"description\": \"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\r\\nthe String resulting from converting this object to a String.\\r\\nIf there is no element at that position, the result is undefined.\\r\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\", \"name\": \"codePointAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => number\" } }, \"includes\": { \"defaultValue\": null, \"description\": \"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\r\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.\", \"name\": \"includes\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"endsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nendPosition \\u2013 length(this). Otherwise returns false.\", \"name\": \"endsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, endPosition?: number) => boolean\" } }, \"normalize\": { \"defaultValue\": null, \"description\": \"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\r\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\", \"name\": \"normalize\", \"required\": true, \"type\": { \"name\": \"{ (form: \\\"NFC\\\" | \\\"NFD\\\" | \\\"NFKC\\\" | \\\"NFKD\\\"): string; (form?: string): string; }\" } }, \"repeat\": { \"defaultValue\": null, \"description\": \"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append\", \"name\": \"repeat\", \"required\": true, \"type\": { \"name\": \"(count: number) => string\" } }, \"startsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nposition. Otherwise returns false.\", \"name\": \"startsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"anchor\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name\", \"name\": \"anchor\", \"required\": true, \"type\": { \"name\": \"(name: string) => string\" } }, \"big\": { \"defaultValue\": null, \"description\": \"Returns a <big> HTML element\", \"name\": \"big\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"blink\": { \"defaultValue\": null, \"description\": \"Returns a <blink> HTML element\", \"name\": \"blink\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"bold\": { \"defaultValue\": null, \"description\": \"Returns a <b> HTML element\", \"name\": \"bold\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fixed\": { \"defaultValue\": null, \"description\": \"Returns a <tt> HTML element\", \"name\": \"fixed\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fontcolor\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the color attribute value\", \"name\": \"fontcolor\", \"required\": true, \"type\": { \"name\": \"(color: string) => string\" } }, \"fontsize\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value\", \"name\": \"fontsize\", \"required\": true, \"type\": { \"name\": \"{ (size: number): string; (size: string): string; }\" } }, \"italics\": { \"defaultValue\": null, \"description\": \"Returns an <i> HTML element\", \"name\": \"italics\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"link\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML element and sets the href attribute value\", \"name\": \"link\", \"required\": true, \"type\": { \"name\": \"(url: string) => string\" } }, \"small\": { \"defaultValue\": null, \"description\": \"Returns a <small> HTML element\", \"name\": \"small\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"strike\": { \"defaultValue\": null, \"description\": \"Returns a <strike> HTML element\", \"name\": \"strike\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sub\": { \"defaultValue\": null, \"description\": \"Returns a <sub> HTML element\", \"name\": \"sub\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sup\": { \"defaultValue\": null, \"description\": \"Returns a <sup> HTML element\", \"name\": \"sup\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"__@iterator\": { \"defaultValue\": null, \"description\": \"Iterator\", \"name\": \"__@iterator\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<string>\" } }, \"padStart\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padStart\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"padEnd\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padEnd\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"trimLeft\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the left end of a string.\", \"name\": \"trimLeft\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trimRight\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the right end of a string.\", \"name\": \"trimRight\", \"required\": true, \"type\": { \"name\": \"() => string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/utils/ids.ts#getGroupId\"] = { docgenInfo: getGroupId.__docgenInfo, name: \"getGroupId\", path: \"src/lib/utils/ids.ts#getGroupId\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    getAxisId.displayName = \"getAxisId\";\n    // @ts-ignore\n    getAxisId.__docgenInfo = { \"description\": \"\", \"displayName\": \"getAxisId\", \"props\": { \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of a string.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"charAt\": { \"defaultValue\": null, \"description\": \"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.\", \"name\": \"charAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => string\" } }, \"charCodeAt\": { \"defaultValue\": null, \"description\": \"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.\", \"name\": \"charCodeAt\", \"required\": true, \"type\": { \"name\": \"(index: number) => number\" } }, \"concat\": { \"defaultValue\": null, \"description\": \"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.\", \"name\": \"concat\", \"required\": true, \"type\": { \"name\": \"(...strings: string[]) => string\" } }, \"indexOf\": { \"defaultValue\": null, \"description\": \"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.\", \"name\": \"indexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"lastIndexOf\": { \"defaultValue\": null, \"description\": \"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.\", \"name\": \"lastIndexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"localeCompare\": { \"defaultValue\": null, \"description\": \"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.\", \"name\": \"localeCompare\", \"required\": true, \"type\": { \"name\": \"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }\" } }, \"match\": { \"defaultValue\": null, \"description\": \"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.\", \"name\": \"match\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }\" } }, \"replace\": { \"defaultValue\": null, \"description\": \"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.\", \"name\": \"replace\", \"required\": true, \"type\": { \"name\": \"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri...\" } }, \"search\": { \"defaultValue\": null, \"description\": \"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.\", \"name\": \"search\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }\" } }, \"slice\": { \"defaultValue\": null, \"description\": \"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\rIf this value is not specified, the substring continues to the end of stringObj.\", \"name\": \"slice\", \"required\": true, \"type\": { \"name\": \"(start?: number, end?: number) => string\" } }, \"split\": { \"defaultValue\": null, \"description\": \"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.\", \"name\": \"split\", \"required\": true, \"type\": { \"name\": \"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }\" } }, \"substring\": { \"defaultValue\": null, \"description\": \"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\rIf end is omitted, the characters from start through the end of the original string are returned.\", \"name\": \"substring\", \"required\": true, \"type\": { \"name\": \"(start: number, end?: number) => string\" } }, \"toLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to lowercase.\", \"name\": \"toLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toUpperCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to uppercase.\", \"name\": \"toUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleUpperCase\": { \"defaultValue\": null, \"description\": \"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trim\": { \"defaultValue\": null, \"description\": \"Removes the leading and trailing white space and line terminator characters from a string.\", \"name\": \"trim\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"length\": { \"defaultValue\": null, \"description\": \"Returns the length of a String object.\", \"name\": \"length\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"substr\": { \"defaultValue\": null, \"description\": \"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.\", \"name\": \"substr\", \"required\": true, \"type\": { \"name\": \"(from: number, length?: number) => string\" } }, \"valueOf\": { \"defaultValue\": null, \"description\": \"Returns the primitive value of the specified object.\", \"name\": \"valueOf\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"codePointAt\": { \"defaultValue\": null, \"description\": \"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\r\\nthe String resulting from converting this object to a String.\\r\\nIf there is no element at that position, the result is undefined.\\r\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\", \"name\": \"codePointAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => number\" } }, \"includes\": { \"defaultValue\": null, \"description\": \"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\r\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.\", \"name\": \"includes\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"endsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nendPosition \\u2013 length(this). Otherwise returns false.\", \"name\": \"endsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, endPosition?: number) => boolean\" } }, \"normalize\": { \"defaultValue\": null, \"description\": \"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\r\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\", \"name\": \"normalize\", \"required\": true, \"type\": { \"name\": \"{ (form: \\\"NFC\\\" | \\\"NFD\\\" | \\\"NFKC\\\" | \\\"NFKD\\\"): string; (form?: string): string; }\" } }, \"repeat\": { \"defaultValue\": null, \"description\": \"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append\", \"name\": \"repeat\", \"required\": true, \"type\": { \"name\": \"(count: number) => string\" } }, \"startsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nposition. Otherwise returns false.\", \"name\": \"startsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"anchor\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name\", \"name\": \"anchor\", \"required\": true, \"type\": { \"name\": \"(name: string) => string\" } }, \"big\": { \"defaultValue\": null, \"description\": \"Returns a <big> HTML element\", \"name\": \"big\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"blink\": { \"defaultValue\": null, \"description\": \"Returns a <blink> HTML element\", \"name\": \"blink\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"bold\": { \"defaultValue\": null, \"description\": \"Returns a <b> HTML element\", \"name\": \"bold\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fixed\": { \"defaultValue\": null, \"description\": \"Returns a <tt> HTML element\", \"name\": \"fixed\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fontcolor\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the color attribute value\", \"name\": \"fontcolor\", \"required\": true, \"type\": { \"name\": \"(color: string) => string\" } }, \"fontsize\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value\", \"name\": \"fontsize\", \"required\": true, \"type\": { \"name\": \"{ (size: number): string; (size: string): string; }\" } }, \"italics\": { \"defaultValue\": null, \"description\": \"Returns an <i> HTML element\", \"name\": \"italics\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"link\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML element and sets the href attribute value\", \"name\": \"link\", \"required\": true, \"type\": { \"name\": \"(url: string) => string\" } }, \"small\": { \"defaultValue\": null, \"description\": \"Returns a <small> HTML element\", \"name\": \"small\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"strike\": { \"defaultValue\": null, \"description\": \"Returns a <strike> HTML element\", \"name\": \"strike\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sub\": { \"defaultValue\": null, \"description\": \"Returns a <sub> HTML element\", \"name\": \"sub\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sup\": { \"defaultValue\": null, \"description\": \"Returns a <sup> HTML element\", \"name\": \"sup\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"__@iterator\": { \"defaultValue\": null, \"description\": \"Iterator\", \"name\": \"__@iterator\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<string>\" } }, \"padStart\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padStart\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"padEnd\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padEnd\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"trimLeft\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the left end of a string.\", \"name\": \"trimLeft\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trimRight\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the right end of a string.\", \"name\": \"trimRight\", \"required\": true, \"type\": { \"name\": \"() => string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/utils/ids.ts#getAxisId\"] = { docgenInfo: getAxisId.__docgenInfo, name: \"getAxisId\", path: \"src/lib/utils/ids.ts#getAxisId\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    getSpecId.displayName = \"getSpecId\";\n    // @ts-ignore\n    getSpecId.__docgenInfo = { \"description\": \"\", \"displayName\": \"getSpecId\", \"props\": { \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of a string.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"charAt\": { \"defaultValue\": null, \"description\": \"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.\", \"name\": \"charAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => string\" } }, \"charCodeAt\": { \"defaultValue\": null, \"description\": \"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.\", \"name\": \"charCodeAt\", \"required\": true, \"type\": { \"name\": \"(index: number) => number\" } }, \"concat\": { \"defaultValue\": null, \"description\": \"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.\", \"name\": \"concat\", \"required\": true, \"type\": { \"name\": \"(...strings: string[]) => string\" } }, \"indexOf\": { \"defaultValue\": null, \"description\": \"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.\", \"name\": \"indexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"lastIndexOf\": { \"defaultValue\": null, \"description\": \"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.\", \"name\": \"lastIndexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"localeCompare\": { \"defaultValue\": null, \"description\": \"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.\", \"name\": \"localeCompare\", \"required\": true, \"type\": { \"name\": \"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }\" } }, \"match\": { \"defaultValue\": null, \"description\": \"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.\", \"name\": \"match\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }\" } }, \"replace\": { \"defaultValue\": null, \"description\": \"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.\", \"name\": \"replace\", \"required\": true, \"type\": { \"name\": \"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri...\" } }, \"search\": { \"defaultValue\": null, \"description\": \"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.\", \"name\": \"search\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }\" } }, \"slice\": { \"defaultValue\": null, \"description\": \"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\rIf this value is not specified, the substring continues to the end of stringObj.\", \"name\": \"slice\", \"required\": true, \"type\": { \"name\": \"(start?: number, end?: number) => string\" } }, \"split\": { \"defaultValue\": null, \"description\": \"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.\", \"name\": \"split\", \"required\": true, \"type\": { \"name\": \"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }\" } }, \"substring\": { \"defaultValue\": null, \"description\": \"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\rIf end is omitted, the characters from start through the end of the original string are returned.\", \"name\": \"substring\", \"required\": true, \"type\": { \"name\": \"(start: number, end?: number) => string\" } }, \"toLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to lowercase.\", \"name\": \"toLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toUpperCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to uppercase.\", \"name\": \"toUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleUpperCase\": { \"defaultValue\": null, \"description\": \"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trim\": { \"defaultValue\": null, \"description\": \"Removes the leading and trailing white space and line terminator characters from a string.\", \"name\": \"trim\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"length\": { \"defaultValue\": null, \"description\": \"Returns the length of a String object.\", \"name\": \"length\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"substr\": { \"defaultValue\": null, \"description\": \"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.\", \"name\": \"substr\", \"required\": true, \"type\": { \"name\": \"(from: number, length?: number) => string\" } }, \"valueOf\": { \"defaultValue\": null, \"description\": \"Returns the primitive value of the specified object.\", \"name\": \"valueOf\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"codePointAt\": { \"defaultValue\": null, \"description\": \"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\r\\nthe String resulting from converting this object to a String.\\r\\nIf there is no element at that position, the result is undefined.\\r\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\", \"name\": \"codePointAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => number\" } }, \"includes\": { \"defaultValue\": null, \"description\": \"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\r\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.\", \"name\": \"includes\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"endsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nendPosition \\u2013 length(this). Otherwise returns false.\", \"name\": \"endsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, endPosition?: number) => boolean\" } }, \"normalize\": { \"defaultValue\": null, \"description\": \"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\r\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\", \"name\": \"normalize\", \"required\": true, \"type\": { \"name\": \"{ (form: \\\"NFC\\\" | \\\"NFD\\\" | \\\"NFKC\\\" | \\\"NFKD\\\"): string; (form?: string): string; }\" } }, \"repeat\": { \"defaultValue\": null, \"description\": \"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append\", \"name\": \"repeat\", \"required\": true, \"type\": { \"name\": \"(count: number) => string\" } }, \"startsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nposition. Otherwise returns false.\", \"name\": \"startsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"anchor\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name\", \"name\": \"anchor\", \"required\": true, \"type\": { \"name\": \"(name: string) => string\" } }, \"big\": { \"defaultValue\": null, \"description\": \"Returns a <big> HTML element\", \"name\": \"big\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"blink\": { \"defaultValue\": null, \"description\": \"Returns a <blink> HTML element\", \"name\": \"blink\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"bold\": { \"defaultValue\": null, \"description\": \"Returns a <b> HTML element\", \"name\": \"bold\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fixed\": { \"defaultValue\": null, \"description\": \"Returns a <tt> HTML element\", \"name\": \"fixed\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fontcolor\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the color attribute value\", \"name\": \"fontcolor\", \"required\": true, \"type\": { \"name\": \"(color: string) => string\" } }, \"fontsize\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value\", \"name\": \"fontsize\", \"required\": true, \"type\": { \"name\": \"{ (size: number): string; (size: string): string; }\" } }, \"italics\": { \"defaultValue\": null, \"description\": \"Returns an <i> HTML element\", \"name\": \"italics\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"link\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML element and sets the href attribute value\", \"name\": \"link\", \"required\": true, \"type\": { \"name\": \"(url: string) => string\" } }, \"small\": { \"defaultValue\": null, \"description\": \"Returns a <small> HTML element\", \"name\": \"small\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"strike\": { \"defaultValue\": null, \"description\": \"Returns a <strike> HTML element\", \"name\": \"strike\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sub\": { \"defaultValue\": null, \"description\": \"Returns a <sub> HTML element\", \"name\": \"sub\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sup\": { \"defaultValue\": null, \"description\": \"Returns a <sup> HTML element\", \"name\": \"sup\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"__@iterator\": { \"defaultValue\": null, \"description\": \"Iterator\", \"name\": \"__@iterator\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<string>\" } }, \"padStart\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padStart\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"padEnd\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padEnd\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"trimLeft\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the left end of a string.\", \"name\": \"trimLeft\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trimRight\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the right end of a string.\", \"name\": \"trimRight\", \"required\": true, \"type\": { \"name\": \"() => string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/utils/ids.ts#getSpecId\"] = { docgenInfo: getSpecId.__docgenInfo, name: \"getSpecId\", path: \"src/lib/utils/ids.ts#getSpecId\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    getAnnotationId.displayName = \"getAnnotationId\";\n    // @ts-ignore\n    getAnnotationId.__docgenInfo = { \"description\": \"\", \"displayName\": \"getAnnotationId\", \"props\": { \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of a string.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"charAt\": { \"defaultValue\": null, \"description\": \"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.\", \"name\": \"charAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => string\" } }, \"charCodeAt\": { \"defaultValue\": null, \"description\": \"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.\", \"name\": \"charCodeAt\", \"required\": true, \"type\": { \"name\": \"(index: number) => number\" } }, \"concat\": { \"defaultValue\": null, \"description\": \"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.\", \"name\": \"concat\", \"required\": true, \"type\": { \"name\": \"(...strings: string[]) => string\" } }, \"indexOf\": { \"defaultValue\": null, \"description\": \"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.\", \"name\": \"indexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"lastIndexOf\": { \"defaultValue\": null, \"description\": \"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.\", \"name\": \"lastIndexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"localeCompare\": { \"defaultValue\": null, \"description\": \"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.\", \"name\": \"localeCompare\", \"required\": true, \"type\": { \"name\": \"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }\" } }, \"match\": { \"defaultValue\": null, \"description\": \"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.\", \"name\": \"match\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }\" } }, \"replace\": { \"defaultValue\": null, \"description\": \"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.\", \"name\": \"replace\", \"required\": true, \"type\": { \"name\": \"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri...\" } }, \"search\": { \"defaultValue\": null, \"description\": \"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.\", \"name\": \"search\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }\" } }, \"slice\": { \"defaultValue\": null, \"description\": \"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\rIf this value is not specified, the substring continues to the end of stringObj.\", \"name\": \"slice\", \"required\": true, \"type\": { \"name\": \"(start?: number, end?: number) => string\" } }, \"split\": { \"defaultValue\": null, \"description\": \"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.\", \"name\": \"split\", \"required\": true, \"type\": { \"name\": \"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }\" } }, \"substring\": { \"defaultValue\": null, \"description\": \"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\rIf end is omitted, the characters from start through the end of the original string are returned.\", \"name\": \"substring\", \"required\": true, \"type\": { \"name\": \"(start: number, end?: number) => string\" } }, \"toLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to lowercase.\", \"name\": \"toLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toUpperCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to uppercase.\", \"name\": \"toUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleUpperCase\": { \"defaultValue\": null, \"description\": \"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trim\": { \"defaultValue\": null, \"description\": \"Removes the leading and trailing white space and line terminator characters from a string.\", \"name\": \"trim\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"length\": { \"defaultValue\": null, \"description\": \"Returns the length of a String object.\", \"name\": \"length\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"substr\": { \"defaultValue\": null, \"description\": \"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.\", \"name\": \"substr\", \"required\": true, \"type\": { \"name\": \"(from: number, length?: number) => string\" } }, \"valueOf\": { \"defaultValue\": null, \"description\": \"Returns the primitive value of the specified object.\", \"name\": \"valueOf\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"codePointAt\": { \"defaultValue\": null, \"description\": \"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\r\\nthe String resulting from converting this object to a String.\\r\\nIf there is no element at that position, the result is undefined.\\r\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\", \"name\": \"codePointAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => number\" } }, \"includes\": { \"defaultValue\": null, \"description\": \"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\r\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.\", \"name\": \"includes\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"endsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nendPosition \\u2013 length(this). Otherwise returns false.\", \"name\": \"endsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, endPosition?: number) => boolean\" } }, \"normalize\": { \"defaultValue\": null, \"description\": \"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\r\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\", \"name\": \"normalize\", \"required\": true, \"type\": { \"name\": \"{ (form: \\\"NFC\\\" | \\\"NFD\\\" | \\\"NFKC\\\" | \\\"NFKD\\\"): string; (form?: string): string; }\" } }, \"repeat\": { \"defaultValue\": null, \"description\": \"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append\", \"name\": \"repeat\", \"required\": true, \"type\": { \"name\": \"(count: number) => string\" } }, \"startsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nposition. Otherwise returns false.\", \"name\": \"startsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"anchor\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name\", \"name\": \"anchor\", \"required\": true, \"type\": { \"name\": \"(name: string) => string\" } }, \"big\": { \"defaultValue\": null, \"description\": \"Returns a <big> HTML element\", \"name\": \"big\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"blink\": { \"defaultValue\": null, \"description\": \"Returns a <blink> HTML element\", \"name\": \"blink\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"bold\": { \"defaultValue\": null, \"description\": \"Returns a <b> HTML element\", \"name\": \"bold\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fixed\": { \"defaultValue\": null, \"description\": \"Returns a <tt> HTML element\", \"name\": \"fixed\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fontcolor\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the color attribute value\", \"name\": \"fontcolor\", \"required\": true, \"type\": { \"name\": \"(color: string) => string\" } }, \"fontsize\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value\", \"name\": \"fontsize\", \"required\": true, \"type\": { \"name\": \"{ (size: number): string; (size: string): string; }\" } }, \"italics\": { \"defaultValue\": null, \"description\": \"Returns an <i> HTML element\", \"name\": \"italics\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"link\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML element and sets the href attribute value\", \"name\": \"link\", \"required\": true, \"type\": { \"name\": \"(url: string) => string\" } }, \"small\": { \"defaultValue\": null, \"description\": \"Returns a <small> HTML element\", \"name\": \"small\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"strike\": { \"defaultValue\": null, \"description\": \"Returns a <strike> HTML element\", \"name\": \"strike\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sub\": { \"defaultValue\": null, \"description\": \"Returns a <sub> HTML element\", \"name\": \"sub\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sup\": { \"defaultValue\": null, \"description\": \"Returns a <sup> HTML element\", \"name\": \"sup\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"__@iterator\": { \"defaultValue\": null, \"description\": \"Iterator\", \"name\": \"__@iterator\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<string>\" } }, \"padStart\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padStart\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"padEnd\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padEnd\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"trimLeft\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the left end of a string.\", \"name\": \"trimLeft\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trimRight\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the right end of a string.\", \"name\": \"trimRight\", \"required\": true, \"type\": { \"name\": \"() => string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/utils/ids.ts#getAnnotationId\"] = { docgenInfo: getAnnotationId.__docgenInfo, name: \"getAnnotationId\", path: \"src/lib/utils/ids.ts#getAnnotationId\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { area, line } from 'd3-shape';\nimport { mutableIndexedGeometryMapUpsert } from '../../state/utils';\nimport { CanvasTextBBoxCalculator } from '../axes/canvas_text_bbox_calculator';\nimport {\n  AreaSeriesStyle,\n  AreaStyle,\n  CustomBarSeriesStyle,\n  LineSeriesStyle,\n  LineStyle,\n  PointStyle,\n  SharedGeometryStyle,\n} from '../themes/theme';\nimport { SpecId } from '../utils/ids';\nimport { isLogarithmicScale } from '../utils/scales/scale_continuous';\nimport { Scale, ScaleType } from '../utils/scales/scales';\nimport { CurveType, getCurveFactory } from './curves';\nimport { LegendItem } from './legend';\nimport { DataSeriesDatum } from './series';\nimport { belongsToDataSeries } from './series_utils';\nimport { DisplayValueSpec } from './specs';\n\nexport interface GeometryId {\n  specId: SpecId;\n  seriesKey: any[];\n}\n\nexport interface GeometryValue {\n  y: any;\n  x: any;\n  accessor: 'y1' | 'y0';\n}\n\n/** Shared style properties for varies geometries */\nexport interface GeometryStyle {\n  opacity: number;\n}\n\nexport type IndexedGeometry = PointGeometry | BarGeometry;\n\nexport interface PointGeometry {\n  x: number;\n  y: number;\n  radius: number;\n  color: string;\n  transform: {\n    x: number;\n    y: number;\n  };\n  geometryId: GeometryId;\n  value: GeometryValue;\n}\nexport interface BarGeometry {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  color: string;\n  displayValue?: {\n    text: any;\n    width: number;\n    height: number;\n    hideClippedValue?: boolean;\n    isValueContainedInElement?: boolean;\n  };\n  geometryId: GeometryId;\n  value: GeometryValue;\n  seriesStyle?: CustomBarSeriesStyle;\n}\nexport interface LineGeometry {\n  line: string;\n  points: PointGeometry[];\n  color: string;\n  transform: {\n    x: number;\n    y: number;\n  };\n  geometryId: GeometryId;\n  seriesLineStyle?: LineStyle;\n  seriesPointStyle?: PointStyle;\n}\nexport interface AreaGeometry {\n  area: string;\n  lines: string[];\n  points: PointGeometry[];\n  color: string;\n  transform: {\n    x: number;\n    y: number;\n  };\n  geometryId: GeometryId;\n  seriesAreaStyle?: AreaStyle;\n  seriesAreaLineStyle?: LineStyle;\n  seriesPointStyle?: PointStyle;\n}\n\nexport function isPointGeometry(ig: IndexedGeometry): ig is PointGeometry {\n  return ig.hasOwnProperty('radius');\n}\nexport function isBarGeometry(ig: IndexedGeometry): ig is BarGeometry {\n  return ig.hasOwnProperty('width') && ig.hasOwnProperty('height');\n}\n\nexport function renderPoints(\n  shift: number,\n  dataset: DataSeriesDatum[],\n  xScale: Scale,\n  yScale: Scale,\n  color: string,\n  specId: SpecId,\n  hasY0Accessors: boolean,\n  seriesKey: any[],\n): {\n  pointGeometries: PointGeometry[];\n  indexedGeometries: Map<any, IndexedGeometry[]>;\n} {\n  const indexedGeometries: Map<any, IndexedGeometry[]> = new Map();\n  const isLogScale = isLogarithmicScale(yScale);\n\n  const pointGeometries = dataset.reduce(\n    (acc, datum) => {\n      const x = xScale.scale(datum.x);\n      const points: PointGeometry[] = [];\n      const yDatums = [datum.y1];\n      if (hasY0Accessors) {\n        yDatums.unshift(datum.y0);\n      }\n      yDatums.forEach((yDatum, index) => {\n        // skip rendering point if y1 is null\n        if (datum.y1 === null) {\n          return;\n        }\n        let y;\n        let radius = 10;\n        const isHidden = yDatum === null || (isLogScale && yDatum <= 0);\n        // we fix 0 and negative values at y = 0\n        if (isHidden) {\n          y = yScale.range[0];\n          radius = 0;\n        } else {\n          y = yScale.scale(yDatum);\n        }\n        const originalY = hasY0Accessors && index === 0 ? datum.initialY0 : datum.initialY1;\n        const pointGeometry: PointGeometry = {\n          radius,\n          x,\n          y,\n          color,\n          value: {\n            x: datum.x,\n            y: originalY,\n            accessor: hasY0Accessors && index === 0 ? 'y0' : 'y1',\n          },\n          transform: {\n            x: shift,\n            y: 0,\n          },\n          geometryId: {\n            specId,\n            seriesKey,\n          },\n        };\n        mutableIndexedGeometryMapUpsert(indexedGeometries, datum.x, pointGeometry);\n        if (!isHidden) {\n          points.push(pointGeometry);\n        }\n      });\n      return [...acc, ...points];\n    },\n    [] as PointGeometry[],\n  );\n  return {\n    pointGeometries,\n    indexedGeometries,\n  };\n}\n\nexport function renderBars(\n  orderIndex: number,\n  dataset: DataSeriesDatum[],\n  xScale: Scale,\n  yScale: Scale,\n  color: string,\n  specId: SpecId,\n  seriesKey: any[],\n  displayValueSettings?: DisplayValueSpec,\n  seriesStyle?: CustomBarSeriesStyle,\n): {\n  barGeometries: BarGeometry[];\n  indexedGeometries: Map<any, IndexedGeometry[]>;\n} {\n  const indexedGeometries: Map<any, IndexedGeometry[]> = new Map();\n  const xDomain = xScale.domain;\n  const xScaleType = xScale.type;\n  const barGeometries: BarGeometry[] = [];\n\n  const bboxCalculator = new CanvasTextBBoxCalculator();\n  const fontSize = seriesStyle && seriesStyle.displayValue ? seriesStyle.displayValue.fontSize : undefined;\n  const fontFamily = seriesStyle && seriesStyle.displayValue ? seriesStyle.displayValue.fontFamily : undefined;\n\n  dataset.forEach((datum) => {\n    const { y0, y1, initialY1 } = datum;\n    // don't create a bar if the initialY1 value is null.\n    if (initialY1 === null) {\n      return;\n    }\n    // don't create a bar if the x value is not part of the ordinal scale\n    if (xScaleType === ScaleType.Ordinal && !xDomain.includes(datum.x)) {\n      return;\n    }\n\n    let height = 0;\n    let y = 0;\n    if (yScale.type === ScaleType.Log) {\n      y = y1 === 0 ? yScale.range[0] : yScale.scale(y1);\n      let y0Scaled;\n      if (yScale.isInverted) {\n        y0Scaled = y0 === 0 ? yScale.range[1] : yScale.scale(y0);\n      } else {\n        y0Scaled = y0 === 0 ? yScale.range[0] : yScale.scale(y0);\n      }\n      height = y0Scaled - y;\n    } else {\n      y = yScale.scale(y1);\n      height = yScale.scale(y0) - y;\n    }\n    const x = xScale.scale(datum.x) + xScale.bandwidth * orderIndex;\n    const width = xScale.bandwidth;\n\n    const formattedDisplayValue = displayValueSettings && displayValueSettings.valueFormatter ?\n      displayValueSettings.valueFormatter(initialY1) : undefined;\n\n    // only show displayValue for even bars if showOverlappingValue\n    const displayValueText = displayValueSettings && displayValueSettings.isAlternatingValueLabel ?\n      (barGeometries.length % 2 === 0 ? formattedDisplayValue : undefined)\n      : formattedDisplayValue;\n\n    const computedDisplayValueWidth = bboxCalculator.compute(displayValueText || '', fontSize, fontFamily).getOrElse({\n      width: 0,\n      height: 0,\n    }).width;\n    const displayValueWidth = displayValueSettings && displayValueSettings.isValueContainedInElement ?\n      width : computedDisplayValueWidth;\n\n    const hideClippedValue = displayValueSettings ? displayValueSettings.hideClippedValue : undefined;\n\n    const displayValue = (displayValueSettings && displayValueSettings.showValueLabel) ?\n      {\n        text: displayValueText,\n        width: displayValueWidth,\n        height: fontSize || 0,\n        hideClippedValue,\n        isValueContainedInElement: displayValueSettings.isValueContainedInElement,\n      }\n      : undefined;\n\n    const barGeometry: BarGeometry = {\n      displayValue,\n      x,\n      y, // top most value\n      width,\n      height,\n      color,\n      value: {\n        x: datum.x,\n        y: initialY1,\n        accessor: 'y1',\n      },\n      geometryId: {\n        specId,\n        seriesKey,\n      },\n      seriesStyle,\n    };\n    mutableIndexedGeometryMapUpsert(indexedGeometries, datum.x, barGeometry);\n    barGeometries.push(barGeometry);\n  });\n\n  bboxCalculator.destroy();\n\n  return {\n    barGeometries,\n    indexedGeometries,\n  };\n}\n\nexport function renderLine(\n  shift: number,\n  dataset: DataSeriesDatum[],\n  xScale: Scale,\n  yScale: Scale,\n  color: string,\n  curve: CurveType,\n  specId: SpecId,\n  hasY0Accessors: boolean,\n  seriesKey: any[],\n  seriesStyle?: LineSeriesStyle,\n): {\n  lineGeometry: LineGeometry;\n  indexedGeometries: Map<any, IndexedGeometry[]>;\n} {\n  const isLogScale = isLogarithmicScale(yScale);\n\n  const pathGenerator = line<DataSeriesDatum>()\n    .x((datum: DataSeriesDatum) => xScale.scale(datum.x))\n    .y((datum: DataSeriesDatum) => yScale.scale(datum.y1))\n    .defined((datum: DataSeriesDatum) => datum.y1 !== null && !(isLogScale && datum.y1 <= 0))\n    .curve(getCurveFactory(curve));\n  const y = 0;\n  const x = shift;\n\n  const seriesPointStyle = seriesStyle ? seriesStyle.point : undefined;\n  const seriesLineStyle = seriesStyle ? seriesStyle.line : undefined;\n\n  const { pointGeometries, indexedGeometries } = renderPoints(\n    shift,\n    dataset,\n    xScale,\n    yScale,\n    color,\n    specId,\n    hasY0Accessors,\n    seriesKey,\n  );\n  const lineGeometry = {\n    line: pathGenerator(dataset) || '',\n    points: pointGeometries,\n    color,\n    transform: {\n      x,\n      y,\n    },\n    geometryId: {\n      specId,\n      seriesKey,\n    },\n    seriesLineStyle,\n    seriesPointStyle,\n  };\n  return {\n    lineGeometry,\n    indexedGeometries,\n  };\n}\n\nexport function renderArea(\n  shift: number,\n  dataset: DataSeriesDatum[],\n  xScale: Scale,\n  yScale: Scale,\n  color: string,\n  curve: CurveType,\n  specId: SpecId,\n  hasY0Accessors: boolean,\n  seriesKey: any[],\n  seriesStyle?: AreaSeriesStyle,\n): {\n  areaGeometry: AreaGeometry;\n  indexedGeometries: Map<any, IndexedGeometry[]>;\n} {\n  const isLogScale = isLogarithmicScale(yScale);\n\n  const pathGenerator = area<DataSeriesDatum>()\n    .x((datum: DataSeriesDatum) => xScale.scale(datum.x))\n    .y1((datum: DataSeriesDatum) => yScale.scale(datum.y1))\n    .y0((datum: DataSeriesDatum) => {\n      if (datum.y0 === null || (isLogScale && datum.y0 <= 0)) {\n        return yScale.range[0];\n      }\n      return yScale.scale(datum.y0);\n    })\n    .defined((datum: DataSeriesDatum) => datum.y1 !== null && !(isLogScale && datum.y1 <= 0))\n    .curve(getCurveFactory(curve));\n\n  const y1Line = pathGenerator.lineY1()(dataset);\n\n  const lines: string[] = [];\n  if (y1Line) {\n    lines.push(y1Line);\n  }\n  if (hasY0Accessors) {\n    const y0Line = pathGenerator.lineY0()(dataset);\n    if (y0Line) {\n      lines.push(y0Line);\n    }\n  }\n\n  const seriesPointStyle = seriesStyle ? seriesStyle.point : undefined;\n  const seriesAreaStyle = seriesStyle ? seriesStyle.area : undefined;\n  const seriesAreaLineStyle = seriesStyle ? seriesStyle.line : undefined;\n\n  const { pointGeometries, indexedGeometries } = renderPoints(\n    shift,\n    dataset,\n    xScale,\n    yScale,\n    color,\n    specId,\n    hasY0Accessors,\n    seriesKey,\n  );\n\n  const areaGeometry = {\n    area: pathGenerator(dataset) || '',\n    lines,\n    points: pointGeometries,\n    color,\n    transform: {\n      y: 0,\n      x: shift,\n    },\n    geometryId: {\n      specId,\n      seriesKey,\n    },\n    seriesAreaStyle,\n    seriesAreaLineStyle,\n    seriesPointStyle,\n  };\n  return {\n    areaGeometry,\n    indexedGeometries,\n  };\n}\n\nexport function getGeometryStyle(\n  geometryId: GeometryId,\n  highlightedLegendItem: LegendItem | null,\n  sharedThemeStyle: SharedGeometryStyle,\n  specOpacity?: number,\n  individualHighlight?: { [key: string]: boolean },\n): GeometryStyle {\n\n  const sharedStyle = specOpacity == null ?\n    sharedThemeStyle :\n    {\n      ...sharedThemeStyle,\n      highlighted: { opacity: specOpacity },\n      default: { opacity: specOpacity },\n    };\n\n  if (highlightedLegendItem != null) {\n    const isPartOfHighlightedSeries = belongsToDataSeries(geometryId, highlightedLegendItem.value);\n\n    return isPartOfHighlightedSeries ? sharedStyle.highlighted : sharedStyle.unhighlighted;\n  }\n\n  if (individualHighlight) {\n    const { hasHighlight, hasGeometryHover } = individualHighlight;\n    if (!hasGeometryHover) {\n      return sharedStyle.highlighted;\n    }\n    return hasHighlight ? sharedStyle.highlighted : sharedStyle.unhighlighted;\n  }\n\n  return sharedStyle.default;\n}\n\nexport function isPointOnGeometry(\n  xCoordinate: number,\n  yCoordinate: number,\n  indexedGeometry: BarGeometry | PointGeometry,\n) {\n  const { x, y } = indexedGeometry;\n  if (isPointGeometry(indexedGeometry)) {\n    const { radius, transform } = indexedGeometry;\n    return (\n      yCoordinate >= y - radius &&\n      yCoordinate <= y + radius &&\n      xCoordinate >= x + transform.x - radius &&\n      xCoordinate <= x + transform.x + radius\n    );\n  }\n  const { width, height } = indexedGeometry;\n  return (\n    yCoordinate >= y && yCoordinate <= y + height && xCoordinate >= x && xCoordinate <= x + width\n  );\n}\ntry {\n    // @ts-ignore\n    isPointGeometry.displayName = \"isPointGeometry\";\n    // @ts-ignore\n    isPointGeometry.__docgenInfo = { \"description\": \"\", \"displayName\": \"isPointGeometry\", \"props\": { \"x\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"x\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"y\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"y\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"geometryId\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"geometryId\", \"required\": true, \"type\": { \"name\": \"GeometryId\" } }, \"value\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"value\", \"required\": true, \"type\": { \"name\": \"GeometryValue\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/series/rendering.ts#isPointGeometry\"] = { docgenInfo: isPointGeometry.__docgenInfo, name: \"isPointGeometry\", path: \"src/lib/series/rendering.ts#isPointGeometry\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    isBarGeometry.displayName = \"isBarGeometry\";\n    // @ts-ignore\n    isBarGeometry.__docgenInfo = { \"description\": \"\", \"displayName\": \"isBarGeometry\", \"props\": { \"x\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"x\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"y\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"y\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"geometryId\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"geometryId\", \"required\": true, \"type\": { \"name\": \"GeometryId\" } }, \"value\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"value\", \"required\": true, \"type\": { \"name\": \"GeometryValue\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/series/rendering.ts#isBarGeometry\"] = { docgenInfo: isBarGeometry.__docgenInfo, name: \"isBarGeometry\", path: \"src/lib/series/rendering.ts#isBarGeometry\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { isVertical } from '../lib/axes/axis_utils';\nimport { CurveType } from '../lib/series/curves';\nimport { mergeXDomain, XDomain } from '../lib/series/domains/x_domain';\nimport { mergeYDomain, YDomain } from '../lib/series/domains/y_domain';\nimport {\n  AreaGeometry,\n  BarGeometry,\n  IndexedGeometry,\n  LineGeometry,\n  PointGeometry,\n  renderArea,\n  renderBars,\n  renderLine,\n} from '../lib/series/rendering';\nimport { computeXScale, computeYScales, countBarsInCluster } from '../lib/series/scales';\nimport {\n  DataSeries,\n  DataSeriesColorsValues,\n  FormattedDataSeries,\n  getColorValuesAsString,\n  getFormattedDataseries,\n  getSplittedSeries,\n} from '../lib/series/series';\nimport { isEqualSeriesKey } from '../lib/series/series_utils';\nimport {\n  AreaSeriesSpec,\n  AxisSpec,\n  BasicSeriesSpec,\n  DomainRange,\n  isAreaSeriesSpec,\n  isBarSeriesSpec,\n  isLineSeriesSpec,\n  LineSeriesSpec,\n  Rotation,\n} from '../lib/series/specs';\nimport { ColorConfig, Theme } from '../lib/themes/theme';\nimport { identity } from '../lib/utils/commons';\nimport { Dimensions } from '../lib/utils/dimensions';\nimport { Domain } from '../lib/utils/domain';\nimport { AxisId, GroupId, SpecId } from '../lib/utils/ids';\nimport { Scale } from '../lib/utils/scales/scales';\nimport { SeriesDomainsAndData } from './chart_state';\n\nconst MAX_ANIMATABLE_BARS = 300;\nconst MAX_ANIMATABLE_LINES_AREA_POINTS = 600;\n\nexport interface Transform {\n  x: number;\n  y: number;\n  rotate: number;\n}\nexport interface BrushExtent {\n  minX: number;\n  minY: number;\n  maxX: number;\n  maxY: number;\n}\n\nexport interface GeometriesCounts {\n  points: number;\n  bars: number;\n  areas: number;\n  areasPoints: number;\n  lines: number;\n  linePoints: number;\n}\n\nexport function findDataSeriesByColorValues(\n  series: DataSeriesColorsValues[] | null,\n  value: DataSeriesColorsValues,\n): number {\n  if (!series) {\n    return -1;\n  }\n\n  return series.findIndex((item: DataSeriesColorsValues) => {\n    return isEqualSeriesKey(item.colorValues, value.colorValues) && item.specId === value.specId;\n  });\n}\n\nexport function updateDeselectedDataSeries(\n  series: DataSeriesColorsValues[] | null,\n  value: DataSeriesColorsValues,\n): DataSeriesColorsValues[] {\n  const seriesIndex = findDataSeriesByColorValues(series, value);\n  const updatedSeries = series ? [...series] : [];\n\n  if (seriesIndex > -1) {\n    updatedSeries.splice(seriesIndex, 1);\n  } else {\n    updatedSeries.push(value);\n  }\n  return updatedSeries;\n}\n\nexport function getUpdatedCustomSeriesColors(\n  seriesSpecs: Map<SpecId, BasicSeriesSpec>,\n): Map<string, string> {\n  const updatedCustomSeriesColors = new Map();\n  seriesSpecs.forEach((spec: BasicSeriesSpec, id: SpecId) => {\n    if (spec.customSeriesColors) {\n      spec.customSeriesColors.forEach(\n        (color: string, seriesColorValues: DataSeriesColorsValues) => {\n          const { colorValues, specId } = seriesColorValues;\n          const seriesLabel = getColorValuesAsString(colorValues, specId);\n          updatedCustomSeriesColors.set(seriesLabel, color);\n        },\n      );\n    }\n  });\n  return updatedCustomSeriesColors;\n}\n\n/**\n *\n * @param seriesSpecs\n * @param selectedDataSeries is optional; if not supplied,\n * then all series will be factored into computations. Otherwise, selectedDataSeries\n * is used to restrict the computation for just the selected series\n * @returns `SeriesDomainsAndData`\n */\nexport function computeSeriesDomains(\n  seriesSpecs: Map<SpecId, BasicSeriesSpec>,\n  domainsByGroupId: Map<GroupId, DomainRange>,\n  customXDomain?: DomainRange | Domain,\n  deselectedDataSeries?: DataSeriesColorsValues[] | null,\n): SeriesDomainsAndData {\n  const { splittedSeries, xValues, seriesColors } = getSplittedSeries(\n    seriesSpecs,\n    deselectedDataSeries,\n  );\n  // tslint:disable-next-line:no-console\n  // console.log({ splittedSeries, xValues, seriesColors });\n  const splittedDataSeries = [...splittedSeries.values()];\n  const specsArray = [...seriesSpecs.values()];\n\n  const xDomain = mergeXDomain(specsArray, xValues, customXDomain);\n  const yDomain = mergeYDomain(splittedSeries, specsArray, domainsByGroupId);\n\n  const formattedDataSeries = getFormattedDataseries(specsArray, splittedSeries);\n  // tslint:disable-next-line:no-console\n  // console.log({ formattedDataSeries, xDomain, yDomain });\n\n  return {\n    xDomain,\n    yDomain,\n    splittedDataSeries,\n    formattedDataSeries,\n    seriesColors,\n  };\n}\n\nexport function computeSeriesGeometries(\n  seriesSpecs: Map<SpecId, BasicSeriesSpec>,\n  xDomain: XDomain,\n  yDomain: YDomain[],\n  formattedDataSeries: {\n    stacked: FormattedDataSeries[];\n    nonStacked: FormattedDataSeries[];\n  },\n  seriesColorMap: Map<string, string>,\n  chartTheme: Theme,\n  chartDims: Dimensions,\n  chartRotation: Rotation,\n  axesSpecs: Map<AxisId, AxisSpec>,\n): {\n  scales: {\n    xScale: Scale;\n    yScales: Map<GroupId, Scale>;\n  };\n  geometries: {\n    points: PointGeometry[];\n    bars: BarGeometry[];\n    areas: AreaGeometry[];\n    lines: LineGeometry[];\n  };\n  geometriesIndex: Map<any, IndexedGeometry[]>;\n  geometriesCounts: GeometriesCounts;\n} {\n  const chartColors: ColorConfig = chartTheme.colors;\n  const barsPadding = chartTheme.scales.barsPadding;\n\n  const width = [0, 180].includes(chartRotation) ? chartDims.width : chartDims.height;\n  const height = [0, 180].includes(chartRotation) ? chartDims.height : chartDims.width;\n  // const { width, height } = chartDims;\n  const { stacked, nonStacked } = formattedDataSeries;\n\n  // compute how many series are clustered\n  const { stackedBarsInCluster, totalBarsInCluster } = countBarsInCluster(stacked, nonStacked);\n\n  // compute scales\n  const xScale = computeXScale(xDomain, totalBarsInCluster, 0, width, barsPadding);\n  const yScales = computeYScales(yDomain, height, 0);\n\n  // compute colors\n\n  // compute geometries\n  const points: PointGeometry[] = [];\n  const areas: AreaGeometry[] = [];\n  const bars: BarGeometry[] = [];\n  const lines: LineGeometry[] = [];\n  let stackedGeometriesIndex: Map<any, IndexedGeometry[]> = new Map();\n  let nonStackedGeometriesIndex: Map<any, IndexedGeometry[]> = new Map();\n  let orderIndex = 0;\n  const geometriesCounts = {\n    points: 0,\n    bars: 0,\n    areas: 0,\n    areasPoints: 0,\n    lines: 0,\n    linePoints: 0,\n  };\n  formattedDataSeries.stacked.forEach((dataSeriesGroup, index) => {\n    const { groupId, dataSeries, counts } = dataSeriesGroup;\n    const yScale = yScales.get(groupId);\n    if (!yScale) {\n      return;\n    }\n\n    const geometries = renderGeometries(\n      orderIndex,\n      totalBarsInCluster,\n      true,\n      dataSeries,\n      xScale,\n      yScale,\n      seriesSpecs,\n      seriesColorMap,\n      chartColors.defaultVizColor,\n      axesSpecs,\n      chartTheme,\n    );\n    orderIndex = counts.barSeries > 0 ? orderIndex + 1 : orderIndex;\n    areas.push(...geometries.areas);\n    lines.push(...geometries.lines);\n    bars.push(...geometries.bars);\n    points.push(...geometries.points);\n    stackedGeometriesIndex = mergeGeometriesIndexes(\n      stackedGeometriesIndex,\n      geometries.geometriesIndex,\n    );\n    // update counts\n    geometriesCounts.points += geometries.geometriesCounts.points;\n    geometriesCounts.bars += geometries.geometriesCounts.bars;\n    geometriesCounts.areas += geometries.geometriesCounts.areas;\n    geometriesCounts.areasPoints += geometries.geometriesCounts.areasPoints;\n    geometriesCounts.lines += geometries.geometriesCounts.lines;\n    geometriesCounts.linePoints += geometries.geometriesCounts.linePoints;\n  });\n  formattedDataSeries.nonStacked.map((dataSeriesGroup, index) => {\n    const { groupId, dataSeries } = dataSeriesGroup;\n    const yScale = yScales.get(groupId);\n    if (!yScale) {\n      return;\n    }\n    const geometries = renderGeometries(\n      stackedBarsInCluster,\n      totalBarsInCluster,\n      false,\n      dataSeries,\n      xScale,\n      yScale,\n      seriesSpecs,\n      seriesColorMap,\n      chartColors.defaultVizColor,\n      axesSpecs,\n      chartTheme,\n    );\n\n    areas.push(...geometries.areas);\n    lines.push(...geometries.lines);\n    bars.push(...geometries.bars);\n    points.push(...geometries.points);\n\n    nonStackedGeometriesIndex = mergeGeometriesIndexes(\n      nonStackedGeometriesIndex,\n      geometries.geometriesIndex,\n    );\n    // update counts\n    geometriesCounts.points += geometries.geometriesCounts.points;\n    geometriesCounts.bars += geometries.geometriesCounts.bars;\n    geometriesCounts.areas += geometries.geometriesCounts.areas;\n    geometriesCounts.areasPoints += geometries.geometriesCounts.areasPoints;\n    geometriesCounts.lines += geometries.geometriesCounts.lines;\n    geometriesCounts.linePoints += geometries.geometriesCounts.linePoints;\n  });\n  const geometriesIndex = mergeGeometriesIndexes(stackedGeometriesIndex, nonStackedGeometriesIndex);\n  return {\n    scales: {\n      xScale,\n      yScales,\n    },\n    geometries: {\n      points,\n      areas,\n      bars,\n      lines,\n    },\n    geometriesIndex,\n    geometriesCounts,\n  };\n}\n\nexport function renderGeometries(\n  indexOffset: number,\n  clusteredCount: number,\n  isStacked: boolean,\n  dataSeries: DataSeries[],\n  xScale: Scale,\n  yScale: Scale,\n  seriesSpecs: Map<SpecId, BasicSeriesSpec>,\n  seriesColorsMap: Map<string, string>,\n  defaultColor: string,\n  axesSpecs: Map<AxisId, AxisSpec>,\n  chartTheme: Theme,\n): {\n  points: PointGeometry[];\n  bars: BarGeometry[];\n  areas: AreaGeometry[];\n  lines: LineGeometry[];\n  geometriesIndex: Map<any, IndexedGeometry[]>;\n  geometriesCounts: GeometriesCounts;\n} {\n  const len = dataSeries.length;\n  let i;\n  const points: PointGeometry[] = [];\n  const bars: BarGeometry[] = [];\n  const areas: AreaGeometry[] = [];\n  const lines: LineGeometry[] = [];\n  const pointGeometriesIndex: Map<any, IndexedGeometry[]> = new Map();\n  let barGeometriesIndex: Map<any, IndexedGeometry[]> = new Map();\n  let lineGeometriesIndex: Map<any, IndexedGeometry[]> = new Map();\n  let areaGeometriesIndex: Map<any, IndexedGeometry[]> = new Map();\n  const geometriesCounts = {\n    points: 0,\n    bars: 0,\n    areas: 0,\n    areasPoints: 0,\n    lines: 0,\n    linePoints: 0,\n  };\n  for (i = 0; i < len; i++) {\n    const ds = dataSeries[i];\n    const spec = getSpecById(seriesSpecs, ds.specId);\n    if (spec === undefined) {\n      continue;\n    }\n    const color = seriesColorsMap.get(ds.seriesColorKey) || defaultColor;\n\n    if (isBarSeriesSpec(spec)) {\n        const shift = isStacked ? indexOffset : indexOffset + i;\n\n        // TODO: we can handle style merging here and not pass that off to the component\n        // then barSeriesStyle should not be an optional parameter and we can simplify\n        // the props building in the geometries component\n        const barSeriesStyle = spec.barSeriesStyle ? {\n          ...chartTheme.barSeriesStyle,\n          ...spec.barSeriesStyle,\n        } : chartTheme.barSeriesStyle;\n\n        const { yAxis } = getAxesSpecForSpecId(axesSpecs, spec.groupId);\n        const valueFormatter = yAxis && yAxis.tickFormat ? yAxis.tickFormat : identity;\n\n        const displayValueSettings = spec.displayValueSettings ? {\n          valueFormatter,\n          ...spec.displayValueSettings,\n        } : undefined;\n\n        const renderedBars = renderBars(\n          shift, ds.data, xScale, yScale, color,\n          ds.specId, ds.key, displayValueSettings, barSeriesStyle,\n        );\n        barGeometriesIndex = mergeGeometriesIndexes(\n          barGeometriesIndex,\n          renderedBars.indexedGeometries,\n        );\n        bars.push(...renderedBars.barGeometries);\n        geometriesCounts.bars += renderedBars.barGeometries.length;\n    } else if (isLineSeriesSpec(spec)) {\n        const lineShift = clusteredCount > 0 ? clusteredCount : 1;\n        const lineSeriesStyle = spec.lineSeriesStyle;\n        const renderedLines = renderLine(\n          // move the point on half of the bandwidth if we have mixed bars/lines\n          (xScale.bandwidth * lineShift) / 2,\n          ds.data,\n          xScale,\n          yScale,\n          color,\n          (spec as LineSeriesSpec).curve || CurveType.LINEAR,\n          ds.specId,\n          Boolean(spec.y0Accessors),\n          ds.key,\n          lineSeriesStyle,\n        );\n        lineGeometriesIndex = mergeGeometriesIndexes(\n          lineGeometriesIndex,\n          renderedLines.indexedGeometries,\n        );\n        lines.push(renderedLines.lineGeometry);\n        geometriesCounts.linePoints += renderedLines.lineGeometry.points.length;\n        geometriesCounts.lines += 1;\n    } else if (isAreaSeriesSpec(spec)) {\n        const areaShift = clusteredCount > 0 ? clusteredCount : 1;\n        const areaSeriesStyle = spec.areaSeriesStyle;\n        const renderedAreas = renderArea(\n          // move the point on half of the bandwidth if we have mixed bars/lines\n          (xScale.bandwidth * areaShift) / 2,\n          ds.data,\n          xScale,\n          yScale,\n          color,\n          (spec as AreaSeriesSpec).curve || CurveType.LINEAR,\n          ds.specId,\n          Boolean(spec.y0Accessors),\n          ds.key,\n          areaSeriesStyle,\n        );\n        areaGeometriesIndex = mergeGeometriesIndexes(\n          areaGeometriesIndex,\n          renderedAreas.indexedGeometries,\n        );\n        areas.push(renderedAreas.areaGeometry);\n        geometriesCounts.areasPoints += renderedAreas.areaGeometry.points.length;\n        geometriesCounts.areas += 1;\n    }\n  }\n  const geometriesIndex = mergeGeometriesIndexes(\n    pointGeometriesIndex,\n    lineGeometriesIndex,\n    areaGeometriesIndex,\n    barGeometriesIndex,\n  );\n  return {\n    points,\n    bars,\n    areas,\n    lines,\n    geometriesIndex,\n    geometriesCounts,\n  };\n}\n\nexport function getSpecById(seriesSpecs: Map<SpecId, BasicSeriesSpec>, specId: SpecId) {\n  return seriesSpecs.get(specId);\n}\n\nexport function getAxesSpecForSpecId(axesSpecs: Map<AxisId, AxisSpec>, groupId: GroupId) {\n  let xAxis;\n  let yAxis;\n  for (const axisSpec of axesSpecs.values()) {\n    if (axisSpec.groupId !== groupId) {\n      continue;\n    }\n    if (isVertical(axisSpec.position)) {\n      yAxis = axisSpec;\n    } else {\n      xAxis = axisSpec;\n    }\n  }\n  return {\n    xAxis,\n    yAxis,\n  };\n}\n\nexport function computeChartTransform(\n  chartDimensions: Dimensions,\n  chartRotation: Rotation,\n): Transform {\n  if (chartRotation === 90) {\n    return {\n      x: chartDimensions.width,\n      y: 0,\n      rotate: 90,\n    };\n  } else if (chartRotation === -90) {\n    return {\n      x: 0,\n      y: chartDimensions.height,\n      rotate: -90,\n    };\n  } else if (chartRotation === 180) {\n    return {\n      x: chartDimensions.width,\n      y: chartDimensions.height,\n      rotate: 180,\n    };\n  } else {\n    return {\n      x: 0,\n      y: 0,\n      rotate: 0,\n    };\n  }\n}\n\nexport function computeBrushExtent(\n  chartDimensions: Dimensions,\n  chartRotation: Rotation,\n  chartTransform: Transform,\n): BrushExtent {\n  const minX = [0, 180].includes(chartRotation)\n    ? chartDimensions.left + chartTransform.x\n    : chartDimensions.top + chartTransform.y;\n  const minY = [0, 180].includes(chartRotation)\n    ? chartDimensions.top + chartTransform.y\n    : chartDimensions.left + chartTransform.x;\n  const maxX = minX + chartDimensions.width;\n  const maxY = minY + chartDimensions.height;\n  return {\n    minX,\n    minY,\n    maxX,\n    maxY,\n  };\n}\n\n/**\n * Merge multiple geometry indexes maps together.\n * @param iterables a set of maps to be merged\n * @returns a new Map where each element with the same key are concatenated on a single\n * IndexedGemoetry array for that key\n */\nexport function mergeGeometriesIndexes(...iterables: Array<Map<any, IndexedGeometry[]>>) {\n  const geometriesIndex: Map<any, IndexedGeometry[]> = new Map();\n\n  for (const iterable of iterables) {\n    for (const item of iterable) {\n      mutableIndexedGeometryMapUpsert(geometriesIndex, item[0], item[1]);\n    }\n  }\n  return geometriesIndex;\n}\n\nexport function mutableIndexedGeometryMapUpsert(\n  mutableGeometriesIndex: Map<any, IndexedGeometry[]>,\n  key: any,\n  geometry: IndexedGeometry | IndexedGeometry[],\n) {\n  const existing = mutableGeometriesIndex.get(key);\n  const upsertGeometry: IndexedGeometry[] = Array.isArray(geometry) ? geometry : [geometry];\n  if (existing === undefined) {\n    mutableGeometriesIndex.set(key, upsertGeometry);\n  } else {\n    mutableGeometriesIndex.set(key, [...upsertGeometry, ...existing]);\n  }\n}\n\nexport function isHorizontalRotation(chartRotation: Rotation) {\n  return chartRotation === 0 || chartRotation === 180;\n}\n\nexport function isVerticalRotation(chartRotation: Rotation) {\n  return chartRotation === -90 || chartRotation === 90;\n}\n\n/**\n * Check if a specs map contains only line or area specs\n * @param specs Map<SpecId, BasicSeriesSpec>\n */\nexport function isLineAreaOnlyChart(specs: Map<SpecId, BasicSeriesSpec>) {\n  return ![...specs.values()].some((spec) => {\n    return spec.seriesType === 'bar';\n  });\n}\n\nexport function isChartAnimatable(\n  geometriesCounts: GeometriesCounts,\n  animationEnabled: boolean,\n): boolean {\n  if (!animationEnabled) {\n    return false;\n  }\n  const { bars, linePoints, areasPoints } = geometriesCounts;\n  const isBarsAnimatable = bars <= MAX_ANIMATABLE_BARS;\n  const isLinesAndAreasAnimatable = linePoints + areasPoints <= MAX_ANIMATABLE_LINES_AREA_POINTS;\n  return isBarsAnimatable && isLinesAndAreasAnimatable;\n}\ntry {\n    // @ts-ignore\n    getUpdatedCustomSeriesColors.displayName = \"getUpdatedCustomSeriesColors\";\n    // @ts-ignore\n    getUpdatedCustomSeriesColors.__docgenInfo = { \"description\": \"\", \"displayName\": \"getUpdatedCustomSeriesColors\", \"props\": { \"clear\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"clear\", \"required\": true, \"type\": { \"name\": \"() => void\" } }, \"delete\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"delete\", \"required\": true, \"type\": { \"name\": \"(key: SpecId) => boolean\" } }, \"forEach\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"forEach\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: BasicSeriesSpec, key: SpecId, map: Map<SpecId, BasicSeriesSpec>) => void, thisArg?: any) => void\" } }, \"get\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"get\", \"required\": true, \"type\": { \"name\": \"(key: SpecId) => BasicSeriesSpec\" } }, \"has\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"has\", \"required\": true, \"type\": { \"name\": \"(key: SpecId) => boolean\" } }, \"set\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"set\", \"required\": true, \"type\": { \"name\": \"(key: SpecId, value: BasicSeriesSpec) => Map<SpecId, BasicSeriesSpec>\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"__@iterator\": { \"defaultValue\": null, \"description\": \"Returns an iterable of entries in the map.\", \"name\": \"__@iterator\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<[SpecId, BasicSeriesSpec]>\" } }, \"entries\": { \"defaultValue\": null, \"description\": \"Returns an iterable of key, value pairs for every entry in the map.\", \"name\": \"entries\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<[SpecId, BasicSeriesSpec]>\" } }, \"keys\": { \"defaultValue\": null, \"description\": \"Returns an iterable of keys in the map\", \"name\": \"keys\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<SpecId>\" } }, \"values\": { \"defaultValue\": null, \"description\": \"Returns an iterable of values in the map\", \"name\": \"values\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<BasicSeriesSpec>\" } }, \"__@toStringTag\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"__@toStringTag\", \"required\": true, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/state/utils.ts#getUpdatedCustomSeriesColors\"] = { docgenInfo: getUpdatedCustomSeriesColors.__docgenInfo, name: \"getUpdatedCustomSeriesColors\", path: \"src/state/utils.ts#getUpdatedCustomSeriesColors\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    computeSeriesDomains.displayName = \"computeSeriesDomains\";\n    // @ts-ignore\n    computeSeriesDomains.__docgenInfo = { \"description\": \"@param seriesSpecs\\n@param selectedDataSeries is optional; if not supplied,\\nthen all series will be factored into computations. Otherwise, selectedDataSeries\\nis used to restrict the computation for just the selected series\\n@returns `SeriesDomainsAndData`\", \"displayName\": \"computeSeriesDomains\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/state/utils.ts#computeSeriesDomains\"] = { docgenInfo: computeSeriesDomains.__docgenInfo, name: \"computeSeriesDomains\", path: \"src/state/utils.ts#computeSeriesDomains\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    mergeGeometriesIndexes.displayName = \"mergeGeometriesIndexes\";\n    // @ts-ignore\n    mergeGeometriesIndexes.__docgenInfo = { \"description\": \"Merge multiple geometry indexes maps together.\\n@param iterables a set of maps to be merged\\n@returns a new Map where each element with the same key are concatenated on a single\\nIndexedGemoetry array for that key\", \"displayName\": \"mergeGeometriesIndexes\", \"props\": { \"length\": { \"defaultValue\": null, \"description\": \"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.\", \"name\": \"length\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of an array.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.\", \"name\": \"toLocaleString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"pop\": { \"defaultValue\": null, \"description\": \"Removes the last element from an array and returns it.\", \"name\": \"pop\", \"required\": true, \"type\": { \"name\": \"() => Map<any, IndexedGeometry[]>\" } }, \"push\": { \"defaultValue\": null, \"description\": \"Appends new elements to an array, and returns the new length of the array.\\n@param items New elements of the Array.\", \"name\": \"push\", \"required\": true, \"type\": { \"name\": \"(...items: Map<any, IndexedGeometry[]>[]) => number\" } }, \"concat\": { \"defaultValue\": null, \"description\": \"Combines two or more arrays.\\nCombines two or more arrays.\\n@param items Additional items to add to the end of array1.\\n@param items Additional items to add to the end of array1.\", \"name\": \"concat\", \"required\": true, \"type\": { \"name\": \"{ (...items: ConcatArray<Map<any, IndexedGeometry[]>>[]): Map<any, IndexedGeometry[]>[]; (...items: (Map<any, IndexedGeometry[]> | ConcatArray<Map<any, IndexedGeometry[]>>)[]): Map<any, IndexedGeometry[]>[]; }\" } }, \"join\": { \"defaultValue\": null, \"description\": \"Adds all the elements of an array separated by the specified separator string.\\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.\", \"name\": \"join\", \"required\": true, \"type\": { \"name\": \"(separator?: string) => string\" } }, \"reverse\": { \"defaultValue\": null, \"description\": \"Reverses the elements in an Array.\", \"name\": \"reverse\", \"required\": true, \"type\": { \"name\": \"() => Map<any, IndexedGeometry[]>[]\" } }, \"shift\": { \"defaultValue\": null, \"description\": \"Removes the first element from an array and returns it.\", \"name\": \"shift\", \"required\": true, \"type\": { \"name\": \"() => Map<any, IndexedGeometry[]>\" } }, \"slice\": { \"defaultValue\": null, \"description\": \"Returns a section of an array.\\n@param start The beginning of the specified portion of the array.\\n@param end The end of the specified portion of the array.\", \"name\": \"slice\", \"required\": true, \"type\": { \"name\": \"(start?: number, end?: number) => Map<any, IndexedGeometry[]>[]\" } }, \"sort\": { \"defaultValue\": null, \"description\": \"Sorts an array.\\n@param compareFn The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, ASCII character order.\", \"name\": \"sort\", \"required\": true, \"type\": { \"name\": \"(compareFn?: (a: Map<any, IndexedGeometry[]>, b: Map<any, IndexedGeometry[]>) => number) => Map<any, IndexedGeometry[]>[]\" } }, \"splice\": { \"defaultValue\": null, \"description\": \"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param items Elements to insert into the array in place of the deleted elements.\", \"name\": \"splice\", \"required\": true, \"type\": { \"name\": \"{ (start: number, deleteCount?: number): Map<any, IndexedGeometry[]>[]; (start: number, deleteCount: number, ...items: Map<any, IndexedGeometry[]>[]): Map<any, IndexedGeometry[]>[]; }\" } }, \"unshift\": { \"defaultValue\": null, \"description\": \"Inserts new elements at the start of an array.\\n@param items Elements to insert at the start of the Array.\", \"name\": \"unshift\", \"required\": true, \"type\": { \"name\": \"(...items: Map<any, IndexedGeometry[]>[]) => number\" } }, \"indexOf\": { \"defaultValue\": null, \"description\": \"Returns the index of the first occurrence of a value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\", \"name\": \"indexOf\", \"required\": true, \"type\": { \"name\": \"(searchElement: Map<any, IndexedGeometry[]>, fromIndex?: number) => number\" } }, \"lastIndexOf\": { \"defaultValue\": null, \"description\": \"Returns the index of the last occurrence of a specified value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.\", \"name\": \"lastIndexOf\", \"required\": true, \"type\": { \"name\": \"(searchElement: Map<any, IndexedGeometry[]>, fromIndex?: number) => number\" } }, \"every\": { \"defaultValue\": null, \"description\": \"Determines whether all the members of an array satisfy the specified test.\\n@param callbackfn A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"every\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: Map<any, IndexedGeometry[]>, index: number, array: Map<any, IndexedGeometry[]>[]) => boolean, thisArg?: any) => boolean\" } }, \"some\": { \"defaultValue\": null, \"description\": \"Determines whether the specified callback function returns true for any element of an array.\\n@param callbackfn A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"some\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: Map<any, IndexedGeometry[]>, index: number, array: Map<any, IndexedGeometry[]>[]) => boolean, thisArg?: any) => boolean\" } }, \"forEach\": { \"defaultValue\": null, \"description\": \"Performs the specified action for each element in an array.\\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"forEach\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: Map<any, IndexedGeometry[]>, index: number, array: Map<any, IndexedGeometry[]>[]) => void, thisArg?: any) => void\" } }, \"map\": { \"defaultValue\": null, \"description\": \"Calls a defined callback function on each element of an array, and returns an array that contains the results.\\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"map\", \"required\": true, \"type\": { \"name\": \"<U>(callbackfn: (value: Map<any, IndexedGeometry[]>, index: number, array: Map<any, IndexedGeometry[]>[]) => U, thisArg?: any) => U[]\" } }, \"filter\": { \"defaultValue\": null, \"description\": \"Returns the elements of an array that meet the condition specified in a callback function.\\nReturns the elements of an array that meet the condition specified in a callback function.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"filter\", \"required\": true, \"type\": { \"name\": \"{ <S extends Map<any, IndexedGeometry[]>>(callbackfn: (value: Map<any, IndexedGeometry[]>, index: number, array: Map<any, IndexedGeometry[]>[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: Map<any, IndexedGeometry[]>, index: number, array: Map<...>[]) => any, thisArg?: any): Map<...>[]; }\" } }, \"reduce\": { \"defaultValue\": null, \"description\": \"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\", \"name\": \"reduce\", \"required\": true, \"type\": { \"name\": \"{ (callbackfn: (previousValue: Map<any, IndexedGeometry[]>, currentValue: Map<any, IndexedGeometry[]>, currentIndex: number, array: Map<any, IndexedGeometry[]>[]) => Map<any, IndexedGeometry[]>): Map<...>; (callbackfn: (previousValue: Map<...>, currentValue: Map<...>, currentIndex: number, array: Map<...>[]) => Map<...\" } }, \"reduceRight\": { \"defaultValue\": null, \"description\": \"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\", \"name\": \"reduceRight\", \"required\": true, \"type\": { \"name\": \"{ (callbackfn: (previousValue: Map<any, IndexedGeometry[]>, currentValue: Map<any, IndexedGeometry[]>, currentIndex: number, array: Map<any, IndexedGeometry[]>[]) => Map<any, IndexedGeometry[]>): Map<...>; (callbackfn: (previousValue: Map<...>, currentValue: Map<...>, currentIndex: number, array: Map<...>[]) => Map<...\" } }, \"find\": { \"defaultValue\": null, \"description\": \"Returns the value of the first element in the array where predicate is true, and undefined\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\rorder, until it finds one where predicate returns true. If such an element is found, find\\rimmediately returns that element value. Otherwise, find returns undefined.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\rpredicate. If it is not provided, undefined is used instead.\", \"name\": \"find\", \"required\": true, \"type\": { \"name\": \"{ <S extends Map<any, IndexedGeometry[]>>(predicate: (this: void, value: Map<any, IndexedGeometry[]>, index: number, obj: Map<any, IndexedGeometry[]>[]) => value is S, thisArg?: any): S; (predicate: (value: Map<any, IndexedGeometry[]>, index: number, obj: Map<...>[]) => boolean, thisArg?: any): Map<...>; }\" } }, \"findIndex\": { \"defaultValue\": null, \"description\": \"Returns the index of the first element in the array where predicate is true, and -1\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\rorder, until it finds one where predicate returns true. If such an element is found,\\rfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\rpredicate. If it is not provided, undefined is used instead.\", \"name\": \"findIndex\", \"required\": true, \"type\": { \"name\": \"(predicate: (value: Map<any, IndexedGeometry[]>, index: number, obj: Map<any, IndexedGeometry[]>[]) => boolean, thisArg?: any) => number\" } }, \"fill\": { \"defaultValue\": null, \"description\": \"Returns the this object after filling the section identified by start and end with value\\n@param value value to fill array section with\\n@param start index to start filling the array at. If start is negative, it is treated as\\rlength+start where length is the length of the array.\\n@param end index to stop filling the array at. If end is negative, it is treated as\\rlength+end.\", \"name\": \"fill\", \"required\": true, \"type\": { \"name\": \"(value: Map<any, IndexedGeometry[]>, start?: number, end?: number) => Map<any, IndexedGeometry[]>[]\" } }, \"copyWithin\": { \"defaultValue\": null, \"description\": \"Returns the this object after copying a section of the array identified by start and end\\nto the same array starting at position target\\n@param target If target is negative, it is treated as length+target where length is the\\rlength of the array.\\n@param start If start is negative, it is treated as length+start. If end is negative, it\\ris treated as length+end.\\n@param end If not specified, length of the this object is used as its default value.\", \"name\": \"copyWithin\", \"required\": true, \"type\": { \"name\": \"(target: number, start: number, end?: number) => Map<any, IndexedGeometry[]>[]\" } }, \"__@iterator\": { \"defaultValue\": null, \"description\": \"Iterator\", \"name\": \"__@iterator\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<Map<any, IndexedGeometry[]>>\" } }, \"entries\": { \"defaultValue\": null, \"description\": \"Returns an iterable of key, value pairs for every entry in the array\", \"name\": \"entries\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<[number, Map<any, IndexedGeometry[]>]>\" } }, \"keys\": { \"defaultValue\": null, \"description\": \"Returns an iterable of keys in the array\", \"name\": \"keys\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<number>\" } }, \"values\": { \"defaultValue\": null, \"description\": \"Returns an iterable of values in the array\", \"name\": \"values\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<Map<any, IndexedGeometry[]>>\" } }, \"__@unscopables\": { \"defaultValue\": null, \"description\": \"Returns an object whose properties have the value 'true'\\nwhen they will be absent when used in a 'with' statement.\", \"name\": \"__@unscopables\", \"required\": true, \"type\": { \"name\": \"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }\" } }, \"includes\": { \"defaultValue\": null, \"description\": \"Determines whether an array includes a certain element, returning true or false as appropriate.\\n@param searchElement The element to search for.\\n@param fromIndex The position in this array at which to begin searching for searchElement.\", \"name\": \"includes\", \"required\": true, \"type\": { \"name\": \"(searchElement: Map<any, IndexedGeometry[]>, fromIndex?: number) => boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/state/utils.ts#mergeGeometriesIndexes\"] = { docgenInfo: mergeGeometriesIndexes.__docgenInfo, name: \"mergeGeometriesIndexes\", path: \"src/state/utils.ts#mergeGeometriesIndexes\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    isHorizontalRotation.displayName = \"isHorizontalRotation\";\n    // @ts-ignore\n    isHorizontalRotation.__docgenInfo = { \"description\": \"\", \"displayName\": \"isHorizontalRotation\", \"props\": { \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of an object.\\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"(radix?: number) => string\" } }, \"toFixed\": { \"defaultValue\": null, \"description\": \"Returns a string representing a number in fixed-point notation.\\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.\", \"name\": \"toFixed\", \"required\": true, \"type\": { \"name\": \"(fractionDigits?: number) => string\" } }, \"toExponential\": { \"defaultValue\": null, \"description\": \"Returns a string containing a number represented in exponential notation.\\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.\", \"name\": \"toExponential\", \"required\": true, \"type\": { \"name\": \"(fractionDigits?: number) => string\" } }, \"toPrecision\": { \"defaultValue\": null, \"description\": \"Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\\n@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.\", \"name\": \"toPrecision\", \"required\": true, \"type\": { \"name\": \"(precision?: number) => string\" } }, \"valueOf\": { \"defaultValue\": null, \"description\": \"Returns the primitive value of the specified object.\", \"name\": \"valueOf\", \"required\": true, \"type\": { \"name\": \"() => number\" } }, \"toLocaleString\": { \"defaultValue\": null, \"description\": \"Converts a number to a string by using the current or specified locale.\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\\n@param options An object that contains one or more properties that specify comparison options.\", \"name\": \"toLocaleString\", \"required\": true, \"type\": { \"name\": \"(locales?: string | string[], options?: NumberFormatOptions) => string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/state/utils.ts#isHorizontalRotation\"] = { docgenInfo: isHorizontalRotation.__docgenInfo, name: \"isHorizontalRotation\", path: \"src/state/utils.ts#isHorizontalRotation\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    isVerticalRotation.displayName = \"isVerticalRotation\";\n    // @ts-ignore\n    isVerticalRotation.__docgenInfo = { \"description\": \"\", \"displayName\": \"isVerticalRotation\", \"props\": { \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of an object.\\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"(radix?: number) => string\" } }, \"toFixed\": { \"defaultValue\": null, \"description\": \"Returns a string representing a number in fixed-point notation.\\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.\", \"name\": \"toFixed\", \"required\": true, \"type\": { \"name\": \"(fractionDigits?: number) => string\" } }, \"toExponential\": { \"defaultValue\": null, \"description\": \"Returns a string containing a number represented in exponential notation.\\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.\", \"name\": \"toExponential\", \"required\": true, \"type\": { \"name\": \"(fractionDigits?: number) => string\" } }, \"toPrecision\": { \"defaultValue\": null, \"description\": \"Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\\n@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.\", \"name\": \"toPrecision\", \"required\": true, \"type\": { \"name\": \"(precision?: number) => string\" } }, \"valueOf\": { \"defaultValue\": null, \"description\": \"Returns the primitive value of the specified object.\", \"name\": \"valueOf\", \"required\": true, \"type\": { \"name\": \"() => number\" } }, \"toLocaleString\": { \"defaultValue\": null, \"description\": \"Converts a number to a string by using the current or specified locale.\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\\n@param options An object that contains one or more properties that specify comparison options.\", \"name\": \"toLocaleString\", \"required\": true, \"type\": { \"name\": \"(locales?: string | string[], options?: NumberFormatOptions) => string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/state/utils.ts#isVerticalRotation\"] = { docgenInfo: isVerticalRotation.__docgenInfo, name: \"isVerticalRotation\", path: \"src/state/utils.ts#isVerticalRotation\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    isLineAreaOnlyChart.displayName = \"isLineAreaOnlyChart\";\n    // @ts-ignore\n    isLineAreaOnlyChart.__docgenInfo = { \"description\": \"Check if a specs map contains only line or area specs\\n@param specs Map<SpecId, BasicSeriesSpec>\", \"displayName\": \"isLineAreaOnlyChart\", \"props\": { \"clear\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"clear\", \"required\": true, \"type\": { \"name\": \"() => void\" } }, \"delete\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"delete\", \"required\": true, \"type\": { \"name\": \"(key: SpecId) => boolean\" } }, \"forEach\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"forEach\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: BasicSeriesSpec, key: SpecId, map: Map<SpecId, BasicSeriesSpec>) => void, thisArg?: any) => void\" } }, \"get\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"get\", \"required\": true, \"type\": { \"name\": \"(key: SpecId) => BasicSeriesSpec\" } }, \"has\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"has\", \"required\": true, \"type\": { \"name\": \"(key: SpecId) => boolean\" } }, \"set\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"set\", \"required\": true, \"type\": { \"name\": \"(key: SpecId, value: BasicSeriesSpec) => Map<SpecId, BasicSeriesSpec>\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"__@iterator\": { \"defaultValue\": null, \"description\": \"Returns an iterable of entries in the map.\", \"name\": \"__@iterator\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<[SpecId, BasicSeriesSpec]>\" } }, \"entries\": { \"defaultValue\": null, \"description\": \"Returns an iterable of key, value pairs for every entry in the map.\", \"name\": \"entries\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<[SpecId, BasicSeriesSpec]>\" } }, \"keys\": { \"defaultValue\": null, \"description\": \"Returns an iterable of keys in the map\", \"name\": \"keys\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<SpecId>\" } }, \"values\": { \"defaultValue\": null, \"description\": \"Returns an iterable of values in the map\", \"name\": \"values\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<BasicSeriesSpec>\" } }, \"__@toStringTag\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"__@toStringTag\", \"required\": true, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/state/utils.ts#isLineAreaOnlyChart\"] = { docgenInfo: isLineAreaOnlyChart.__docgenInfo, name: \"isLineAreaOnlyChart\", path: \"src/state/utils.ts#isLineAreaOnlyChart\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export function identity<T>(value: T): T {\n  return value;\n}\n\nexport function compareByValueAsc(firstEl: number, secondEl: number): number {\n  return firstEl - secondEl;\n}\n\nexport function clamp(value: number, min: number, max: number): number {\n  return Math.min(Math.max(value, min), max);\n}\ntry {\n    // @ts-ignore\n    identity.displayName = \"identity\";\n    // @ts-ignore\n    identity.__docgenInfo = { \"description\": \"\", \"displayName\": \"identity\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/utils/commons.ts#identity\"] = { docgenInfo: identity.__docgenInfo, name: \"identity\", path: \"src/lib/utils/commons.ts#identity\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { inject } from 'mobx-react';\nimport { PureComponent } from 'react';\nimport { RectAnnotationSpec } from '../lib/series/specs';\nimport { getGroupId } from '../lib/utils/ids';\nimport { SpecProps } from './specs_parser';\n\ntype RectAnnotationProps = SpecProps & RectAnnotationSpec;\n\nexport class RectAnnotationSpecComponent extends PureComponent<RectAnnotationProps> {\n  static defaultProps: Partial<RectAnnotationProps> = {\n    groupId: getGroupId('__global__'),\n    annotationType: 'rectangle',\n    zIndex: -1,\n  };\n\n  componentDidMount() {\n    const { chartStore, children, ...config } = this.props;\n    chartStore!.addAnnotationSpec({ ...config });\n  }\n  componentDidUpdate() {\n    const { chartStore, children, ...config } = this.props;\n    chartStore!.addAnnotationSpec({ ...config });\n  }\n  componentWillUnmount() {\n    const { chartStore, annotationId } = this.props;\n    chartStore!.removeAnnotationSpec(annotationId);\n  }\n  render() {\n    return null;\n  }\n}\n\nexport const RectAnnotation = inject('chartStore')(RectAnnotationSpecComponent);\ntry {\n    // @ts-ignore\n    RectAnnotationSpecComponent.displayName = \"RectAnnotationSpecComponent\";\n    // @ts-ignore\n    RectAnnotationSpecComponent.__docgenInfo = { \"description\": \"\", \"displayName\": \"RectAnnotationSpecComponent\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/specs/rect_annotation.tsx#RectAnnotationSpecComponent\"] = { docgenInfo: RectAnnotationSpecComponent.__docgenInfo, name: \"RectAnnotationSpecComponent\", path: \"src/specs/rect_annotation.tsx#RectAnnotationSpecComponent\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    RectAnnotation.displayName = \"RectAnnotation\";\n    // @ts-ignore\n    RectAnnotation.__docgenInfo = { \"description\": \"\", \"displayName\": \"RectAnnotation\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/specs/rect_annotation.tsx#RectAnnotation\"] = { docgenInfo: RectAnnotation.__docgenInfo, name: \"RectAnnotation\", path: \"src/specs/rect_annotation.tsx#RectAnnotation\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { inject } from 'mobx-react';\nimport { PureComponent } from 'react';\nimport { LineSeriesSpec } from '../lib/series/specs';\nimport { getGroupId } from '../lib/utils/ids';\nimport { ScaleType } from '../lib/utils/scales/scales';\nimport { SpecProps } from './specs_parser';\n\ntype LineSpecProps = SpecProps & LineSeriesSpec;\n\nexport class LineSeriesSpecComponent extends PureComponent<LineSpecProps> {\n  static defaultProps: Partial<LineSpecProps> = {\n    seriesType: 'line',\n    groupId: getGroupId('__global__'),\n    xScaleType: ScaleType.Ordinal,\n    yScaleType: ScaleType.Linear,\n    xAccessor: 'x',\n    yAccessors: ['y'],\n    yScaleToDataExtent: false,\n    hideInLegend: false,\n  };\n  componentDidMount() {\n    const { chartStore, children, ...config } = this.props;\n    chartStore!.addSeriesSpec({ ...config });\n  }\n  componentDidUpdate(prevProps: LineSpecProps) {\n    const { chartStore, children, ...config } = this.props;\n    chartStore!.addSeriesSpec({ ...config });\n    if (prevProps.id !== this.props.id) {\n      chartStore!.removeSeriesSpec(prevProps.id);\n    }\n  }\n  componentWillUnmount() {\n    const { chartStore, id } = this.props;\n    chartStore!.removeSeriesSpec(id);\n  }\n  render() {\n    return null;\n  }\n}\n\nexport const LineSeries = inject('chartStore')(LineSeriesSpecComponent);\ntry {\n    // @ts-ignore\n    LineSeriesSpecComponent.displayName = \"LineSeriesSpecComponent\";\n    // @ts-ignore\n    LineSeriesSpecComponent.__docgenInfo = { \"description\": \"\", \"displayName\": \"LineSeriesSpecComponent\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/specs/line_series.tsx#LineSeriesSpecComponent\"] = { docgenInfo: LineSeriesSpecComponent.__docgenInfo, name: \"LineSeriesSpecComponent\", path: \"src/specs/line_series.tsx#LineSeriesSpecComponent\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    LineSeries.displayName = \"LineSeries\";\n    // @ts-ignore\n    LineSeries.__docgenInfo = { \"description\": \"\", \"displayName\": \"LineSeries\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/specs/line_series.tsx#LineSeries\"] = { docgenInfo: LineSeries.__docgenInfo, name: \"LineSeries\", path: \"src/specs/line_series.tsx#LineSeries\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { inject } from 'mobx-react';\nimport { PureComponent } from 'react';\nimport { BarSeriesSpec } from '../lib/series/specs';\nimport { getGroupId } from '../lib/utils/ids';\nimport { ScaleType } from '../lib/utils/scales/scales';\nimport { SpecProps } from './specs_parser';\n\ntype BarSpecProps = SpecProps & BarSeriesSpec;\n\nexport class BarSeriesSpecComponent extends PureComponent<BarSpecProps> {\n  static defaultProps: Partial<BarSpecProps> = {\n    seriesType: 'bar',\n    groupId: getGroupId('__global__'),\n    xScaleType: ScaleType.Ordinal,\n    yScaleType: ScaleType.Linear,\n    xAccessor: 'x',\n    yAccessors: ['y'],\n    yScaleToDataExtent: false,\n    hideInLegend: false,\n  };\n  componentDidMount() {\n    const { chartStore, children, ...config } = this.props;\n    chartStore!.addSeriesSpec({ ...config });\n  }\n  componentDidUpdate(prevProps: BarSpecProps) {\n    const { chartStore, children, ...config } = this.props;\n    chartStore!.addSeriesSpec({ ...config });\n    if (prevProps.id !== this.props.id) {\n      chartStore!.removeSeriesSpec(prevProps.id);\n    }\n  }\n  componentWillUnmount() {\n    const { chartStore, id } = this.props;\n    chartStore!.removeSeriesSpec(id);\n  }\n  render() {\n    return null;\n  }\n}\n\nexport const BarSeries = inject('chartStore')(BarSeriesSpecComponent);\ntry {\n    // @ts-ignore\n    BarSeriesSpecComponent.displayName = \"BarSeriesSpecComponent\";\n    // @ts-ignore\n    BarSeriesSpecComponent.__docgenInfo = { \"description\": \"\", \"displayName\": \"BarSeriesSpecComponent\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/specs/bar_series.tsx#BarSeriesSpecComponent\"] = { docgenInfo: BarSeriesSpecComponent.__docgenInfo, name: \"BarSeriesSpecComponent\", path: \"src/specs/bar_series.tsx#BarSeriesSpecComponent\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    BarSeries.displayName = \"BarSeries\";\n    // @ts-ignore\n    BarSeries.__docgenInfo = { \"description\": \"\", \"displayName\": \"BarSeries\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/specs/bar_series.tsx#BarSeries\"] = { docgenInfo: BarSeries.__docgenInfo, name: \"BarSeries\", path: \"src/specs/bar_series.tsx#BarSeries\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { inject } from 'mobx-react';\nimport { PureComponent } from 'react';\nimport { AreaSeriesSpec } from '../lib/series/specs';\nimport { getGroupId } from '../lib/utils/ids';\nimport { ScaleType } from '../lib/utils/scales/scales';\nimport { SpecProps } from './specs_parser';\n\ntype AreaSpecProps = SpecProps & AreaSeriesSpec;\n\nexport class AreaSeriesSpecComponent extends PureComponent<AreaSpecProps> {\n  static defaultProps: Partial<AreaSpecProps> = {\n    seriesType: 'area',\n    groupId: getGroupId('__global__'),\n    xScaleType: ScaleType.Ordinal,\n    yScaleType: ScaleType.Linear,\n    xAccessor: 'x',\n    yAccessors: ['y'],\n    yScaleToDataExtent: false,\n    hideInLegend: false,\n  };\n  componentDidMount() {\n    const { chartStore, children, ...config } = this.props;\n    chartStore!.addSeriesSpec({ ...config });\n  }\n  componentDidUpdate(prevProps: AreaSpecProps) {\n    const { chartStore, children, ...config } = this.props;\n    chartStore!.addSeriesSpec({ ...config });\n    if (prevProps.id !== this.props.id) {\n      chartStore!.removeSeriesSpec(prevProps.id);\n    }\n  }\n  componentWillUnmount() {\n    const { chartStore, id } = this.props;\n    chartStore!.removeSeriesSpec(id);\n  }\n  render() {\n    return null;\n  }\n}\n\nexport const AreaSeries = inject('chartStore')(AreaSeriesSpecComponent);\ntry {\n    // @ts-ignore\n    AreaSeriesSpecComponent.displayName = \"AreaSeriesSpecComponent\";\n    // @ts-ignore\n    AreaSeriesSpecComponent.__docgenInfo = { \"description\": \"\", \"displayName\": \"AreaSeriesSpecComponent\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/specs/area_series.tsx#AreaSeriesSpecComponent\"] = { docgenInfo: AreaSeriesSpecComponent.__docgenInfo, name: \"AreaSeriesSpecComponent\", path: \"src/specs/area_series.tsx#AreaSeriesSpecComponent\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    AreaSeries.displayName = \"AreaSeries\";\n    // @ts-ignore\n    AreaSeries.__docgenInfo = { \"description\": \"\", \"displayName\": \"AreaSeries\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/specs/area_series.tsx#AreaSeries\"] = { docgenInfo: AreaSeries.__docgenInfo, name: \"AreaSeries\", path: \"src/specs/area_series.tsx#AreaSeries\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { scaleBand, scaleQuantize, ScaleQuantize } from 'd3-scale';\nimport { clamp } from '../commons';\nimport { ScaleType } from './scales';\nimport { Scale } from './scales';\n\nexport class ScaleBand implements Scale {\n  readonly bandwidth: number;\n  readonly step: number;\n  readonly type: ScaleType;\n  readonly domain: any[];\n  readonly range: number[];\n  readonly isInverted: boolean;\n  readonly invertedScale: ScaleQuantize<number>;\n  readonly minInterval: number;\n  readonly barsPadding: number;\n  private readonly d3Scale: any;\n\n  constructor(\n    domain: any[],\n    range: [number, number],\n    overrideBandwidth?: number,\n    /**\n     * The proportion of the range that is reserved for blank space between bands\n     * A number between 0 and 1.\n     * @default 0\n     */\n    barsPadding: number = 0,\n  ) {\n    this.type = ScaleType.Ordinal;\n    this.d3Scale = scaleBand();\n    this.d3Scale.domain(domain);\n    this.d3Scale.range(range);\n    const safeBarPadding = clamp(barsPadding, 0, 1);\n    this.barsPadding = safeBarPadding;\n    this.d3Scale.paddingInner(safeBarPadding);\n    this.d3Scale.paddingOuter(safeBarPadding / 2);\n    this.bandwidth = this.d3Scale.bandwidth() || 0;\n\n    this.step = this.d3Scale.step();\n    this.domain = this.d3Scale.domain();\n    this.range = range.slice();\n    if (overrideBandwidth) {\n      this.bandwidth = overrideBandwidth * (1 - safeBarPadding);\n    }\n    // TO FIX: we are assiming that it's ordered\n    this.isInverted = this.domain[0] > this.domain[1];\n    this.invertedScale = scaleQuantize()\n      .domain(range)\n      .range(this.domain);\n    this.minInterval = 0;\n  }\n\n  scale(value: any) {\n    return this.d3Scale(value);\n  }\n\n  ticks() {\n    return this.domain;\n  }\n  invert(value: any) {\n    return this.invertedScale(value);\n  }\n  invertWithStep(value: any) {\n    return this.invertedScale(value);\n  }\n}\n\nexport function isOrdinalScale(scale: Scale): scale is ScaleBand {\n  return scale.type === ScaleType.Ordinal;\n}\ntry {\n    // @ts-ignore\n    isOrdinalScale.displayName = \"isOrdinalScale\";\n    // @ts-ignore\n    isOrdinalScale.__docgenInfo = { \"description\": \"\", \"displayName\": \"isOrdinalScale\", \"props\": { \"domain\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"domain\", \"required\": true, \"type\": { \"name\": \"any[]\" } }, \"range\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"range\", \"required\": true, \"type\": { \"name\": \"number[]\" } }, \"ticks\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"ticks\", \"required\": true, \"type\": { \"name\": \"() => any[]\" } }, \"scale\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"scale\", \"required\": true, \"type\": { \"name\": \"(value: any) => number\" } }, \"invert\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"invert\", \"required\": true, \"type\": { \"name\": \"(value: number) => any\" } }, \"invertWithStep\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"invertWithStep\", \"required\": true, \"type\": { \"name\": \"(value: number, data: any[]) => any\" } }, \"bandwidth\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"bandwidth\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"minInterval\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"minInterval\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"type\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"type\", \"required\": true, \"type\": { \"name\": \"ScaleType\" } }, \"isInverted\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isInverted\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"barsPadding\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"barsPadding\", \"required\": true, \"type\": { \"name\": \"number\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/utils/scales/scale_band.ts#isOrdinalScale\"] = { docgenInfo: isOrdinalScale.__docgenInfo, name: \"isOrdinalScale\", path: \"src/lib/utils/scales/scale_band.ts#isOrdinalScale\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { isCompleteBound, isLowerBound, isUpperBound } from '../../axes/axis_utils';\nimport { compareByValueAsc, identity } from '../../utils/commons';\nimport { computeContinuousDataDomain, computeOrdinalDataDomain, Domain } from '../../utils/domain';\nimport { ScaleType } from '../../utils/scales/scales';\nimport { BasicSeriesSpec, DomainRange } from '../specs';\nimport { BaseDomain } from './domain';\n\nexport type XDomain = BaseDomain & {\n  type: 'xDomain';\n  /* the minimum interval of the scale if not-ordinal band-scale*/\n  minInterval: number;\n  /** if x domain is time, we should also specify the timezone */\n  timeZone?: string;\n};\n\n/**\n * Merge X domain value between a set of chart specification.\n */\nexport function mergeXDomain(\n  specs: Array<Pick<BasicSeriesSpec, 'seriesType' | 'xScaleType'>>,\n  xValues: Set<any>,\n  xDomain?: DomainRange | Domain,\n): XDomain {\n  const mainXScaleType = convertXScaleTypes(specs);\n  if (!mainXScaleType) {\n    throw new Error('Cannot merge the domain. Missing X scale types');\n  }\n\n  const values = [...xValues.values()];\n  let seriesXComputedDomains;\n  let minInterval = 0;\n  if (mainXScaleType.scaleType === ScaleType.Ordinal) {\n    seriesXComputedDomains = computeOrdinalDataDomain(values, identity, false, true);\n    if (xDomain) {\n      if (Array.isArray(xDomain)) {\n        seriesXComputedDomains = xDomain;\n      } else {\n        throw new Error(\n          'xDomain for ordinal scale should be an array of values, not a DomainRange object',\n        );\n      }\n    }\n  } else {\n    seriesXComputedDomains = computeContinuousDataDomain(values, identity, true);\n    if (xDomain) {\n      if (!Array.isArray(xDomain)) {\n        const [computedDomainMin, computedDomainMax] = seriesXComputedDomains;\n\n        if (isCompleteBound(xDomain)) {\n          if (xDomain.min > xDomain.max) {\n            throw new Error('custom xDomain is invalid, min is greater than max');\n          }\n\n          seriesXComputedDomains = [xDomain.min, xDomain.max];\n        } else if (isLowerBound(xDomain)) {\n          if (xDomain.min > computedDomainMax) {\n            throw new Error('custom xDomain is invalid, custom min is greater than computed max');\n          }\n\n          seriesXComputedDomains = [xDomain.min, computedDomainMax];\n        } else if (isUpperBound(xDomain)) {\n          if (computedDomainMin > xDomain.max) {\n            throw new Error('custom xDomain is invalid, computed min is greater than custom max');\n          }\n\n          seriesXComputedDomains = [computedDomainMin, xDomain.max];\n        }\n      } else {\n        throw new Error(\n          'xDomain for continuous scale should be a DomainRange object, not an array',\n        );\n      }\n    }\n    minInterval = findMinInterval(values);\n  }\n\n  return {\n    type: 'xDomain',\n    scaleType: mainXScaleType.scaleType,\n    isBandScale: mainXScaleType.isBandScale,\n    domain: seriesXComputedDomains,\n    minInterval,\n    timeZone: mainXScaleType.timeZone,\n  };\n}\n\n/**\n * Find the minimum interval between xValues.\n * Default to 0 if an empty array, 1 if one item array\n */\nexport function findMinInterval(xValues: number[]): number {\n  const valuesLength = xValues.length;\n  if (valuesLength <= 0) {\n    return 0;\n  }\n  if (valuesLength === 1) {\n    return 1;\n  }\n  const sortedValues = xValues.slice().sort(compareByValueAsc);\n  let i;\n  let minInterval = Math.abs(sortedValues[1] - sortedValues[0]);\n  for (i = 1; i < valuesLength - 1; i++) {\n    const current = sortedValues[i];\n    const next = sortedValues[i + 1];\n    const interval = Math.abs(next - current);\n    minInterval = Math.min(minInterval, interval);\n  }\n  return minInterval;\n}\n\n/**\n * Convert the scale types of a set of specification to a generic one.\n * If there is at least one bar series type, than the response will specity\n * that the coerched scale is a `scaleBand` (each point needs to have a surrounding empty\n * space to draw the bar width).\n * If there are multiple continuous scale types, is coerched to linear.\n * If there are at least one Ordinal scale type, is coerched to ordinal.\n * If none of the above, than coerch to the specified scale.\n * @returns {ChartScaleType}\n */\nexport function convertXScaleTypes(\n  specs: Array<Pick<BasicSeriesSpec, 'seriesType' | 'xScaleType' | 'timeZone'>>,\n): {\n  scaleType: ScaleType;\n  isBandScale: boolean;\n  timeZone?: string;\n} | null {\n  const seriesTypes = new Set<string>();\n  const scaleTypes = new Set<ScaleType>();\n  const timeZones = new Set<string>();\n  specs.forEach((spec) => {\n    seriesTypes.add(spec.seriesType);\n    scaleTypes.add(spec.xScaleType);\n    if (spec.timeZone) {\n      timeZones.add(spec.timeZone.toLowerCase());\n    }\n  });\n  if (specs.length === 0 || seriesTypes.size === 0 || scaleTypes.size === 0) {\n    return null;\n  }\n  const isBandScale = seriesTypes.has('bar');\n  if (scaleTypes.size === 1) {\n    const scaleType = scaleTypes.values().next().value;\n    let timeZone: string | undefined;\n    if (scaleType === ScaleType.Time) {\n      if (timeZones.size > 1) {\n        timeZone = 'utc';\n      } else {\n        timeZone = timeZones.values().next().value;\n      }\n    }\n    return { scaleType, isBandScale, timeZone };\n  }\n\n  if (scaleTypes.size > 1 && scaleTypes.has(ScaleType.Ordinal)) {\n    return { scaleType: ScaleType.Ordinal, isBandScale };\n  }\n  return { scaleType: ScaleType.Linear, isBandScale };\n}\ntry {\n    // @ts-ignore\n    mergeXDomain.displayName = \"mergeXDomain\";\n    // @ts-ignore\n    mergeXDomain.__docgenInfo = { \"description\": \"Merge X domain value between a set of chart specification.\", \"displayName\": \"mergeXDomain\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/series/domains/x_domain.ts#mergeXDomain\"] = { docgenInfo: mergeXDomain.__docgenInfo, name: \"mergeXDomain\", path: \"src/lib/series/domains/x_domain.ts#mergeXDomain\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    findMinInterval.displayName = \"findMinInterval\";\n    // @ts-ignore\n    findMinInterval.__docgenInfo = { \"description\": \"Find the minimum interval between xValues.\\nDefault to 0 if an empty array, 1 if one item array\", \"displayName\": \"findMinInterval\", \"props\": { \"length\": { \"defaultValue\": null, \"description\": \"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.\", \"name\": \"length\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of an array.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.\", \"name\": \"toLocaleString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"pop\": { \"defaultValue\": null, \"description\": \"Removes the last element from an array and returns it.\", \"name\": \"pop\", \"required\": true, \"type\": { \"name\": \"() => number\" } }, \"push\": { \"defaultValue\": null, \"description\": \"Appends new elements to an array, and returns the new length of the array.\\n@param items New elements of the Array.\", \"name\": \"push\", \"required\": true, \"type\": { \"name\": \"(...items: number[]) => number\" } }, \"concat\": { \"defaultValue\": null, \"description\": \"Combines two or more arrays.\\nCombines two or more arrays.\\n@param items Additional items to add to the end of array1.\\n@param items Additional items to add to the end of array1.\", \"name\": \"concat\", \"required\": true, \"type\": { \"name\": \"{ (...items: ConcatArray<number>[]): number[]; (...items: (number | ConcatArray<number>)[]): number[]; }\" } }, \"join\": { \"defaultValue\": null, \"description\": \"Adds all the elements of an array separated by the specified separator string.\\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.\", \"name\": \"join\", \"required\": true, \"type\": { \"name\": \"(separator?: string) => string\" } }, \"reverse\": { \"defaultValue\": null, \"description\": \"Reverses the elements in an Array.\", \"name\": \"reverse\", \"required\": true, \"type\": { \"name\": \"() => number[]\" } }, \"shift\": { \"defaultValue\": null, \"description\": \"Removes the first element from an array and returns it.\", \"name\": \"shift\", \"required\": true, \"type\": { \"name\": \"() => number\" } }, \"slice\": { \"defaultValue\": null, \"description\": \"Returns a section of an array.\\n@param start The beginning of the specified portion of the array.\\n@param end The end of the specified portion of the array.\", \"name\": \"slice\", \"required\": true, \"type\": { \"name\": \"(start?: number, end?: number) => number[]\" } }, \"sort\": { \"defaultValue\": null, \"description\": \"Sorts an array.\\n@param compareFn The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, ASCII character order.\", \"name\": \"sort\", \"required\": true, \"type\": { \"name\": \"(compareFn?: (a: number, b: number) => number) => number[]\" } }, \"splice\": { \"defaultValue\": null, \"description\": \"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param items Elements to insert into the array in place of the deleted elements.\", \"name\": \"splice\", \"required\": true, \"type\": { \"name\": \"{ (start: number, deleteCount?: number): number[]; (start: number, deleteCount: number, ...items: number[]): number[]; }\" } }, \"unshift\": { \"defaultValue\": null, \"description\": \"Inserts new elements at the start of an array.\\n@param items Elements to insert at the start of the Array.\", \"name\": \"unshift\", \"required\": true, \"type\": { \"name\": \"(...items: number[]) => number\" } }, \"indexOf\": { \"defaultValue\": null, \"description\": \"Returns the index of the first occurrence of a value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\", \"name\": \"indexOf\", \"required\": true, \"type\": { \"name\": \"(searchElement: number, fromIndex?: number) => number\" } }, \"lastIndexOf\": { \"defaultValue\": null, \"description\": \"Returns the index of the last occurrence of a specified value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.\", \"name\": \"lastIndexOf\", \"required\": true, \"type\": { \"name\": \"(searchElement: number, fromIndex?: number) => number\" } }, \"every\": { \"defaultValue\": null, \"description\": \"Determines whether all the members of an array satisfy the specified test.\\n@param callbackfn A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"every\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: number, index: number, array: number[]) => boolean, thisArg?: any) => boolean\" } }, \"some\": { \"defaultValue\": null, \"description\": \"Determines whether the specified callback function returns true for any element of an array.\\n@param callbackfn A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"some\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: number, index: number, array: number[]) => boolean, thisArg?: any) => boolean\" } }, \"forEach\": { \"defaultValue\": null, \"description\": \"Performs the specified action for each element in an array.\\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"forEach\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: number, index: number, array: number[]) => void, thisArg?: any) => void\" } }, \"map\": { \"defaultValue\": null, \"description\": \"Calls a defined callback function on each element of an array, and returns an array that contains the results.\\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"map\", \"required\": true, \"type\": { \"name\": \"<U>(callbackfn: (value: number, index: number, array: number[]) => U, thisArg?: any) => U[]\" } }, \"filter\": { \"defaultValue\": null, \"description\": \"Returns the elements of an array that meet the condition specified in a callback function.\\nReturns the elements of an array that meet the condition specified in a callback function.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"filter\", \"required\": true, \"type\": { \"name\": \"{ <S extends number>(callbackfn: (value: number, index: number, array: number[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: number, index: number, array: number[]) => any, thisArg?: any): number[]; }\" } }, \"reduce\": { \"defaultValue\": null, \"description\": \"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\", \"name\": \"reduce\", \"required\": true, \"type\": { \"name\": \"{ (callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: number[]) => number): number; (callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: number[]) => number, initialValue: number): number; <U>(callbackfn: (previousValue: U, currentValue: number, ...\" } }, \"reduceRight\": { \"defaultValue\": null, \"description\": \"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\", \"name\": \"reduceRight\", \"required\": true, \"type\": { \"name\": \"{ (callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: number[]) => number): number; (callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: number[]) => number, initialValue: number): number; <U>(callbackfn: (previousValue: U, currentValue: number, ...\" } }, \"find\": { \"defaultValue\": null, \"description\": \"Returns the value of the first element in the array where predicate is true, and undefined\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\rorder, until it finds one where predicate returns true. If such an element is found, find\\rimmediately returns that element value. Otherwise, find returns undefined.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\rpredicate. If it is not provided, undefined is used instead.\", \"name\": \"find\", \"required\": true, \"type\": { \"name\": \"{ <S extends number>(predicate: (this: void, value: number, index: number, obj: number[]) => value is S, thisArg?: any): S; (predicate: (value: number, index: number, obj: number[]) => boolean, thisArg?: any): number; }\" } }, \"findIndex\": { \"defaultValue\": null, \"description\": \"Returns the index of the first element in the array where predicate is true, and -1\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\rorder, until it finds one where predicate returns true. If such an element is found,\\rfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\rpredicate. If it is not provided, undefined is used instead.\", \"name\": \"findIndex\", \"required\": true, \"type\": { \"name\": \"(predicate: (value: number, index: number, obj: number[]) => boolean, thisArg?: any) => number\" } }, \"fill\": { \"defaultValue\": null, \"description\": \"Returns the this object after filling the section identified by start and end with value\\n@param value value to fill array section with\\n@param start index to start filling the array at. If start is negative, it is treated as\\rlength+start where length is the length of the array.\\n@param end index to stop filling the array at. If end is negative, it is treated as\\rlength+end.\", \"name\": \"fill\", \"required\": true, \"type\": { \"name\": \"(value: number, start?: number, end?: number) => number[]\" } }, \"copyWithin\": { \"defaultValue\": null, \"description\": \"Returns the this object after copying a section of the array identified by start and end\\nto the same array starting at position target\\n@param target If target is negative, it is treated as length+target where length is the\\rlength of the array.\\n@param start If start is negative, it is treated as length+start. If end is negative, it\\ris treated as length+end.\\n@param end If not specified, length of the this object is used as its default value.\", \"name\": \"copyWithin\", \"required\": true, \"type\": { \"name\": \"(target: number, start: number, end?: number) => number[]\" } }, \"__@iterator\": { \"defaultValue\": null, \"description\": \"Iterator\", \"name\": \"__@iterator\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<number>\" } }, \"entries\": { \"defaultValue\": null, \"description\": \"Returns an iterable of key, value pairs for every entry in the array\", \"name\": \"entries\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<[number, number]>\" } }, \"keys\": { \"defaultValue\": null, \"description\": \"Returns an iterable of keys in the array\", \"name\": \"keys\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<number>\" } }, \"values\": { \"defaultValue\": null, \"description\": \"Returns an iterable of values in the array\", \"name\": \"values\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<number>\" } }, \"__@unscopables\": { \"defaultValue\": null, \"description\": \"Returns an object whose properties have the value 'true'\\nwhen they will be absent when used in a 'with' statement.\", \"name\": \"__@unscopables\", \"required\": true, \"type\": { \"name\": \"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }\" } }, \"includes\": { \"defaultValue\": null, \"description\": \"Determines whether an array includes a certain element, returning true or false as appropriate.\\n@param searchElement The element to search for.\\n@param fromIndex The position in this array at which to begin searching for searchElement.\", \"name\": \"includes\", \"required\": true, \"type\": { \"name\": \"(searchElement: number, fromIndex?: number) => boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/series/domains/x_domain.ts#findMinInterval\"] = { docgenInfo: findMinInterval.__docgenInfo, name: \"findMinInterval\", path: \"src/lib/series/domains/x_domain.ts#findMinInterval\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    convertXScaleTypes.displayName = \"convertXScaleTypes\";\n    // @ts-ignore\n    convertXScaleTypes.__docgenInfo = { \"description\": \"Convert the scale types of a set of specification to a generic one.\\nIf there is at least one bar series type, than the response will specity\\nthat the coerched scale is a `scaleBand` (each point needs to have a surrounding empty\\nspace to draw the bar width).\\nIf there are multiple continuous scale types, is coerched to linear.\\nIf there are at least one Ordinal scale type, is coerched to ordinal.\\nIf none of the above, than coerch to the specified scale.\\n@returns\", \"displayName\": \"convertXScaleTypes\", \"props\": { \"length\": { \"defaultValue\": null, \"description\": \"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.\", \"name\": \"length\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of an array.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.\", \"name\": \"toLocaleString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"pop\": { \"defaultValue\": null, \"description\": \"Removes the last element from an array and returns it.\", \"name\": \"pop\", \"required\": true, \"type\": { \"name\": \"() => Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">\" } }, \"push\": { \"defaultValue\": null, \"description\": \"Appends new elements to an array, and returns the new length of the array.\\n@param items New elements of the Array.\", \"name\": \"push\", \"required\": true, \"type\": { \"name\": \"(...items: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">[]) => number\" } }, \"concat\": { \"defaultValue\": null, \"description\": \"Combines two or more arrays.\\nCombines two or more arrays.\\n@param items Additional items to add to the end of array1.\\n@param items Additional items to add to the end of array1.\", \"name\": \"concat\", \"required\": true, \"type\": { \"name\": \"{ (...items: ConcatArray<Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">>[]): Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">[]; (...items: (Pick<BasicSeriesSpec, \\\"seriesType\\\" | ... 1 more ... | \\\"timeZone\\\"> | ConcatArray<...>)[]): Pick<...>[]; }\" } }, \"join\": { \"defaultValue\": null, \"description\": \"Adds all the elements of an array separated by the specified separator string.\\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.\", \"name\": \"join\", \"required\": true, \"type\": { \"name\": \"(separator?: string) => string\" } }, \"reverse\": { \"defaultValue\": null, \"description\": \"Reverses the elements in an Array.\", \"name\": \"reverse\", \"required\": true, \"type\": { \"name\": \"() => Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">[]\" } }, \"shift\": { \"defaultValue\": null, \"description\": \"Removes the first element from an array and returns it.\", \"name\": \"shift\", \"required\": true, \"type\": { \"name\": \"() => Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">\" } }, \"slice\": { \"defaultValue\": null, \"description\": \"Returns a section of an array.\\n@param start The beginning of the specified portion of the array.\\n@param end The end of the specified portion of the array.\", \"name\": \"slice\", \"required\": true, \"type\": { \"name\": \"(start?: number, end?: number) => Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">[]\" } }, \"sort\": { \"defaultValue\": null, \"description\": \"Sorts an array.\\n@param compareFn The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, ASCII character order.\", \"name\": \"sort\", \"required\": true, \"type\": { \"name\": \"(compareFn?: (a: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">, b: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">) => number) => Pick<BasicSeriesSpec, \\\"seriesType\\\" | ... 1 more ... | \\\"timeZone\\\">[]\" } }, \"splice\": { \"defaultValue\": null, \"description\": \"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param items Elements to insert into the array in place of the deleted elements.\", \"name\": \"splice\", \"required\": true, \"type\": { \"name\": \"{ (start: number, deleteCount?: number): Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">[]; (start: number, deleteCount: number, ...items: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">[]): Pick<...>[]; }\" } }, \"unshift\": { \"defaultValue\": null, \"description\": \"Inserts new elements at the start of an array.\\n@param items Elements to insert at the start of the Array.\", \"name\": \"unshift\", \"required\": true, \"type\": { \"name\": \"(...items: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">[]) => number\" } }, \"indexOf\": { \"defaultValue\": null, \"description\": \"Returns the index of the first occurrence of a value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\", \"name\": \"indexOf\", \"required\": true, \"type\": { \"name\": \"(searchElement: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">, fromIndex?: number) => number\" } }, \"lastIndexOf\": { \"defaultValue\": null, \"description\": \"Returns the index of the last occurrence of a specified value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.\", \"name\": \"lastIndexOf\", \"required\": true, \"type\": { \"name\": \"(searchElement: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">, fromIndex?: number) => number\" } }, \"every\": { \"defaultValue\": null, \"description\": \"Determines whether all the members of an array satisfy the specified test.\\n@param callbackfn A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"every\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">, index: number, array: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">[]) => boolean, thisArg?: any) => boolean\" } }, \"some\": { \"defaultValue\": null, \"description\": \"Determines whether the specified callback function returns true for any element of an array.\\n@param callbackfn A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"some\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">, index: number, array: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">[]) => boolean, thisArg?: any) => boolean\" } }, \"forEach\": { \"defaultValue\": null, \"description\": \"Performs the specified action for each element in an array.\\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"forEach\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">, index: number, array: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">[]) => void, thisArg?: any) => void\" } }, \"map\": { \"defaultValue\": null, \"description\": \"Calls a defined callback function on each element of an array, and returns an array that contains the results.\\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"map\", \"required\": true, \"type\": { \"name\": \"<U>(callbackfn: (value: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">, index: number, array: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">[]) => U, thisArg?: any) => U[]\" } }, \"filter\": { \"defaultValue\": null, \"description\": \"Returns the elements of an array that meet the condition specified in a callback function.\\nReturns the elements of an array that meet the condition specified in a callback function.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"filter\", \"required\": true, \"type\": { \"name\": \"{ <S extends Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">>(callbackfn: (value: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">, index: number, array: Pick<BasicSeriesSpec, \\\"seriesType\\\" | ... 1 more ... | \\\"timeZone\\\">[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: Pick<....\" } }, \"reduce\": { \"defaultValue\": null, \"description\": \"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\", \"name\": \"reduce\", \"required\": true, \"type\": { \"name\": \"{ (callbackfn: (previousValue: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">, currentValue: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">, currentIndex: number, array: Pick<...>[]) => Pick<...>): Pick<...>; (callbackfn: (previousValue: Pick<...>, currentValue: Pick<...>, currentIn...\" } }, \"reduceRight\": { \"defaultValue\": null, \"description\": \"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\", \"name\": \"reduceRight\", \"required\": true, \"type\": { \"name\": \"{ (callbackfn: (previousValue: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">, currentValue: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">, currentIndex: number, array: Pick<...>[]) => Pick<...>): Pick<...>; (callbackfn: (previousValue: Pick<...>, currentValue: Pick<...>, currentIn...\" } }, \"find\": { \"defaultValue\": null, \"description\": \"Returns the value of the first element in the array where predicate is true, and undefined\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\rorder, until it finds one where predicate returns true. If such an element is found, find\\rimmediately returns that element value. Otherwise, find returns undefined.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\rpredicate. If it is not provided, undefined is used instead.\", \"name\": \"find\", \"required\": true, \"type\": { \"name\": \"{ <S extends Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">>(predicate: (this: void, value: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">, index: number, obj: Pick<BasicSeriesSpec, \\\"seriesType\\\" | ... 1 more ... | \\\"timeZone\\\">[]) => value is S, thisArg?: any): S; (predicate: (value: ...\" } }, \"findIndex\": { \"defaultValue\": null, \"description\": \"Returns the index of the first element in the array where predicate is true, and -1\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\rorder, until it finds one where predicate returns true. If such an element is found,\\rfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\rpredicate. If it is not provided, undefined is used instead.\", \"name\": \"findIndex\", \"required\": true, \"type\": { \"name\": \"(predicate: (value: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">, index: number, obj: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">[]) => boolean, thisArg?: any) => number\" } }, \"fill\": { \"defaultValue\": null, \"description\": \"Returns the this object after filling the section identified by start and end with value\\n@param value value to fill array section with\\n@param start index to start filling the array at. If start is negative, it is treated as\\rlength+start where length is the length of the array.\\n@param end index to stop filling the array at. If end is negative, it is treated as\\rlength+end.\", \"name\": \"fill\", \"required\": true, \"type\": { \"name\": \"(value: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">, start?: number, end?: number) => Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">[]\" } }, \"copyWithin\": { \"defaultValue\": null, \"description\": \"Returns the this object after copying a section of the array identified by start and end\\nto the same array starting at position target\\n@param target If target is negative, it is treated as length+target where length is the\\rlength of the array.\\n@param start If start is negative, it is treated as length+start. If end is negative, it\\ris treated as length+end.\\n@param end If not specified, length of the this object is used as its default value.\", \"name\": \"copyWithin\", \"required\": true, \"type\": { \"name\": \"(target: number, start: number, end?: number) => Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">[]\" } }, \"__@iterator\": { \"defaultValue\": null, \"description\": \"Iterator\", \"name\": \"__@iterator\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">>\" } }, \"entries\": { \"defaultValue\": null, \"description\": \"Returns an iterable of key, value pairs for every entry in the array\", \"name\": \"entries\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<[number, Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">]>\" } }, \"keys\": { \"defaultValue\": null, \"description\": \"Returns an iterable of keys in the array\", \"name\": \"keys\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<number>\" } }, \"values\": { \"defaultValue\": null, \"description\": \"Returns an iterable of values in the array\", \"name\": \"values\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">>\" } }, \"__@unscopables\": { \"defaultValue\": null, \"description\": \"Returns an object whose properties have the value 'true'\\nwhen they will be absent when used in a 'with' statement.\", \"name\": \"__@unscopables\", \"required\": true, \"type\": { \"name\": \"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }\" } }, \"includes\": { \"defaultValue\": null, \"description\": \"Determines whether an array includes a certain element, returning true or false as appropriate.\\n@param searchElement The element to search for.\\n@param fromIndex The position in this array at which to begin searching for searchElement.\", \"name\": \"includes\", \"required\": true, \"type\": { \"name\": \"(searchElement: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"xScaleType\\\" | \\\"timeZone\\\">, fromIndex?: number) => boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/series/domains/x_domain.ts#convertXScaleTypes\"] = { docgenInfo: convertXScaleTypes.__docgenInfo, name: \"convertXScaleTypes\", path: \"src/lib/series/domains/x_domain.ts#convertXScaleTypes\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { DataSeries, DataSeriesDatum, RawDataSeries } from './series';\n\nexport function formatNonStackedDataSeriesValues(\n  dataseries: RawDataSeries[],\n  scaleToExtent: boolean,\n): DataSeries[] {\n  const len = dataseries.length;\n  let i;\n  const formattedValues: DataSeries[] = [];\n  for (i = 0; i < len; i++) {\n    const formattedValue = formatNonStackedDataValues(dataseries[i], scaleToExtent);\n    formattedValues.push(formattedValue);\n  }\n  return formattedValues;\n}\n\nexport function formatNonStackedDataValues(\n  dataSeries: RawDataSeries,\n  scaleToExtent: boolean,\n): DataSeries {\n  const len = dataSeries.data.length;\n  let i;\n  const formattedValues: DataSeries = {\n    key: dataSeries.key,\n    specId: dataSeries.specId,\n    seriesColorKey: dataSeries.seriesColorKey,\n    data: [],\n  };\n  for (i = 0; i < len; i++) {\n    const data = dataSeries.data[i];\n    const { x, y1, datum } = data;\n    let y0: number | null;\n    if (y1 === null) {\n      y0 = null;\n    } else {\n      if (scaleToExtent) {\n        y0 = data.y0 ? data.y0 : y1;\n      } else {\n        y0 = data.y0 ? data.y0 : 0;\n      }\n    }\n\n    const formattedValue: DataSeriesDatum = {\n      x,\n      y1,\n      y0,\n      initialY1: y1,\n      initialY0: data.y0 == null || y1 === null ? null : data.y0,\n      datum,\n    };\n    formattedValues.data.push(formattedValue);\n  }\n  return formattedValues;\n}\n","import { DataSeries, DataSeriesDatum, RawDataSeries } from './series';\n\n/**\n * Map each y value from a RawDataSeries on it's specific x value into,\n * ordering the stack based on the dataseries index.\n * @param dataseries\n */\nexport function getYValueStackMap(dataseries: RawDataSeries[]): Map<any, number[]> {\n  const stackMap = new Map<any, number[]>();\n  dataseries.forEach((ds, index) => {\n    ds.data.forEach((datum) => {\n      const stack = stackMap.get(datum.x) || new Array(dataseries.length).fill(0);\n      stack[index] = datum.y1;\n      stackMap.set(datum.x, stack);\n    });\n  });\n  return stackMap;\n}\n\n/**\n * For each key of the yValueStackMap, it stacks the values one after the other,\n * summing the previous value to the next one.\n * @param yValueStackMap\n * @param scaleToExtent\n */\nexport function computeYStackedMapValues(\n  yValueStackMap: Map<any, number[]>,\n  scaleToExtent: boolean,\n): Map<any, number[]> {\n  const stackedValues = new Map<any, number[]>();\n\n  yValueStackMap.forEach((yStackArray, xValue) => {\n    const stackArray = yStackArray.reduce(\n      (stackedValue, currentValue, index) => {\n        if (stackedValue.length === 0) {\n          if (scaleToExtent) {\n            return [currentValue, currentValue];\n          }\n          return [0, currentValue];\n        }\n        return [...stackedValue, stackedValue[index] + currentValue];\n      },\n      [] as number[],\n    );\n    stackedValues.set(xValue, stackArray);\n  });\n  return stackedValues;\n}\n\nexport function formatStackedDataSeriesValues(\n  dataseries: RawDataSeries[],\n  scaleToExtent: boolean,\n): DataSeries[] {\n  const yValueStackMap = getYValueStackMap(dataseries);\n\n  const stackedValues = computeYStackedMapValues(yValueStackMap, scaleToExtent);\n\n  const stackedDataSeries: DataSeries[] = dataseries.map((ds, seriesIndex) => {\n    const newData: DataSeriesDatum[] = [];\n    ds.data.forEach((data) => {\n      const { x, y1, datum } = data;\n      if (stackedValues.get(x) === undefined) {\n        return;\n      }\n      let computedY0: number | null;\n      if (scaleToExtent) {\n        computedY0 = data.y0 ? data.y0 : y1;\n      } else {\n        computedY0 = data.y0 ? data.y0 : 0;\n      }\n      const initialY0 = data.y0 == null ? null : data.y0;\n      if (seriesIndex === 0) {\n        newData.push({\n          x,\n          y1,\n          y0: computedY0,\n          initialY1: y1,\n          initialY0,\n          datum,\n        });\n      } else {\n        const stack = stackedValues.get(x);\n        if (!stack) {\n          return;\n        }\n        const stackY = stack[seriesIndex];\n        const stackedY1 = y1 !== null ? stackY + y1 : null;\n        let stackedY0: number | null = data.y0 == null ? stackY : stackY + data.y0;\n        // configure null y0 if y1 is null\n        // it's semantically right to say y0 is null if y1 is null\n        if (stackedY1 === null) {\n          stackedY0 = null;\n        }\n        newData.push({\n          x,\n          y1: stackedY1,\n          y0: stackedY0,\n          initialY1: y1,\n          initialY0,\n          datum,\n        });\n      }\n    });\n    return {\n      specId: ds.specId,\n      key: ds.key,\n      seriesColorKey: ds.seriesColorKey,\n      data: newData,\n    };\n  });\n\n  return stackedDataSeries;\n}\ntry {\n    // @ts-ignore\n    getYValueStackMap.displayName = \"getYValueStackMap\";\n    // @ts-ignore\n    getYValueStackMap.__docgenInfo = { \"description\": \"Map each y value from a RawDataSeries on it's specific x value into,\\nordering the stack based on the dataseries index.\\n@param dataseries\", \"displayName\": \"getYValueStackMap\", \"props\": { \"length\": { \"defaultValue\": null, \"description\": \"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.\", \"name\": \"length\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of an array.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.\", \"name\": \"toLocaleString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"pop\": { \"defaultValue\": null, \"description\": \"Removes the last element from an array and returns it.\", \"name\": \"pop\", \"required\": true, \"type\": { \"name\": \"() => RawDataSeries\" } }, \"push\": { \"defaultValue\": null, \"description\": \"Appends new elements to an array, and returns the new length of the array.\\n@param items New elements of the Array.\", \"name\": \"push\", \"required\": true, \"type\": { \"name\": \"(...items: RawDataSeries[]) => number\" } }, \"concat\": { \"defaultValue\": null, \"description\": \"Combines two or more arrays.\\nCombines two or more arrays.\\n@param items Additional items to add to the end of array1.\\n@param items Additional items to add to the end of array1.\", \"name\": \"concat\", \"required\": true, \"type\": { \"name\": \"{ (...items: ConcatArray<RawDataSeries>[]): RawDataSeries[]; (...items: (RawDataSeries | ConcatArray<RawDataSeries>)[]): RawDataSeries[]; }\" } }, \"join\": { \"defaultValue\": null, \"description\": \"Adds all the elements of an array separated by the specified separator string.\\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.\", \"name\": \"join\", \"required\": true, \"type\": { \"name\": \"(separator?: string) => string\" } }, \"reverse\": { \"defaultValue\": null, \"description\": \"Reverses the elements in an Array.\", \"name\": \"reverse\", \"required\": true, \"type\": { \"name\": \"() => RawDataSeries[]\" } }, \"shift\": { \"defaultValue\": null, \"description\": \"Removes the first element from an array and returns it.\", \"name\": \"shift\", \"required\": true, \"type\": { \"name\": \"() => RawDataSeries\" } }, \"slice\": { \"defaultValue\": null, \"description\": \"Returns a section of an array.\\n@param start The beginning of the specified portion of the array.\\n@param end The end of the specified portion of the array.\", \"name\": \"slice\", \"required\": true, \"type\": { \"name\": \"(start?: number, end?: number) => RawDataSeries[]\" } }, \"sort\": { \"defaultValue\": null, \"description\": \"Sorts an array.\\n@param compareFn The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, ASCII character order.\", \"name\": \"sort\", \"required\": true, \"type\": { \"name\": \"(compareFn?: (a: RawDataSeries, b: RawDataSeries) => number) => RawDataSeries[]\" } }, \"splice\": { \"defaultValue\": null, \"description\": \"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param items Elements to insert into the array in place of the deleted elements.\", \"name\": \"splice\", \"required\": true, \"type\": { \"name\": \"{ (start: number, deleteCount?: number): RawDataSeries[]; (start: number, deleteCount: number, ...items: RawDataSeries[]): RawDataSeries[]; }\" } }, \"unshift\": { \"defaultValue\": null, \"description\": \"Inserts new elements at the start of an array.\\n@param items Elements to insert at the start of the Array.\", \"name\": \"unshift\", \"required\": true, \"type\": { \"name\": \"(...items: RawDataSeries[]) => number\" } }, \"indexOf\": { \"defaultValue\": null, \"description\": \"Returns the index of the first occurrence of a value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\", \"name\": \"indexOf\", \"required\": true, \"type\": { \"name\": \"(searchElement: RawDataSeries, fromIndex?: number) => number\" } }, \"lastIndexOf\": { \"defaultValue\": null, \"description\": \"Returns the index of the last occurrence of a specified value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.\", \"name\": \"lastIndexOf\", \"required\": true, \"type\": { \"name\": \"(searchElement: RawDataSeries, fromIndex?: number) => number\" } }, \"every\": { \"defaultValue\": null, \"description\": \"Determines whether all the members of an array satisfy the specified test.\\n@param callbackfn A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"every\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: RawDataSeries, index: number, array: RawDataSeries[]) => boolean, thisArg?: any) => boolean\" } }, \"some\": { \"defaultValue\": null, \"description\": \"Determines whether the specified callback function returns true for any element of an array.\\n@param callbackfn A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"some\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: RawDataSeries, index: number, array: RawDataSeries[]) => boolean, thisArg?: any) => boolean\" } }, \"forEach\": { \"defaultValue\": null, \"description\": \"Performs the specified action for each element in an array.\\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"forEach\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: RawDataSeries, index: number, array: RawDataSeries[]) => void, thisArg?: any) => void\" } }, \"map\": { \"defaultValue\": null, \"description\": \"Calls a defined callback function on each element of an array, and returns an array that contains the results.\\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"map\", \"required\": true, \"type\": { \"name\": \"<U>(callbackfn: (value: RawDataSeries, index: number, array: RawDataSeries[]) => U, thisArg?: any) => U[]\" } }, \"filter\": { \"defaultValue\": null, \"description\": \"Returns the elements of an array that meet the condition specified in a callback function.\\nReturns the elements of an array that meet the condition specified in a callback function.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"filter\", \"required\": true, \"type\": { \"name\": \"{ <S extends RawDataSeries>(callbackfn: (value: RawDataSeries, index: number, array: RawDataSeries[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: RawDataSeries, index: number, array: RawDataSeries[]) => any, thisArg?: any): RawDataSeries[]; }\" } }, \"reduce\": { \"defaultValue\": null, \"description\": \"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\", \"name\": \"reduce\", \"required\": true, \"type\": { \"name\": \"{ (callbackfn: (previousValue: RawDataSeries, currentValue: RawDataSeries, currentIndex: number, array: RawDataSeries[]) => RawDataSeries): RawDataSeries; (callbackfn: (previousValue: RawDataSeries, currentValue: RawDataSeries, currentIndex: number, array: RawDataSeries[]) => RawDataSeries, initialValue: RawDataSeri...\" } }, \"reduceRight\": { \"defaultValue\": null, \"description\": \"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\", \"name\": \"reduceRight\", \"required\": true, \"type\": { \"name\": \"{ (callbackfn: (previousValue: RawDataSeries, currentValue: RawDataSeries, currentIndex: number, array: RawDataSeries[]) => RawDataSeries): RawDataSeries; (callbackfn: (previousValue: RawDataSeries, currentValue: RawDataSeries, currentIndex: number, array: RawDataSeries[]) => RawDataSeries, initialValue: RawDataSeri...\" } }, \"find\": { \"defaultValue\": null, \"description\": \"Returns the value of the first element in the array where predicate is true, and undefined\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\rorder, until it finds one where predicate returns true. If such an element is found, find\\rimmediately returns that element value. Otherwise, find returns undefined.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\rpredicate. If it is not provided, undefined is used instead.\", \"name\": \"find\", \"required\": true, \"type\": { \"name\": \"{ <S extends RawDataSeries>(predicate: (this: void, value: RawDataSeries, index: number, obj: RawDataSeries[]) => value is S, thisArg?: any): S; (predicate: (value: RawDataSeries, index: number, obj: RawDataSeries[]) => boolean, thisArg?: any): RawDataSeries; }\" } }, \"findIndex\": { \"defaultValue\": null, \"description\": \"Returns the index of the first element in the array where predicate is true, and -1\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\rorder, until it finds one where predicate returns true. If such an element is found,\\rfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\rpredicate. If it is not provided, undefined is used instead.\", \"name\": \"findIndex\", \"required\": true, \"type\": { \"name\": \"(predicate: (value: RawDataSeries, index: number, obj: RawDataSeries[]) => boolean, thisArg?: any) => number\" } }, \"fill\": { \"defaultValue\": null, \"description\": \"Returns the this object after filling the section identified by start and end with value\\n@param value value to fill array section with\\n@param start index to start filling the array at. If start is negative, it is treated as\\rlength+start where length is the length of the array.\\n@param end index to stop filling the array at. If end is negative, it is treated as\\rlength+end.\", \"name\": \"fill\", \"required\": true, \"type\": { \"name\": \"(value: RawDataSeries, start?: number, end?: number) => RawDataSeries[]\" } }, \"copyWithin\": { \"defaultValue\": null, \"description\": \"Returns the this object after copying a section of the array identified by start and end\\nto the same array starting at position target\\n@param target If target is negative, it is treated as length+target where length is the\\rlength of the array.\\n@param start If start is negative, it is treated as length+start. If end is negative, it\\ris treated as length+end.\\n@param end If not specified, length of the this object is used as its default value.\", \"name\": \"copyWithin\", \"required\": true, \"type\": { \"name\": \"(target: number, start: number, end?: number) => RawDataSeries[]\" } }, \"__@iterator\": { \"defaultValue\": null, \"description\": \"Iterator\", \"name\": \"__@iterator\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<RawDataSeries>\" } }, \"entries\": { \"defaultValue\": null, \"description\": \"Returns an iterable of key, value pairs for every entry in the array\", \"name\": \"entries\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<[number, RawDataSeries]>\" } }, \"keys\": { \"defaultValue\": null, \"description\": \"Returns an iterable of keys in the array\", \"name\": \"keys\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<number>\" } }, \"values\": { \"defaultValue\": null, \"description\": \"Returns an iterable of values in the array\", \"name\": \"values\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<RawDataSeries>\" } }, \"__@unscopables\": { \"defaultValue\": null, \"description\": \"Returns an object whose properties have the value 'true'\\nwhen they will be absent when used in a 'with' statement.\", \"name\": \"__@unscopables\", \"required\": true, \"type\": { \"name\": \"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }\" } }, \"includes\": { \"defaultValue\": null, \"description\": \"Determines whether an array includes a certain element, returning true or false as appropriate.\\n@param searchElement The element to search for.\\n@param fromIndex The position in this array at which to begin searching for searchElement.\", \"name\": \"includes\", \"required\": true, \"type\": { \"name\": \"(searchElement: RawDataSeries, fromIndex?: number) => boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/series/stacked_series_utils.ts#getYValueStackMap\"] = { docgenInfo: getYValueStackMap.__docgenInfo, name: \"getYValueStackMap\", path: \"src/lib/series/stacked_series_utils.ts#getYValueStackMap\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    computeYStackedMapValues.displayName = \"computeYStackedMapValues\";\n    // @ts-ignore\n    computeYStackedMapValues.__docgenInfo = { \"description\": \"For each key of the yValueStackMap, it stacks the values one after the other,\\nsumming the previous value to the next one.\\n@param yValueStackMap\\n@param scaleToExtent\", \"displayName\": \"computeYStackedMapValues\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/series/stacked_series_utils.ts#computeYStackedMapValues\"] = { docgenInfo: computeYStackedMapValues.__docgenInfo, name: \"computeYStackedMapValues\", path: \"src/lib/series/stacked_series_utils.ts#computeYStackedMapValues\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import classNames from 'classnames';\nimport { Provider } from 'mobx-react';\nimport React, { CSSProperties, Fragment } from 'react';\nimport { SpecsParser } from '../specs/specs_parser';\nimport { ChartStore } from '../state/chart_state';\nimport { AnnotationTooltip } from './annotation_tooltips';\nimport { ChartResizer } from './chart_resizer';\nimport { Crosshair } from './crosshair';\nimport { Highlighter } from './highlighter';\nimport { Legend } from './legend';\nimport { LegendButton } from './legend_button';\nimport { ReactiveChart as ReactChart } from './react_canvas/reactive_chart';\nimport { ReactiveChart as SVGChart } from './svg/reactive_chart';\nimport { Tooltips } from './tooltips';\n\ninterface ChartProps {\n  /** The type of rendered\n   * @default 'canvas'\n   */\n  renderer: 'svg' | 'canvas';\n  size?: [number, number];\n  className?: string;\n}\n\nexport class Chart extends React.Component<ChartProps> {\n  static defaultProps: ChartProps = {\n    renderer: 'canvas',\n  };\n  private chartSpecStore: ChartStore;\n  constructor(props: any) {\n    super(props);\n    this.chartSpecStore = new ChartStore();\n  }\n  render() {\n    const { renderer, size, className } = this.props;\n    let containerStyle: CSSProperties;\n    if (size) {\n      containerStyle = {\n        position: 'relative',\n        width: size[0],\n        height: size[1],\n      };\n    } else {\n      containerStyle = {};\n    }\n    const chartClass = classNames('elasticCharts', className);\n    return (\n      <Provider chartStore={this.chartSpecStore}>\n        <Fragment>\n          <SpecsParser>{this.props.children}</SpecsParser>\n          <div style={containerStyle} className={chartClass}>\n            <ChartResizer />\n            <Crosshair />\n            {renderer === 'svg' && <SVGChart />}\n            {renderer === 'canvas' && <ReactChart />}\n            <Tooltips />\n            <AnnotationTooltip />\n            <Legend />\n            <LegendButton />\n            <Highlighter />\n          </div>\n        </Fragment>\n      </Provider>\n    );\n  }\n}\n","import { inject } from 'mobx-react';\nimport { PureComponent } from 'react';\nimport { ChartStore } from '../state/chart_state';\n\nexport interface SpecProps {\n  chartStore?: ChartStore; // FIX\n}\n\nexport class SpecsSpecRootComponent extends PureComponent<SpecProps> {\n  static getDerivedStateFromProps(props: SpecProps) {\n    props.chartStore!.specsInitialized.set(false);\n    return null;\n  }\n  state = {};\n  componentDidMount() {\n    this.props.chartStore!.specsInitialized.set(true);\n    this.props.chartStore!.computeChart();\n  }\n  componentDidUpdate() {\n    this.props.chartStore!.specsInitialized.set(true);\n    this.props.chartStore!.computeChart();\n  }\n  componentWillUnmount() {\n    this.props.chartStore!.initialized.set(false);\n  }\n  render() {\n    return this.props.children || null;\n  }\n}\n\nexport const SpecsParser = inject('chartStore')(SpecsSpecRootComponent);\ntry {\n    // @ts-ignore\n    SpecsSpecRootComponent.displayName = \"SpecsSpecRootComponent\";\n    // @ts-ignore\n    SpecsSpecRootComponent.__docgenInfo = { \"description\": \"\", \"displayName\": \"SpecsSpecRootComponent\", \"props\": { \"chartStore\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"chartStore\", \"required\": false, \"type\": { \"name\": \"ChartStore\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/specs/specs_parser.tsx#SpecsSpecRootComponent\"] = { docgenInfo: SpecsSpecRootComponent.__docgenInfo, name: \"SpecsSpecRootComponent\", path: \"src/specs/specs_parser.tsx#SpecsSpecRootComponent\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    SpecsParser.displayName = \"SpecsParser\";\n    // @ts-ignore\n    SpecsParser.__docgenInfo = { \"description\": \"\", \"displayName\": \"SpecsParser\", \"props\": { \"chartStore\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"chartStore\", \"required\": false, \"type\": { \"name\": \"ChartStore\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/specs/specs_parser.tsx#SpecsParser\"] = { docgenInfo: SpecsParser.__docgenInfo, name: \"SpecsParser\", path: \"src/specs/specs_parser.tsx#SpecsParser\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { action, computed, IObservableValue, observable } from 'mobx';\nimport {\n  AxisLinePosition,\n  AxisTick,\n  AxisTicksDimensions,\n  computeAxisTicksDimensions,\n  getAxisTicksPositions,\n  mergeDomainsByGroupId,\n} from '../lib/axes/axis_utils';\nimport { CanvasTextBBoxCalculator } from '../lib/axes/canvas_text_bbox_calculator';\nimport { XDomain } from '../lib/series/domains/x_domain';\nimport { YDomain } from '../lib/series/domains/y_domain';\nimport { computeLegend, LegendItem } from '../lib/series/legend';\nimport {\n  AreaGeometry,\n  BarGeometry,\n  GeometryValue,\n  IndexedGeometry,\n  isPointOnGeometry as isPointerOnGeometry,\n  LineGeometry,\n  PointGeometry,\n} from '../lib/series/rendering';\nimport { countBarsInCluster } from '../lib/series/scales';\nimport {\n  DataSeriesColorsValues,\n  FormattedDataSeries,\n  getSeriesColorMap,\n  RawDataSeries,\n} from '../lib/series/series';\nimport {\n  AnnotationSpec,\n  AnnotationTypes,\n  AreaSeriesSpec,\n  AxisSpec,\n  BarSeriesSpec,\n  BasicSeriesSpec,\n  DomainRange,\n  isLineAnnotation,\n  isRectAnnotation,\n  LineSeriesSpec,\n  Position,\n  Rendering,\n  Rotation,\n} from '../lib/series/specs';\nimport { formatTooltip, getSeriesTooltipValues } from '../lib/series/tooltip';\nimport { LIGHT_THEME } from '../lib/themes/light_theme';\nimport { mergeWithDefaultAnnotationLine, mergeWithDefaultAnnotationRect, Theme } from '../lib/themes/theme';\nimport { compareByValueAsc } from '../lib/utils/commons';\nimport { computeChartDimensions, Dimensions } from '../lib/utils/dimensions';\nimport { Domain } from '../lib/utils/domain';\nimport { AnnotationId, AxisId, GroupId, SpecId } from '../lib/utils/ids';\nimport {\n  areIndexedGeometryArraysEquals,\n  getValidXPosition,\n  getValidYPosition,\n  isCrosshairTooltipType,\n  isFollowTooltipType,\n  TooltipType,\n  TooltipValue,\n} from '../lib/utils/interactions';\nimport { Scale, ScaleType } from '../lib/utils/scales/scales';\nimport { DEFAULT_TOOLTIP_SNAP, DEFAULT_TOOLTIP_TYPE } from '../specs/settings';\nimport {\n  AnnotationDimensions,\n  computeAnnotationDimensions,\n  computeAnnotationTooltipState,\n} from './annotation_utils';\nimport {\n  getCursorBandPosition,\n  getCursorLinePosition,\n  getTooltipPosition,\n} from './crosshair_utils';\nimport {\n  BrushExtent,\n  computeBrushExtent,\n  computeChartTransform,\n  computeSeriesDomains,\n  computeSeriesGeometries,\n  findDataSeriesByColorValues,\n  getAxesSpecForSpecId,\n  getUpdatedCustomSeriesColors,\n  isChartAnimatable,\n  isLineAreaOnlyChart,\n  Transform,\n  updateDeselectedDataSeries,\n} from './utils';\n\nexport interface Point {\n  x: number;\n  y: number;\n}\nexport interface SeriesDomainsAndData {\n  xDomain: XDomain;\n  yDomain: YDomain[];\n  splittedDataSeries: RawDataSeries[][];\n  formattedDataSeries: {\n    stacked: FormattedDataSeries[];\n    nonStacked: FormattedDataSeries[];\n  };\n  seriesColors: Map<string, DataSeriesColorsValues>;\n}\n\nexport type ElementClickListener = (values: GeometryValue[]) => void;\nexport type ElementOverListener = (values: GeometryValue[]) => void;\nexport type BrushEndListener = (min: number, max: number) => void;\nexport type LegendItemListener = (dataSeriesIdentifiers: DataSeriesColorsValues | null) => void;\n\nexport class ChartStore {\n  debug = false;\n  specsInitialized = observable.box(false);\n  initialized = observable.box(false);\n  parentDimensions: Dimensions = {\n    width: 0,\n    height: 0,\n    top: 0,\n    left: 0,\n  };\n  chartDimensions: Dimensions = {\n    width: 0,\n    height: 0,\n    top: 0,\n    left: 0,\n  };\n  chartTransform: Transform = {\n    x: 0,\n    y: 0,\n    rotate: 0,\n  };\n  isBrushing = observable.box(false);\n  brushExtent: BrushExtent = {\n    minX: 0,\n    minY: 0,\n    maxX: 0,\n    maxY: 0,\n  };\n\n  chartRotation: Rotation = 0; // updated from jsx\n  chartRendering: Rendering = 'canvas'; // updated from jsx\n  chartTheme: Theme = LIGHT_THEME; // updated from jsx\n  axesSpecs: Map<AxisId, AxisSpec> = new Map(); // readed from jsx\n  axesTicksDimensions: Map<AxisId, AxisTicksDimensions> = new Map(); // computed\n  axesPositions: Map<AxisId, Dimensions> = new Map(); // computed\n  axesVisibleTicks: Map<AxisId, AxisTick[]> = new Map(); // computed\n  axesTicks: Map<AxisId, AxisTick[]> = new Map(); // computed\n  axesGridLinesPositions: Map<AxisId, AxisLinePosition[]> = new Map(); // computed\n\n  annotationSpecs = new Map<AnnotationId, AnnotationSpec>(); // read from jsx\n\n  annotationDimensions = observable.map<AnnotationId, AnnotationDimensions>(new Map());\n\n  seriesSpecs: Map<SpecId, BasicSeriesSpec> = new Map(); // readed from jsx\n\n  seriesDomainsAndData?: SeriesDomainsAndData; // computed\n  xScale?: Scale;\n  yScales?: Map<GroupId, Scale>;\n  xDomain?: Domain | DomainRange;\n\n  legendItems: Map<string, LegendItem> = new Map();\n  highlightedLegendItemKey: IObservableValue<string | null> = observable.box(null);\n  selectedLegendItemKey: IObservableValue<string | null> = observable.box(null);\n  deselectedDataSeries: DataSeriesColorsValues[] | null = null;\n  customSeriesColors: Map<string, string> = new Map();\n  seriesColorMap: Map<string, string> = new Map();\n  totalBarsInCluster?: number;\n\n  tooltipData = observable.array<TooltipValue>([], { deep: false });\n  tooltipType = observable.box(DEFAULT_TOOLTIP_TYPE);\n  tooltipSnap = observable.box(DEFAULT_TOOLTIP_SNAP);\n  tooltipPosition = observable.object<{ transform: string }>({ transform: '' });\n\n  /** cursorPosition is used by tooltip, so this is a way to expose the position for other uses */\n  rawCursorPosition = observable.object<{ x: number; y: number }>({ x: -1, y: -1 }, undefined, {\n    deep: false,\n  });\n\n  /** position of the cursor relative to the chart */\n  cursorPosition = observable.object<{ x: number; y: number }>({ x: -1, y: -1 }, undefined, {\n    deep: false,\n  });\n  cursorBandPosition = observable.object<Dimensions>(\n    { top: -1, left: -1, height: -1, width: -1 },\n    undefined,\n    {\n      deep: false,\n    },\n  );\n  cursorLinePosition = observable.object<Dimensions>(\n    { top: -1, left: -1, height: -1, width: -1 },\n    undefined,\n    {\n      deep: false,\n    },\n  );\n\n  onElementClickListener?: ElementClickListener;\n  onElementOverListener?: ElementOverListener;\n  onElementOutListener?: () => undefined;\n  onBrushEndListener?: BrushEndListener;\n  onLegendItemOverListener?: LegendItemListener;\n  onLegendItemOutListener?: () => undefined;\n  onLegendItemClickListener?: LegendItemListener;\n  onLegendItemPlusClickListener?: LegendItemListener;\n  onLegendItemMinusClickListener?: LegendItemListener;\n  onLegendItemVisibilityToggleClickListener?: LegendItemListener;\n\n  geometries: {\n    points: PointGeometry[];\n    bars: BarGeometry[];\n    areas: AreaGeometry[];\n    lines: LineGeometry[];\n  } | null = null;\n\n  geometriesIndex: Map<any, IndexedGeometry[]> = new Map();\n  geometriesIndexKeys: any[] = [];\n  highlightedGeometries = observable.array<IndexedGeometry>([], { deep: false });\n\n  animateData = false;\n  /**\n   * Define if the chart can be animated or not depending\n   * on the global configuration and on the number of elements per series\n   */\n  canDataBeAnimated = false;\n\n  showLegend = observable.box(false);\n  legendCollapsed = observable.box(false);\n  legendPosition: Position | undefined;\n  showLegendDisplayValue = observable.box(true);\n\n  toggleLegendCollapsed = action(() => {\n    this.legendCollapsed.set(!this.legendCollapsed.get());\n    this.computeChart();\n  });\n\n  /**\n   * x and y values are relative to the container.\n   */\n  setCursorPosition = action((x: number, y: number) => {\n    this.rawCursorPosition.x = x;\n    this.rawCursorPosition.y = y;\n\n    if (!this.seriesDomainsAndData || this.tooltipType.get() === TooltipType.None) {\n      return;\n    }\n\n    // get positions relative to chart\n    let xPos = x - this.chartDimensions.left;\n    let yPos = y - this.chartDimensions.top;\n\n    // limit cursorPosition to chartDimensions\n    // note: to debug and inspect tooltip html, just comment the following ifs\n    if (xPos < 0 || xPos >= this.chartDimensions.width) {\n      xPos = -1;\n    }\n    if (yPos < 0 || yPos >= this.chartDimensions.height) {\n      yPos = -1;\n    }\n    this.cursorPosition.x = xPos;\n    this.cursorPosition.y = yPos;\n\n    // hide tooltip if outside chart dimensions\n    if (yPos === -1 || xPos === -1) {\n      this.clearTooltipAndHighlighted();\n      return;\n    }\n\n    // get the cursor position depending on the chart rotation\n    const xAxisCursorPosition = getValidXPosition(\n      xPos,\n      yPos,\n      this.chartRotation,\n      this.chartDimensions,\n    );\n    const yAxisCursorPosition = getValidYPosition(\n      xPos,\n      yPos,\n      this.chartRotation,\n      this.chartDimensions,\n    );\n\n    // only if we have a valid cursor position and the necessary scale\n    if (xAxisCursorPosition < 0 || !this.xScale || !this.yScales) {\n      this.clearTooltipAndHighlighted();\n      return;\n    }\n\n    // invert the cursor position to get the scale value\n\n    const xValue = this.xScale.invertWithStep(xAxisCursorPosition, this.geometriesIndexKeys);\n\n    // update che cursorBandPosition based on chart configuration\n    const isLineAreaOnly = isLineAreaOnlyChart(this.seriesSpecs);\n    const updatedCursorBand = getCursorBandPosition(\n      this.chartRotation,\n      this.chartDimensions,\n      this.cursorPosition,\n      this.isTooltipSnapEnabled.get(),\n      this.xScale,\n      this.geometriesIndexKeys,\n      isLineAreaOnly ? 1 : this.totalBarsInCluster,\n    );\n    if (updatedCursorBand === undefined) {\n      this.clearTooltipAndHighlighted();\n      return;\n    }\n    Object.assign(this.cursorBandPosition, updatedCursorBand);\n\n    const updatedCursorLine = getCursorLinePosition(\n      this.chartRotation,\n      this.chartDimensions,\n      this.cursorPosition,\n    );\n    Object.assign(this.cursorLinePosition, updatedCursorLine);\n\n    const updatedTooltipPosition = getTooltipPosition(\n      this.chartDimensions,\n      this.chartRotation,\n      this.cursorBandPosition,\n      this.cursorPosition,\n    );\n\n    this.tooltipPosition.transform = updatedTooltipPosition.transform;\n\n    // get the elements on at this cursor position\n    const elements = this.geometriesIndex.get(xValue);\n\n    // if no element, hide everything\n    if (!elements || elements.length === 0) {\n      this.clearTooltipAndHighlighted();\n      return;\n    }\n\n    // build the tooltip value list\n    let xValueInfo: TooltipValue | null = null;\n    let oneHighlighted = false;\n    const newHighlightedGeometries: IndexedGeometry[] = [];\n    const tooltipValues = elements.reduce(\n      (acc, indexedGeometry) => {\n        const {\n          geometryId: { specId },\n        } = indexedGeometry;\n        const spec = this.seriesSpecs.get(specId);\n\n        // safe guard check\n        if (!spec) {\n          return acc;\n        }\n        const { xAxis, yAxis } = getAxesSpecForSpecId(this.axesSpecs, spec.groupId);\n\n        // yScales is ensured by the enclosing if\n        const yScale = this.yScales!.get(spec.groupId);\n        if (!yScale) {\n          return acc;\n        }\n\n        // check if the pointer is on the geometry\n        let isHighlighted = false;\n        if (isPointerOnGeometry(xAxisCursorPosition, yAxisCursorPosition, indexedGeometry)) {\n          isHighlighted = true;\n          oneHighlighted = true;\n          newHighlightedGeometries.push(indexedGeometry);\n        }\n\n        // if it's a follow tooltip, and no element is highlighted\n        // not add that element into the tooltip list\n        if (!isHighlighted && isFollowTooltipType(this.tooltipType.get())) {\n          return acc;\n        }\n\n        // format the tooltip values\n        const formattedTooltip = formatTooltip(indexedGeometry, spec, false, isHighlighted, yAxis);\n\n        // format only one time the x value\n        if (!xValueInfo) {\n          xValueInfo = formatTooltip(indexedGeometry, spec, true, false, xAxis);\n          return [xValueInfo, ...acc, formattedTooltip];\n        }\n\n        return [...acc, formattedTooltip];\n      },\n      [] as TooltipValue[],\n    );\n\n    // if there's an annotation rect tooltip & there isn't a single highlighted element, hide\n    const annotationTooltip = this.annotationTooltipState.get();\n    const hasRectAnnotationToolip = annotationTooltip && annotationTooltip.annotationType === AnnotationTypes.Rectangle;\n    if (hasRectAnnotationToolip && !oneHighlighted) {\n      this.clearTooltipAndHighlighted();\n      return;\n    }\n\n    // check if we already have send out an over/out event on highlighted elements\n    if (\n      this.onElementOverListener &&\n      !areIndexedGeometryArraysEquals(newHighlightedGeometries, this.highlightedGeometries.toJS())\n    ) {\n      if (newHighlightedGeometries.length > 0) {\n        this.onElementOverListener(newHighlightedGeometries.map(({ value }) => value));\n      } else {\n        if (this.onElementOutListener) {\n          this.onElementOutListener();\n        }\n      }\n    }\n\n    // update highlighted geometries observer\n    this.highlightedGeometries.replace(newHighlightedGeometries);\n\n    // update tooltip visibility\n    if (tooltipValues.length === 0) {\n      this.tooltipData.clear();\n    } else {\n      this.tooltipData.replace(tooltipValues);\n    }\n\n    // TODO move this into the renderer\n    if (oneHighlighted) {\n      document.body.style.cursor = 'pointer';\n    } else {\n      document.body.style.cursor = 'default';\n    }\n  });\n\n  legendItemTooltipValues = computed(() => {\n    // update legend items with value to display\n    return getSeriesTooltipValues(this.tooltipData);\n  });\n\n  annotationTooltipState = computed(() => {\n    // get positions relative to chart\n    const xPos = this.rawCursorPosition.x - this.chartDimensions.left;\n    const yPos = this.rawCursorPosition.y - this.chartDimensions.top;\n\n    // only if we have a valid cursor position and the necessary scale\n    if (!this.xScale || !this.yScales) {\n      return null;\n    }\n\n    const cursorPosition = {\n      x: xPos,\n      y: yPos,\n    };\n\n    const tooltipState = computeAnnotationTooltipState(\n      cursorPosition,\n      this.annotationDimensions,\n      this.annotationSpecs,\n      this.chartRotation,\n      this.axesSpecs,\n      this.chartDimensions,\n    );\n\n    // If there's a highlighted chart element tooltip value, don't show annotation tooltip\n    if (tooltipState && tooltipState.annotationType === AnnotationTypes.Rectangle) {\n      for (const tooltipValue of this.tooltipData) {\n        if (tooltipValue.isHighlighted) {\n          return null;\n        }\n      }\n    }\n\n    return tooltipState;\n  });\n\n  isTooltipVisible = computed(() => {\n    return (\n      !this.isBrushing.get() &&\n      this.tooltipType.get() !== TooltipType.None &&\n      this.cursorPosition.x > -1 &&\n      this.cursorPosition.y > -1 &&\n      this.tooltipData.length > 0\n    );\n  });\n  isCrosshairVisible = computed(() => {\n    return (\n      !this.isBrushing.get() &&\n      isCrosshairTooltipType(this.tooltipType.get()) &&\n      this.cursorPosition.x > -1 &&\n      this.cursorPosition.y > -1\n    );\n  });\n\n  isTooltipSnapEnabled = computed(() => {\n    return (this.xScale && this.xScale.bandwidth > 0) || this.tooltipSnap.get();\n  });\n\n  clearTooltipAndHighlighted = action(() => {\n    // if exist any highlighted geometry, send an out element event\n    if (this.onElementOutListener && this.highlightedGeometries.length > 0) {\n      this.onElementOutListener();\n    }\n    // clear highlight geoms\n    this.highlightedGeometries.clear();\n    this.tooltipData.clear();\n\n    document.body.style.cursor = 'default';\n  });\n\n  setShowLegend = action((showLegend: boolean) => {\n    this.showLegend.set(showLegend);\n  });\n\n  highlightedLegendItem = computed(() => {\n    const key = this.highlightedLegendItemKey.get();\n    return key == null ? null : this.legendItems.get(key);\n  });\n\n  selectedLegendItem = computed(() => {\n    const key = this.selectedLegendItemKey.get();\n    return key == null ? null : this.legendItems.get(key);\n  });\n\n  onLegendItemOver = action((legendItemKey: string | null) => {\n    this.highlightedLegendItemKey.set(legendItemKey);\n\n    if (this.onLegendItemOverListener) {\n      const currentLegendItem = this.highlightedLegendItem.get();\n      const listenerData = currentLegendItem ? currentLegendItem.value : null;\n      this.onLegendItemOverListener(listenerData);\n    }\n  });\n\n  onLegendItemOut = action(() => {\n    this.highlightedLegendItemKey.set(null);\n    if (this.onLegendItemOutListener) {\n      this.onLegendItemOutListener();\n    }\n  });\n\n  onLegendItemClick = action((legendItemKey: string) => {\n    if (legendItemKey !== this.selectedLegendItemKey.get()) {\n      this.selectedLegendItemKey.set(legendItemKey);\n    } else {\n      this.selectedLegendItemKey.set(null);\n    }\n\n    if (this.onLegendItemClickListener) {\n      const currentLegendItem = this.selectedLegendItem.get();\n      const listenerData = currentLegendItem ? currentLegendItem.value : null;\n      this.onLegendItemClickListener(listenerData);\n    }\n  });\n\n  onLegendItemPlusClick = action(() => {\n    if (this.onLegendItemPlusClickListener) {\n      const currentLegendItem = this.selectedLegendItem.get();\n      const listenerData = currentLegendItem ? currentLegendItem.value : null;\n      this.onLegendItemPlusClickListener(listenerData);\n    }\n  });\n\n  onLegendItemMinusClick = action(() => {\n    if (this.onLegendItemMinusClickListener) {\n      const currentLegendItem = this.selectedLegendItem.get();\n      const listenerData = currentLegendItem ? currentLegendItem.value : null;\n      this.onLegendItemMinusClickListener(listenerData);\n    }\n  });\n\n  toggleSingleSeries = action((legendItemKey: string) => {\n    const legendItem = this.legendItems.get(legendItemKey);\n\n    if (legendItem) {\n      if (findDataSeriesByColorValues(this.deselectedDataSeries, legendItem.value) > -1) {\n        this.deselectedDataSeries = [...this.legendItems.values()]\n          .filter((item: LegendItem) => item.key !== legendItemKey)\n          .map((item: LegendItem) => item.value);\n      } else {\n        this.deselectedDataSeries = [legendItem.value];\n      }\n\n      this.computeChart();\n    }\n  });\n\n  toggleSeriesVisibility = action((legendItemKey: string) => {\n    const legendItem = this.legendItems.get(legendItemKey);\n\n    if (legendItem) {\n      this.deselectedDataSeries = updateDeselectedDataSeries(\n        this.deselectedDataSeries,\n        legendItem.value,\n      );\n      this.computeChart();\n    }\n  });\n\n  setSeriesColor = action((legendItemKey: string, color: string) => {\n    const legendItem = this.legendItems.get(legendItemKey);\n\n    if (legendItem) {\n      const { specId } = legendItem.value;\n\n      const spec = this.seriesSpecs.get(specId);\n      if (spec) {\n        if (spec.customSeriesColors) {\n          spec.customSeriesColors.set(legendItem.value, color);\n        } else {\n          const specCustomSeriesColors = new Map();\n          spec.customSeriesColors = specCustomSeriesColors;\n          spec.customSeriesColors.set(legendItem.value, color);\n        }\n      }\n\n      this.computeChart();\n    }\n  });\n\n  onBrushStart = action(() => {\n    if (!this.onBrushEndListener) {\n      return;\n    }\n    this.isBrushing.set(true);\n  });\n\n  onBrushEnd = action((start: Point, end: Point) => {\n    if (!this.onBrushEndListener) {\n      return;\n    }\n    this.isBrushing.set(false);\n    const minValue = start.x < end.x ? start.x : end.x;\n    const maxValue = start.x > end.x ? start.x : end.x;\n    if (maxValue === minValue) {\n      // if 0 size brush, avoid computing the value\n      return;\n    }\n    const min = this.xScale!.invert(minValue - this.chartDimensions.left);\n    const max = this.xScale!.invert(maxValue - this.chartDimensions.left);\n    this.onBrushEndListener(min, max);\n  });\n\n  handleChartClick() {\n    if (this.highlightedGeometries.length > 0 && this.onElementClickListener) {\n      this.onElementClickListener(this.highlightedGeometries.toJS().map(({ value }) => value));\n    }\n  }\n\n  resetDeselectedDataSeries() {\n    this.deselectedDataSeries = null;\n  }\n\n  setOnElementClickListener(listener: ElementClickListener) {\n    this.onElementClickListener = listener;\n  }\n  setOnElementOverListener(listener: ElementOverListener) {\n    this.onElementOverListener = listener;\n  }\n  setOnElementOutListener(listener: () => undefined) {\n    this.onElementOutListener = listener;\n  }\n  setOnBrushEndListener(listener: BrushEndListener) {\n    this.onBrushEndListener = listener;\n  }\n  setOnLegendItemOverListener(listener: LegendItemListener) {\n    this.onLegendItemOverListener = listener;\n  }\n  setOnLegendItemOutListener(listener: () => undefined) {\n    this.onLegendItemOutListener = listener;\n  }\n  setOnLegendItemClickListener(listener: LegendItemListener) {\n    this.onLegendItemClickListener = listener;\n  }\n  setOnLegendItemPlusClickListener(listener: LegendItemListener) {\n    this.onLegendItemPlusClickListener = listener;\n  }\n  setOnLegendItemMinusClickListener(listener: LegendItemListener) {\n    this.onLegendItemMinusClickListener = listener;\n  }\n  removeElementClickListener() {\n    this.onElementClickListener = undefined;\n  }\n  removeElementOverListener() {\n    this.onElementOverListener = undefined;\n  }\n  removeElementOutListener() {\n    this.onElementOutListener = undefined;\n  }\n  removeOnLegendItemOverListener() {\n    this.onLegendItemOverListener = undefined;\n  }\n  removeOnLegendItemOutListener() {\n    this.onLegendItemOutListener = undefined;\n  }\n  removeOnLegendItemPlusClickListener() {\n    this.onLegendItemPlusClickListener = undefined;\n  }\n  removeOnLegendItemMinusClickListener() {\n    this.onLegendItemMinusClickListener = undefined;\n  }\n\n  isBrushEnabled(): boolean {\n    if (!this.xScale) {\n      return false;\n    }\n    return this.xScale.type !== ScaleType.Ordinal && Boolean(this.onBrushEndListener);\n  }\n\n  updateParentDimensions(width: number, height: number, top: number, left: number) {\n    let isChanged = false;\n    if (width !== this.parentDimensions.width) {\n      isChanged = true;\n      this.parentDimensions.width = width;\n    }\n    if (height !== this.parentDimensions.height) {\n      isChanged = true;\n      this.parentDimensions.height = height;\n    }\n    if (top !== this.parentDimensions.top) {\n      isChanged = true;\n      this.parentDimensions.top = top;\n    }\n    if (left !== this.parentDimensions.left) {\n      isChanged = true;\n      this.parentDimensions.left = left;\n    }\n    if (isChanged) {\n      this.computeChart();\n    }\n  }\n  addSeriesSpec(seriesSpec: BasicSeriesSpec | LineSeriesSpec | AreaSeriesSpec | BarSeriesSpec) {\n    this.seriesSpecs.set(seriesSpec.id, seriesSpec);\n  }\n  removeSeriesSpec(specId: SpecId) {\n    this.seriesSpecs.delete(specId);\n  }\n  /**\n   * Add an axis spec to the store\n   * @param axisSpec an axis spec\n   */\n  addAxisSpec(axisSpec: AxisSpec) {\n    this.axesSpecs.set(axisSpec.id, axisSpec);\n  }\n  removeAxisSpec(axisId: AxisId) {\n    this.axesSpecs.delete(axisId);\n  }\n\n  addAnnotationSpec(annotationSpec: AnnotationSpec) {\n    if (isLineAnnotation(annotationSpec)) {\n      const { style } = annotationSpec;\n\n      const mergedLineStyle = mergeWithDefaultAnnotationLine(style);\n      annotationSpec.style = mergedLineStyle;\n    }\n    if (isRectAnnotation(annotationSpec)) {\n      const { style } = annotationSpec;\n\n      const mergedRectStyle = mergeWithDefaultAnnotationRect(style);\n      annotationSpec.style = mergedRectStyle;\n    }\n    this.annotationSpecs.set(annotationSpec.annotationId, annotationSpec);\n  }\n\n  removeAnnotationSpec(annotationId: AnnotationId) {\n    this.annotationSpecs.delete(annotationId);\n  }\n\n  computeChart() {\n    this.initialized.set(false);\n    // compute only if parent dimensions are computed\n    if (this.parentDimensions.width === 0 || this.parentDimensions.height === 0) {\n      return;\n    }\n    // avoid compute if no specs are specified\n    if (this.seriesSpecs.size === 0) {\n      return;\n    }\n\n    // When specs are not initialized, reset selectedDataSeries to null\n    if (!this.specsInitialized.get()) {\n      this.deselectedDataSeries = null;\n    }\n\n    const domainsByGroupId = mergeDomainsByGroupId(this.axesSpecs, this.chartRotation);\n\n    // The last argument is optional; if not supplied, then all series will be factored into computations\n    // Otherwise, deselectedDataSeries is used to restrict the computation excluding the deselected series\n    const seriesDomains = computeSeriesDomains(\n      this.seriesSpecs,\n      domainsByGroupId,\n      this.xDomain,\n      this.deselectedDataSeries,\n    );\n\n    this.seriesDomainsAndData = seriesDomains;\n\n    // Merge all series spec custom colors with state custom colors map\n    const updatedCustomSeriesColors = getUpdatedCustomSeriesColors(this.seriesSpecs);\n    this.customSeriesColors = new Map([...this.customSeriesColors, ...updatedCustomSeriesColors]);\n\n    // tslint:disable-next-line:no-console\n    // console.log({ colors: seriesDomains.seriesColors });\n\n    // tslint:disable-next-line:no-console\n    // console.log({ seriesDomains });\n    this.seriesColorMap = getSeriesColorMap(\n      seriesDomains.seriesColors,\n      this.chartTheme.colors,\n      this.customSeriesColors,\n    );\n\n    this.legendItems = computeLegend(\n      seriesDomains.seriesColors,\n      this.seriesColorMap,\n      this.seriesSpecs,\n      this.chartTheme.colors.defaultVizColor,\n      this.axesSpecs,\n      this.deselectedDataSeries,\n    );\n\n    // tslint:disable-next-line:no-console\n    // console.log({ legendItems: this.legendItems });\n\n    const {\n      xDomain,\n      yDomain,\n      formattedDataSeries: { stacked, nonStacked },\n    } = seriesDomains;\n\n    // compute how many bar series are clustered\n    const { totalBarsInCluster } = countBarsInCluster(stacked, nonStacked);\n    this.totalBarsInCluster = totalBarsInCluster;\n\n    // compute axis dimensions\n    const bboxCalculator = new CanvasTextBBoxCalculator();\n    this.axesTicksDimensions.clear();\n    this.axesSpecs.forEach((axisSpec) => {\n      const { id } = axisSpec;\n      const dimensions = computeAxisTicksDimensions(\n        axisSpec,\n        xDomain,\n        yDomain,\n        totalBarsInCluster,\n        bboxCalculator,\n        this.chartRotation,\n        this.chartTheme.axes,\n        this.chartTheme.scales.barsPadding,\n      );\n      if (dimensions) {\n        this.axesTicksDimensions.set(id, dimensions);\n      }\n    });\n    bboxCalculator.destroy();\n\n    // // compute chart dimensions\n    this.chartDimensions = computeChartDimensions(\n      this.parentDimensions,\n      this.chartTheme,\n      this.axesTicksDimensions,\n      this.axesSpecs,\n      this.showLegend.get() && !this.legendCollapsed.get(),\n      this.legendPosition,\n    );\n\n    this.chartTransform = computeChartTransform(this.chartDimensions, this.chartRotation);\n    this.brushExtent = computeBrushExtent(\n      this.chartDimensions,\n      this.chartRotation,\n      this.chartTransform,\n    );\n\n    const seriesGeometries = computeSeriesGeometries(\n      this.seriesSpecs,\n      seriesDomains.xDomain,\n      seriesDomains.yDomain,\n      seriesDomains.formattedDataSeries,\n      this.seriesColorMap,\n      this.chartTheme,\n      this.chartDimensions,\n      this.chartRotation,\n      this.axesSpecs,\n    );\n\n    // tslint:disable-next-line:no-console\n    // console.log({ seriesGeometries });\n    this.geometries = seriesGeometries.geometries;\n    this.xScale = seriesGeometries.scales.xScale;\n    this.yScales = seriesGeometries.scales.yScales;\n    this.geometriesIndex = seriesGeometries.geometriesIndex;\n    this.geometriesIndexKeys = [...this.geometriesIndex.keys()].sort(compareByValueAsc);\n\n    // // compute visible ticks and their positions\n    const axisTicksPositions = getAxisTicksPositions(\n      this.chartDimensions,\n      this.chartTheme,\n      this.chartRotation,\n      this.showLegend.get() && !this.legendCollapsed.get(),\n      this.axesSpecs,\n      this.axesTicksDimensions,\n      seriesDomains.xDomain,\n      seriesDomains.yDomain,\n      totalBarsInCluster,\n      this.legendPosition,\n      this.chartTheme.scales.barsPadding,\n    );\n    // tslint:disable-next-line:no-console\n    // console.log({axisTicksPositions});\n    this.axesPositions = axisTicksPositions.axisPositions;\n    this.axesTicks = axisTicksPositions.axisTicks;\n    this.axesVisibleTicks = axisTicksPositions.axisVisibleTicks;\n    this.axesGridLinesPositions = axisTicksPositions.axisGridLinesPositions;\n\n    // annotation computations\n    const updatedAnnotationDimensions = computeAnnotationDimensions(\n      this.annotationSpecs,\n      this.chartDimensions,\n      this.chartRotation,\n      this.yScales,\n      this.xScale,\n      this.axesSpecs,\n    );\n\n    this.annotationDimensions.replace(updatedAnnotationDimensions);\n\n    this.canDataBeAnimated = isChartAnimatable(seriesGeometries.geometriesCounts, this.animateData);\n    // temporary disabled until\n    // https://github.com/elastic/elastic-charts/issues/89 and https://github.com/elastic/elastic-charts/issues/41\n    this.canDataBeAnimated = false;\n    this.initialized.set(true);\n  }\n}\n","import { findDataSeriesByColorValues, getAxesSpecForSpecId } from '../../state/utils';\nimport { identity } from '../utils/commons';\nimport { AxisId, SpecId } from '../utils/ids';\nimport { DataSeriesColorsValues, getSortedDataSeriesColorsValuesMap } from './series';\nimport { AxisSpec, BasicSeriesSpec } from './specs';\n\nexport interface LegendItem {\n  key: string;\n  color: string;\n  label: string;\n  value: DataSeriesColorsValues;\n  isSeriesVisible?: boolean;\n  isLegendItemVisible?: boolean;\n  displayValue: {\n    raw: any;\n    formatted: any;\n  };\n}\n\nexport function computeLegend(\n  seriesColor: Map<string, DataSeriesColorsValues>,\n  seriesColorMap: Map<string, string>,\n  specs: Map<SpecId, BasicSeriesSpec>,\n  defaultColor: string,\n  axesSpecs: Map<AxisId, AxisSpec>,\n  deselectedDataSeries?: DataSeriesColorsValues[] | null,\n): Map<string, LegendItem> {\n  const legendItems: Map<string, LegendItem> = new Map();\n\n  const sortedSeriesColors = getSortedDataSeriesColorsValuesMap(seriesColor);\n\n  sortedSeriesColors.forEach((series, key) => {\n    const spec = specs.get(series.specId);\n\n    const color = seriesColorMap.get(key) || defaultColor;\n    const hasSingleSeries = seriesColor.size === 1;\n    const label = getSeriesColorLabel(series.colorValues, hasSingleSeries, spec);\n    const isSeriesVisible = deselectedDataSeries\n      ? findDataSeriesByColorValues(deselectedDataSeries, series) < 0\n      : true;\n\n    if (!label || !spec) {\n      return;\n    }\n\n    // Use this to get axis spec w/ tick formatter\n    const { yAxis } = getAxesSpecForSpecId(axesSpecs, spec.groupId);\n    const formatter = yAxis ? yAxis.tickFormat : identity;\n\n    const { hideInLegend } = spec;\n\n    legendItems.set(key, {\n      key,\n      color,\n      label,\n      value: series,\n      isSeriesVisible,\n      isLegendItemVisible: !hideInLegend,\n      displayValue: {\n        raw: series.lastValue,\n        formatted: formatter(series.lastValue),\n      },\n    });\n  });\n  return legendItems;\n}\n\nexport function getSeriesColorLabel(\n  colorValues: any[],\n  hasSingleSeries: boolean,\n  spec?: BasicSeriesSpec,\n): string | undefined {\n  let label = '';\n\n  if (hasSingleSeries || colorValues.length === 0 || !colorValues[0]) {\n    if (!spec) {\n      return;\n    }\n    label = spec.name || `${spec.id}`;\n  } else {\n    label = colorValues.join(' - ');\n  }\n\n  return label;\n}\n","import { TooltipValue } from '../utils/interactions';\nimport { IndexedGeometry } from './rendering';\nimport { getColorValuesAsString } from './series';\nimport { AxisSpec, BasicSeriesSpec } from './specs';\n\nexport function getSeriesTooltipValues(tooltipValues: TooltipValue[]): Map<string, any> {\n  // map from seriesKey to tooltipValue\n  const seriesTooltipValues = new Map();\n\n  // First tooltipValue is the header\n  if (tooltipValues.length <= 1) {\n    return seriesTooltipValues;\n  }\n\n  tooltipValues.slice(1).forEach((tooltipValue: TooltipValue) => {\n    const { seriesKey, value } = tooltipValue;\n    seriesTooltipValues.set(seriesKey, value);\n  });\n\n  return seriesTooltipValues;\n}\n\nexport function formatTooltip(\n  searchIndexValue: IndexedGeometry,\n  spec: BasicSeriesSpec,\n  isXValue: boolean,\n  isHighlighted: boolean,\n  axisSpec?: AxisSpec,\n): TooltipValue {\n  const { id } = spec;\n  const {\n    color,\n    value: { x, y },\n    geometryId: { seriesKey },\n  } = searchIndexValue;\n  const seriesKeyAsString = getColorValuesAsString(seriesKey, id);\n  let name: string | undefined;\n  if (seriesKey.length > 0) {\n    name = seriesKey.join(' - ');\n  } else {\n    name = spec.name || `${spec.id}`;\n  }\n\n  const value = isXValue ? x : y;\n  return {\n    seriesKey: seriesKeyAsString,\n    name,\n    value: axisSpec ? axisSpec.tickFormat(value) : emptyFormatter(value),\n    color,\n    isHighlighted: isXValue ? false : isHighlighted,\n    isXValue,\n  };\n}\n\nfunction emptyFormatter(value: any): string {\n  return `${value}`;\n}\ntry {\n    // @ts-ignore\n    getSeriesTooltipValues.displayName = \"getSeriesTooltipValues\";\n    // @ts-ignore\n    getSeriesTooltipValues.__docgenInfo = { \"description\": \"\", \"displayName\": \"getSeriesTooltipValues\", \"props\": { \"length\": { \"defaultValue\": null, \"description\": \"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.\", \"name\": \"length\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of an array.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.\", \"name\": \"toLocaleString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"pop\": { \"defaultValue\": null, \"description\": \"Removes the last element from an array and returns it.\", \"name\": \"pop\", \"required\": true, \"type\": { \"name\": \"() => TooltipValue\" } }, \"push\": { \"defaultValue\": null, \"description\": \"Appends new elements to an array, and returns the new length of the array.\\n@param items New elements of the Array.\", \"name\": \"push\", \"required\": true, \"type\": { \"name\": \"(...items: TooltipValue[]) => number\" } }, \"concat\": { \"defaultValue\": null, \"description\": \"Combines two or more arrays.\\nCombines two or more arrays.\\n@param items Additional items to add to the end of array1.\\n@param items Additional items to add to the end of array1.\", \"name\": \"concat\", \"required\": true, \"type\": { \"name\": \"{ (...items: ConcatArray<TooltipValue>[]): TooltipValue[]; (...items: (TooltipValue | ConcatArray<TooltipValue>)[]): TooltipValue[]; }\" } }, \"join\": { \"defaultValue\": null, \"description\": \"Adds all the elements of an array separated by the specified separator string.\\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.\", \"name\": \"join\", \"required\": true, \"type\": { \"name\": \"(separator?: string) => string\" } }, \"reverse\": { \"defaultValue\": null, \"description\": \"Reverses the elements in an Array.\", \"name\": \"reverse\", \"required\": true, \"type\": { \"name\": \"() => TooltipValue[]\" } }, \"shift\": { \"defaultValue\": null, \"description\": \"Removes the first element from an array and returns it.\", \"name\": \"shift\", \"required\": true, \"type\": { \"name\": \"() => TooltipValue\" } }, \"slice\": { \"defaultValue\": null, \"description\": \"Returns a section of an array.\\n@param start The beginning of the specified portion of the array.\\n@param end The end of the specified portion of the array.\", \"name\": \"slice\", \"required\": true, \"type\": { \"name\": \"(start?: number, end?: number) => TooltipValue[]\" } }, \"sort\": { \"defaultValue\": null, \"description\": \"Sorts an array.\\n@param compareFn The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, ASCII character order.\", \"name\": \"sort\", \"required\": true, \"type\": { \"name\": \"(compareFn?: (a: TooltipValue, b: TooltipValue) => number) => TooltipValue[]\" } }, \"splice\": { \"defaultValue\": null, \"description\": \"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param items Elements to insert into the array in place of the deleted elements.\", \"name\": \"splice\", \"required\": true, \"type\": { \"name\": \"{ (start: number, deleteCount?: number): TooltipValue[]; (start: number, deleteCount: number, ...items: TooltipValue[]): TooltipValue[]; }\" } }, \"unshift\": { \"defaultValue\": null, \"description\": \"Inserts new elements at the start of an array.\\n@param items Elements to insert at the start of the Array.\", \"name\": \"unshift\", \"required\": true, \"type\": { \"name\": \"(...items: TooltipValue[]) => number\" } }, \"indexOf\": { \"defaultValue\": null, \"description\": \"Returns the index of the first occurrence of a value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\", \"name\": \"indexOf\", \"required\": true, \"type\": { \"name\": \"(searchElement: TooltipValue, fromIndex?: number) => number\" } }, \"lastIndexOf\": { \"defaultValue\": null, \"description\": \"Returns the index of the last occurrence of a specified value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.\", \"name\": \"lastIndexOf\", \"required\": true, \"type\": { \"name\": \"(searchElement: TooltipValue, fromIndex?: number) => number\" } }, \"every\": { \"defaultValue\": null, \"description\": \"Determines whether all the members of an array satisfy the specified test.\\n@param callbackfn A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"every\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: TooltipValue, index: number, array: TooltipValue[]) => boolean, thisArg?: any) => boolean\" } }, \"some\": { \"defaultValue\": null, \"description\": \"Determines whether the specified callback function returns true for any element of an array.\\n@param callbackfn A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"some\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: TooltipValue, index: number, array: TooltipValue[]) => boolean, thisArg?: any) => boolean\" } }, \"forEach\": { \"defaultValue\": null, \"description\": \"Performs the specified action for each element in an array.\\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"forEach\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: TooltipValue, index: number, array: TooltipValue[]) => void, thisArg?: any) => void\" } }, \"map\": { \"defaultValue\": null, \"description\": \"Calls a defined callback function on each element of an array, and returns an array that contains the results.\\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"map\", \"required\": true, \"type\": { \"name\": \"<U>(callbackfn: (value: TooltipValue, index: number, array: TooltipValue[]) => U, thisArg?: any) => U[]\" } }, \"filter\": { \"defaultValue\": null, \"description\": \"Returns the elements of an array that meet the condition specified in a callback function.\\nReturns the elements of an array that meet the condition specified in a callback function.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"filter\", \"required\": true, \"type\": { \"name\": \"{ <S extends TooltipValue>(callbackfn: (value: TooltipValue, index: number, array: TooltipValue[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: TooltipValue, index: number, array: TooltipValue[]) => any, thisArg?: any): TooltipValue[]; }\" } }, \"reduce\": { \"defaultValue\": null, \"description\": \"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\", \"name\": \"reduce\", \"required\": true, \"type\": { \"name\": \"{ (callbackfn: (previousValue: TooltipValue, currentValue: TooltipValue, currentIndex: number, array: TooltipValue[]) => TooltipValue): TooltipValue; (callbackfn: (previousValue: TooltipValue, currentValue: TooltipValue, currentIndex: number, array: TooltipValue[]) => TooltipValue, initialValue: TooltipValue): Toolt...\" } }, \"reduceRight\": { \"defaultValue\": null, \"description\": \"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\", \"name\": \"reduceRight\", \"required\": true, \"type\": { \"name\": \"{ (callbackfn: (previousValue: TooltipValue, currentValue: TooltipValue, currentIndex: number, array: TooltipValue[]) => TooltipValue): TooltipValue; (callbackfn: (previousValue: TooltipValue, currentValue: TooltipValue, currentIndex: number, array: TooltipValue[]) => TooltipValue, initialValue: TooltipValue): Toolt...\" } }, \"find\": { \"defaultValue\": null, \"description\": \"Returns the value of the first element in the array where predicate is true, and undefined\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\rorder, until it finds one where predicate returns true. If such an element is found, find\\rimmediately returns that element value. Otherwise, find returns undefined.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\rpredicate. If it is not provided, undefined is used instead.\", \"name\": \"find\", \"required\": true, \"type\": { \"name\": \"{ <S extends TooltipValue>(predicate: (this: void, value: TooltipValue, index: number, obj: TooltipValue[]) => value is S, thisArg?: any): S; (predicate: (value: TooltipValue, index: number, obj: TooltipValue[]) => boolean, thisArg?: any): TooltipValue; }\" } }, \"findIndex\": { \"defaultValue\": null, \"description\": \"Returns the index of the first element in the array where predicate is true, and -1\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\rorder, until it finds one where predicate returns true. If such an element is found,\\rfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\rpredicate. If it is not provided, undefined is used instead.\", \"name\": \"findIndex\", \"required\": true, \"type\": { \"name\": \"(predicate: (value: TooltipValue, index: number, obj: TooltipValue[]) => boolean, thisArg?: any) => number\" } }, \"fill\": { \"defaultValue\": null, \"description\": \"Returns the this object after filling the section identified by start and end with value\\n@param value value to fill array section with\\n@param start index to start filling the array at. If start is negative, it is treated as\\rlength+start where length is the length of the array.\\n@param end index to stop filling the array at. If end is negative, it is treated as\\rlength+end.\", \"name\": \"fill\", \"required\": true, \"type\": { \"name\": \"(value: TooltipValue, start?: number, end?: number) => TooltipValue[]\" } }, \"copyWithin\": { \"defaultValue\": null, \"description\": \"Returns the this object after copying a section of the array identified by start and end\\nto the same array starting at position target\\n@param target If target is negative, it is treated as length+target where length is the\\rlength of the array.\\n@param start If start is negative, it is treated as length+start. If end is negative, it\\ris treated as length+end.\\n@param end If not specified, length of the this object is used as its default value.\", \"name\": \"copyWithin\", \"required\": true, \"type\": { \"name\": \"(target: number, start: number, end?: number) => TooltipValue[]\" } }, \"__@iterator\": { \"defaultValue\": null, \"description\": \"Iterator\", \"name\": \"__@iterator\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<TooltipValue>\" } }, \"entries\": { \"defaultValue\": null, \"description\": \"Returns an iterable of key, value pairs for every entry in the array\", \"name\": \"entries\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<[number, TooltipValue]>\" } }, \"keys\": { \"defaultValue\": null, \"description\": \"Returns an iterable of keys in the array\", \"name\": \"keys\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<number>\" } }, \"values\": { \"defaultValue\": null, \"description\": \"Returns an iterable of values in the array\", \"name\": \"values\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<TooltipValue>\" } }, \"__@unscopables\": { \"defaultValue\": null, \"description\": \"Returns an object whose properties have the value 'true'\\nwhen they will be absent when used in a 'with' statement.\", \"name\": \"__@unscopables\", \"required\": true, \"type\": { \"name\": \"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }\" } }, \"includes\": { \"defaultValue\": null, \"description\": \"Determines whether an array includes a certain element, returning true or false as appropriate.\\n@param searchElement The element to search for.\\n@param fromIndex The position in this array at which to begin searching for searchElement.\", \"name\": \"includes\", \"required\": true, \"type\": { \"name\": \"(searchElement: TooltipValue, fromIndex?: number) => boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/series/tooltip.ts#getSeriesTooltipValues\"] = { docgenInfo: getSeriesTooltipValues.__docgenInfo, name: \"getSeriesTooltipValues\", path: \"src/lib/series/tooltip.ts#getSeriesTooltipValues\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { AxisTicksDimensions } from '../axes/axis_utils';\nimport { AxisSpec, Position } from '../series/specs';\nimport { Theme } from '../themes/theme';\nimport { AxisId } from './ids';\n\nexport interface Dimensions {\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n}\n\nexport interface Margins {\n  top: number;\n  bottom: number;\n  left: number;\n  right: number;\n}\n\n/**\n * Compute the chart dimensions. It's computed removing from the parent dimensions\n * the axis spaces, the legend and any other specified style margin and padding.\n * @param parentDimensions the parent dimension\n * @param chartTheme the theme style of the chart\n * @param axisDimensions the axis dimensions\n * @param axisSpecs the axis specs\n * @param showLegend is the legend shown\n * @param legendPosition the optional legend position\n */\nexport function computeChartDimensions(\n  parentDimensions: Dimensions,\n  chartTheme: Theme,\n  axisDimensions: Map<AxisId, AxisTicksDimensions>,\n  axisSpecs: Map<AxisId, AxisSpec>,\n  showLegend: boolean,\n  legendPosition?: Position,\n): Dimensions {\n  const { chartMargins, chartPaddings } = chartTheme;\n  const legendStyle = chartTheme.legend;\n  const { axisTitleStyle } = chartTheme.axes;\n\n  const axisTitleHeight = axisTitleStyle.fontSize + axisTitleStyle.padding;\n\n  let vLeftAxisSpecWidth = 0;\n  let vRightAxisSpecWidth = 0;\n  let hTopAxisSpecHeight = 0;\n  let hBottomAxisSpecHeight = 0;\n\n  axisDimensions.forEach(({ maxLabelBboxWidth = 0, maxLabelBboxHeight = 0 }, id) => {\n    const axisSpec = axisSpecs.get(id);\n    if (!axisSpec || axisSpec.hide) {\n      return;\n    }\n    const { position, tickSize, tickPadding } = axisSpec;\n    switch (position) {\n      case Position.Top:\n        hTopAxisSpecHeight +=\n          maxLabelBboxHeight + tickSize + tickPadding + chartMargins.top + axisTitleHeight;\n        break;\n      case Position.Bottom:\n        hBottomAxisSpecHeight +=\n          maxLabelBboxHeight + tickSize + tickPadding + chartMargins.bottom + axisTitleHeight;\n        break;\n      case Position.Left:\n        vLeftAxisSpecWidth +=\n          maxLabelBboxWidth + tickSize + tickPadding + chartMargins.left + axisTitleHeight;\n        break;\n      case Position.Right:\n        vRightAxisSpecWidth +=\n          maxLabelBboxWidth + tickSize + tickPadding + chartMargins.right + axisTitleHeight;\n        break;\n    }\n  });\n  // const hMargins = chartMargins.left + chartMargins.right;\n  const chartWidth = parentDimensions.width - vLeftAxisSpecWidth - vRightAxisSpecWidth;\n  const chartHeight = parentDimensions.height - hTopAxisSpecHeight - hBottomAxisSpecHeight;\n  let vMargin = 0;\n  if (hTopAxisSpecHeight === 0) {\n    vMargin += chartMargins.top;\n  }\n  if (hBottomAxisSpecHeight === 0) {\n    vMargin += chartMargins.bottom;\n  }\n  let hMargin = 0;\n  if (vLeftAxisSpecWidth === 0) {\n    hMargin += chartMargins.left;\n  }\n  if (vRightAxisSpecWidth === 0) {\n    hMargin += chartMargins.right;\n  }\n  let legendTopMargin = 0;\n  let legendLeftMargin = 0;\n  if (showLegend) {\n    switch (legendPosition) {\n      case Position.Right:\n        hMargin += legendStyle.verticalWidth;\n        break;\n      case Position.Left:\n        hMargin += legendStyle.verticalWidth;\n        legendLeftMargin = legendStyle.verticalWidth;\n        break;\n      case Position.Top:\n        vMargin += legendStyle.horizontalHeight;\n        legendTopMargin = legendStyle.horizontalHeight;\n        break;\n      case Position.Bottom:\n        vMargin += legendStyle.horizontalHeight;\n        break;\n    }\n  }\n  let top = 0;\n  let left = 0;\n  if (hTopAxisSpecHeight === 0) {\n    top = chartMargins.top + chartPaddings.top + legendTopMargin;\n  } else {\n    top = hTopAxisSpecHeight + chartPaddings.top + legendTopMargin;\n  }\n  if (vLeftAxisSpecWidth === 0) {\n    left = chartMargins.left + chartPaddings.left + legendLeftMargin;\n  } else {\n    left = vLeftAxisSpecWidth + chartPaddings.left + legendLeftMargin;\n  }\n  return {\n    top,\n    left,\n    width: chartWidth - hMargin - chartPaddings.left - chartPaddings.right,\n    height: chartHeight - vMargin - chartPaddings.top - chartPaddings.bottom,\n  };\n}\ntry {\n    // @ts-ignore\n    computeChartDimensions.displayName = \"computeChartDimensions\";\n    // @ts-ignore\n    computeChartDimensions.__docgenInfo = { \"description\": \"Compute the chart dimensions. It's computed removing from the parent dimensions\\nthe axis spaces, the legend and any other specified style margin and padding.\\n@param parentDimensions the parent dimension\\n@param chartTheme the theme style of the chart\\n@param axisDimensions the axis dimensions\\n@param axisSpecs the axis specs\\n@param showLegend is the legend shown\\n@param legendPosition the optional legend position\", \"displayName\": \"computeChartDimensions\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/utils/dimensions.ts#computeChartDimensions\"] = { docgenInfo: computeChartDimensions.__docgenInfo, name: \"computeChartDimensions\", path: \"src/lib/utils/dimensions.ts#computeChartDimensions\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { isHorizontal } from '../lib/axes/axis_utils';\nimport {\n  AnnotationDomainType,\n  AnnotationDomainTypes,\n  AnnotationSpec,\n  AnnotationType,\n  AnnotationTypes,\n  AxisSpec,\n  isLineAnnotation,\n  isRectAnnotation,\n  LineAnnotationDatum,\n  LineAnnotationSpec,\n  Position,\n  RectAnnotationDatum,\n  RectAnnotationSpec,\n  Rotation,\n} from '../lib/series/specs';\nimport { LineAnnotationStyle } from '../lib/themes/theme';\nimport { Dimensions } from '../lib/utils/dimensions';\nimport { AnnotationId, AxisId, GroupId } from '../lib/utils/ids';\nimport { Scale, ScaleType } from '../lib/utils/scales/scales';\nimport { Point } from './chart_state';\nimport { getAxesSpecForSpecId, isHorizontalRotation } from './utils';\n\nexport interface AnnotationTooltipState {\n  annotationType: AnnotationType;\n  isVisible: boolean;\n  header?: string;\n  details?: string;\n  transform: string;\n  top?: number;\n  left?: number;\n  renderTooltip?: (position: { transform: string; top: number; left: number; }, details?: string) => JSX.Element;\n}\nexport interface AnnotationDetails {\n  headerText?: string;\n  detailsText?: string;\n}\n\nexport interface AnnotationMarker {\n  icon: JSX.Element;\n  transform: string;\n  dimensions: { width: number; height: number; };\n  color: string;\n}\n\nexport type AnnotationLinePosition = [number, number, number, number];\n\nexport interface AnnotationLineProps {\n  position: AnnotationLinePosition;\n  tooltipLinePosition: AnnotationLinePosition;\n  details: AnnotationDetails;\n  marker?: AnnotationMarker;\n}\n\nexport interface AnnotationRectProps {\n  rect: {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n  };\n  details?: string;\n}\n\ninterface TransformPosition {\n  xPosition: number;\n  yPosition: number;\n  xOffset: number;\n  yOffset: number;\n}\n\n// TODO: add AnnotationTextProps\nexport type AnnotationDimensions = AnnotationLineProps[] | AnnotationRectProps[];\n\nexport const DEFAULT_LINE_OVERFLOW = 0;\n\nexport function computeYDomainLineAnnotationDimensions(\n  dataValues: LineAnnotationDatum[],\n  yScale: Scale,\n  chartRotation: Rotation,\n  lineOverflow: number,\n  axisPosition: Position,\n  chartDimensions: Dimensions,\n  lineColor: string,\n  marker?: JSX.Element,\n  markerDimensions?: { width: number; height: number; },\n): AnnotationLineProps[] {\n  const chartHeight = chartDimensions.height;\n  const chartWidth = chartDimensions.width;\n  const isHorizontalChartRotation = isHorizontalRotation(chartRotation);\n  const markerOffsets = markerDimensions || { width: 0, height: 0 };\n  const lineProps: AnnotationLineProps[] = [];\n\n  dataValues.forEach((datum: LineAnnotationDatum) => {\n    const { dataValue } = datum;\n    const details = {\n      detailsText: datum.details,\n      headerText: datum.header || dataValue.toString(),\n    };\n\n    // d3.scale will return 0 for '', rendering the line incorrectly at 0\n    if (dataValue === '') {\n      return;\n    }\n\n    const scaledYValue = yScale.scale(dataValue);\n    if (isNaN(scaledYValue)) {\n      return;\n    }\n\n    const [domainStart, domainEnd] = yScale.domain;\n    if (domainStart > dataValue || domainEnd < dataValue) {\n      return;\n    }\n\n    const yDomainPosition = scaledYValue;\n\n    const leftHorizontalAxis: AnnotationLinePosition =\n      [0 - lineOverflow, yDomainPosition, chartWidth, yDomainPosition];\n    const rightHorizontaAxis: AnnotationLinePosition =\n      [0, yDomainPosition, chartWidth + lineOverflow, yDomainPosition];\n\n    // Without overflow applied\n    const baseLinePosition: AnnotationLinePosition = isHorizontalChartRotation ?\n      [0, yDomainPosition, chartWidth, yDomainPosition]\n      : [yDomainPosition, 0, yDomainPosition, chartHeight];\n\n    const linePosition: AnnotationLinePosition = isHorizontalChartRotation ?\n      (axisPosition === Position.Left) ? leftHorizontalAxis : rightHorizontaAxis\n      : [0, yDomainPosition, chartHeight + lineOverflow, yDomainPosition];\n\n    const markerPosition: AnnotationLinePosition = isHorizontalChartRotation ?\n      [...linePosition] as AnnotationLinePosition\n      : [yDomainPosition, 0, yDomainPosition, chartHeight + lineOverflow];\n\n    if (isHorizontalChartRotation) {\n      if (axisPosition === Position.Left) {\n        markerPosition[0] -= markerOffsets.width;\n      } else {\n        markerPosition[2] += markerOffsets.width;\n      }\n      if (chartRotation === 180) {\n        markerPosition[1] = chartHeight - markerPosition[1];\n        markerPosition[3] = chartHeight - markerPosition[3];\n      }\n    } else {\n      markerPosition[3] += markerOffsets.height;\n      if (chartRotation === 90) {\n        markerPosition[0] = chartWidth - markerPosition[0];\n        markerPosition[2] = chartWidth - markerPosition[2];\n      }\n    }\n\n    const markerTransform = getAnnotationLineTooltipTransform(chartRotation, markerPosition, axisPosition);\n    const annotationMarker = marker ?\n      { icon: marker, transform: markerTransform, color: lineColor, dimensions: markerOffsets }\n      : undefined;\n    const lineProp = {\n      position: linePosition,\n      details,\n      marker: annotationMarker,\n      tooltipLinePosition: baseLinePosition,\n    };\n\n    lineProps.push(lineProp);\n  });\n\n  return lineProps;\n}\n\nexport function computeXDomainLineAnnotationDimensions(\n  dataValues: LineAnnotationDatum[],\n  xScale: Scale,\n  chartRotation: Rotation,\n  lineOverflow: number,\n  axisPosition: Position,\n  chartDimensions: Dimensions,\n  lineColor: string,\n  marker?: JSX.Element,\n  markerDimensions?: { width: number; height: number; },\n): AnnotationLineProps[] {\n  const chartHeight = chartDimensions.height;\n  const chartWidth = chartDimensions.width;\n  const markerOffsets = markerDimensions || { width: 0, height: 0 };\n  const lineProps: AnnotationLineProps[] = [];\n\n  dataValues.forEach((datum: LineAnnotationDatum) => {\n    const { dataValue } = datum;\n    const details = {\n      detailsText: datum.details,\n      headerText: datum.header || dataValue.toString(),\n    };\n\n    // TODO: make offset dependent on annotationSpec.alignment (left, center, right)\n    const offset = xScale.bandwidth / 2;\n    const isContinuous = xScale.type !== ScaleType.Ordinal;\n\n    const scaledXValue = xScale.scale(dataValue);\n\n    // d3.scale will return 0 for '', rendering the line incorrectly at 0\n    if (isNaN(scaledXValue) || (isContinuous && dataValue === '')) {\n      return;\n    }\n\n    if (isContinuous) {\n      const [domainStart, domainEnd] = xScale.domain;\n\n      if (domainStart > dataValue || domainEnd < dataValue) {\n        return;\n      }\n    }\n\n    const xDomainPosition = scaledXValue + offset;\n\n    let linePosition: AnnotationLinePosition = [0, 0, 0, 0];\n    let tooltipLinePosition: AnnotationLinePosition = [0, 0, 0, 0];\n    let markerPosition: AnnotationLinePosition = [0, 0, 0, 0];\n\n    switch (chartRotation) {\n      case 0: {\n        const startY = (axisPosition === Position.Bottom) ? 0 : -lineOverflow;\n        const endY = (axisPosition === Position.Bottom) ? chartHeight + lineOverflow : chartHeight;\n        linePosition = [xDomainPosition, startY, xDomainPosition, endY];\n        tooltipLinePosition = [xDomainPosition, 0, xDomainPosition, chartHeight];\n\n        const startMarkerY = (axisPosition === Position.Bottom) ? 0 : -lineOverflow - markerOffsets.height;\n        const endMarkerY = (axisPosition === Position.Bottom) ?\n          chartHeight + lineOverflow + markerOffsets.height : chartHeight;\n        markerPosition = [xDomainPosition, startMarkerY, xDomainPosition, endMarkerY];\n        break;\n      }\n      case 90: {\n        linePosition = [xDomainPosition, -lineOverflow, xDomainPosition, chartWidth];\n        tooltipLinePosition = [0, xDomainPosition, chartWidth, xDomainPosition];\n\n        const markerStartX = -lineOverflow - markerOffsets.width;\n        markerPosition = [markerStartX, xDomainPosition, chartWidth, xDomainPosition];\n        break;\n      }\n      case -90: {\n        linePosition = [xDomainPosition, -lineOverflow, xDomainPosition, chartWidth];\n        tooltipLinePosition = [0, chartHeight - xDomainPosition, chartWidth, chartHeight - xDomainPosition];\n\n        const markerStartX = -lineOverflow - markerOffsets.width;\n        markerPosition = [markerStartX, chartHeight - xDomainPosition, chartWidth, chartHeight - xDomainPosition];\n        break;\n      }\n      case 180: {\n        const startY = (axisPosition === Position.Bottom) ? 0 : -lineOverflow;\n        const endY = (axisPosition === Position.Bottom) ? chartHeight + lineOverflow : chartHeight;\n        linePosition = [xDomainPosition, startY, xDomainPosition, endY];\n        // tooltipLinePosition = [chartWidth - xDomainPosition, 0, chartWidth - xDomainPosition, chartHeight];\n        tooltipLinePosition = [xDomainPosition, 0, xDomainPosition, chartHeight];\n\n        // tooltipLinePosition = [0, chartWidth - xDomainPosition, chartHeight, chartWidth - xDomainPosition];\n\n        const startMarkerY = (axisPosition === Position.Bottom) ? 0 : -lineOverflow - markerOffsets.height;\n        const endMarkerY = (axisPosition === Position.Bottom) ?\n          chartHeight + lineOverflow + markerOffsets.height : chartHeight;\n        markerPosition = [chartWidth - xDomainPosition, startMarkerY, chartWidth - xDomainPosition, endMarkerY];\n        break;\n      }\n    }\n\n    const markerTransform = getAnnotationLineTooltipTransform(chartRotation, markerPosition, axisPosition);\n    const annotationMarker = marker ?\n      { icon: marker, transform: markerTransform, color: lineColor, dimensions: markerOffsets }\n      : undefined;\n    const lineProp = { position: linePosition, details, marker: annotationMarker, tooltipLinePosition };\n    lineProps.push(lineProp);\n  });\n\n  return lineProps;\n}\n\nexport function computeLineAnnotationDimensions(\n  annotationSpec: LineAnnotationSpec,\n  chartDimensions: Dimensions,\n  chartRotation: Rotation,\n  yScales: Map<GroupId, Scale>,\n  xScale: Scale,\n  axisPosition: Position,\n): AnnotationLineProps[] | null {\n  const { domainType, dataValues, marker, markerDimensions, hideLines } = annotationSpec;\n\n  if (hideLines) {\n    return null;\n  }\n\n  // TODO : make line overflow configurable via prop\n  const lineOverflow = DEFAULT_LINE_OVERFLOW;\n\n  // this type is guaranteed as this has been merged with default\n  const lineStyle = annotationSpec.style as LineAnnotationStyle;\n  const lineColor = lineStyle.line.stroke;\n\n  if (domainType === AnnotationDomainTypes.XDomain) {\n    return computeXDomainLineAnnotationDimensions(\n      dataValues,\n      xScale,\n      chartRotation,\n      lineOverflow,\n      axisPosition,\n      chartDimensions,\n      lineColor,\n      marker,\n      markerDimensions,\n    );\n  }\n\n  const groupId = annotationSpec.groupId;\n  const yScale = yScales.get(groupId);\n  if (!yScale) {\n    return null;\n  }\n\n  return computeYDomainLineAnnotationDimensions(\n    dataValues,\n    yScale,\n    chartRotation,\n    lineOverflow,\n    axisPosition,\n    chartDimensions,\n    lineColor,\n    marker,\n    markerDimensions,\n  );\n}\n\nexport function scaleAndValidateDatum(dataValue: any, scale: Scale): any | null {\n  const isContinuous = scale.type !== ScaleType.Ordinal;\n\n  const scaledValue = scale.scale(dataValue);\n\n  // d3.scale will return 0 for '', rendering the line incorrectly at 0\n  if (isNaN(scaledValue) || (isContinuous && dataValue === '')) {\n    return null;\n  }\n\n  if (isContinuous) {\n    const [domainStart, domainEnd] = scale.domain;\n\n    if (domainStart > dataValue || domainEnd < dataValue) {\n      return null;\n    }\n  }\n\n  return scaledValue;\n}\n\nexport function computeRectAnnotationDimensions(\n  annotationSpec: RectAnnotationSpec,\n  yScales: Map<GroupId, Scale>,\n  xScale: Scale,\n): AnnotationRectProps[] | null {\n  const { dataValues } = annotationSpec;\n\n  const groupId = annotationSpec.groupId;\n  const yScale = yScales.get(groupId);\n  if (!yScale) {\n    return null;\n  }\n\n  const xDomain = xScale.domain;\n  const yDomain = yScale.domain;\n\n  const rectsProps: AnnotationRectProps[] = [];\n\n  dataValues.forEach((dataValue: RectAnnotationDatum) => {\n    let { x0, x1, y0, y1 } = dataValue.coordinates;\n\n    // if everything is null, return; otherwise we coerce the other coordinates\n    if (x0 == null && x1 == null && y0 == null && y1 == null) {\n      return;\n    }\n\n    if (x0 == null) {\n      // if x1 is defined, we want the rect to draw to the end of the scale\n      x0 = xDomain[xDomain.length - 1];\n    }\n\n    if (x1 == null) {\n      // if x0 is defined, we want the rect to draw to the start of the scale\n      x1 = xDomain[0];\n    }\n\n    if (y0 == null) {\n      // if y0 is defined, we want the rect to draw to the end of the scale\n      y0 = yDomain[yDomain.length - 1];\n    }\n\n    if (y1 == null) {\n      // if y1 is defined, we want the rect to draw to the start of the scale\n      y1 = yDomain[0];\n    }\n\n    let x0Scaled = scaleAndValidateDatum(x0, xScale);\n    let x1Scaled = scaleAndValidateDatum(x1, xScale);\n    const y0Scaled = scaleAndValidateDatum(y0, yScale);\n    const y1Scaled = scaleAndValidateDatum(y1, yScale);\n\n    // TODO: surface this as a warning\n    if ([x0Scaled, x1Scaled, y0Scaled, y1Scaled].includes(null)) {\n      return;\n    }\n\n    let xOffset = 0;\n    if (xScale.bandwidth > 0) {\n      const xBand = xScale.bandwidth / (1 - xScale.barsPadding);\n      xOffset = (xBand - xScale.bandwidth) / 2;\n    }\n    x0Scaled = x0Scaled - xOffset;\n    x1Scaled = x1Scaled - xOffset;\n\n    const minX = Math.min(x0Scaled, x1Scaled);\n    const minY = Math.min(y0Scaled, y1Scaled);\n\n    const deltaX = Math.abs(x0Scaled - x1Scaled);\n    const deltaY = Math.abs(y0Scaled - y1Scaled);\n\n    const xOrigin = minX;\n    const yOrigin = minY;\n\n    const width = deltaX;\n    const height = deltaY;\n\n    const rectDimensions = {\n      x: xOrigin,\n      y: yOrigin,\n      width,\n      height,\n    };\n\n    rectsProps.push({\n      rect: rectDimensions,\n      details: dataValue.details,\n    });\n  });\n\n  return rectsProps;\n}\n\nexport function getAnnotationAxis(\n  axesSpecs: Map<AxisId, AxisSpec>,\n  groupId: GroupId,\n  domainType: AnnotationDomainType,\n): Position | null {\n  const { xAxis, yAxis } = getAxesSpecForSpecId(axesSpecs, groupId);\n\n  const isXDomainAnnotation = isXDomain(domainType);\n  const annotationAxis = isXDomainAnnotation ? xAxis : yAxis;\n\n  return annotationAxis ? annotationAxis.position : null;\n}\n\nexport function computeAnnotationDimensions(\n  annotations: Map<AnnotationId, AnnotationSpec>,\n  chartDimensions: Dimensions,\n  chartRotation: Rotation,\n  yScales: Map<GroupId, Scale>,\n  xScale: Scale,\n  axesSpecs: Map<AxisId, AxisSpec>,\n): Map<AnnotationId, AnnotationDimensions> {\n  const annotationDimensions = new Map<AnnotationId, AnnotationDimensions>();\n\n  annotations.forEach((annotationSpec: AnnotationSpec, annotationId: AnnotationId) => {\n    if (isLineAnnotation(annotationSpec)) {\n      const { groupId, domainType } = annotationSpec;\n      const annotationAxisPosition = getAnnotationAxis(axesSpecs, groupId, domainType);\n\n      if (!annotationAxisPosition) {\n        return;\n      }\n\n      const dimensions = computeLineAnnotationDimensions(\n        annotationSpec,\n        chartDimensions,\n        chartRotation,\n        yScales,\n        xScale,\n        annotationAxisPosition,\n      );\n\n      if (dimensions) {\n        annotationDimensions.set(annotationId, dimensions);\n      }\n    } else if (isRectAnnotation(annotationSpec)) {\n      const dimensions = computeRectAnnotationDimensions(\n        annotationSpec,\n        yScales,\n        xScale,\n      );\n\n      if (dimensions) {\n        annotationDimensions.set(annotationId, dimensions);\n      }\n    }\n  });\n\n  return annotationDimensions;\n}\n\nexport function isWithinLineBounds(\n  axisPosition: Position,\n  linePosition: AnnotationLinePosition,\n  rawCursorPosition: Point,\n  offset: number,\n  chartRotation: Rotation,\n  chartDimensions: Dimensions,\n  domainType: AnnotationDomainType,\n  marker?: AnnotationMarker,\n): boolean {\n  const [startX, startY, endX, endY] = linePosition;\n  const isXDomainAnnotation = isXDomain(domainType);\n  const cursorPosition = getRotatedCursor(rawCursorPosition, chartDimensions, chartRotation);\n\n  let isCursorWithinXBounds = false;\n  let isCursorWithinYBounds = false;\n\n  const isHorizontalChartRotation = isHorizontalRotation(chartRotation);\n  const chartWidth = chartDimensions.width;\n  const chartHeight = chartDimensions.height;\n\n  if (isXDomainAnnotation) {\n    isCursorWithinXBounds = isHorizontalChartRotation ?\n      cursorPosition.x >= startX - offset && cursorPosition.x <= endX + offset\n      : cursorPosition.x >= chartHeight - startX - offset && cursorPosition.x <= chartHeight - endX + offset;\n    isCursorWithinYBounds = isHorizontalChartRotation ?\n      cursorPosition.y >= startY && cursorPosition.y <= endY\n      : cursorPosition.y >= startY - offset && cursorPosition.y <= endY + offset;\n  } else {\n    isCursorWithinXBounds = isHorizontalChartRotation ?\n      cursorPosition.x >= startX && cursorPosition.x <= endX\n      : cursorPosition.x >= startX - offset && cursorPosition.x <= endX + offset;\n    isCursorWithinYBounds = isHorizontalChartRotation ?\n      cursorPosition.y >= startY - offset && cursorPosition.y <= endY + offset\n      : cursorPosition.y >= chartWidth - startY - offset && cursorPosition.y <= chartWidth - endY + offset;\n  }\n\n  // If it's within cursor bounds, return true (no need to check marker bounds)\n  if (isCursorWithinXBounds && isCursorWithinYBounds) {\n    return true;\n  }\n\n  if (!marker) {\n    return false;\n  }\n\n  // Check if cursor within marker bounds\n  let isCursorWithinMarkerXBounds = false;\n  let isCursorWithinMarkerYBounds = false;\n\n  const markerWidth = marker.dimensions.width;\n  const markerHeight = marker.dimensions.height;\n  const markerWidthOffset = offset + markerWidth / 2;\n  const markerHeightOffset = offset + markerHeight / 2;\n\n  if (isXDomainAnnotation) {\n    const bottomAxisYBounds = chartRotation === 0 ?\n      cursorPosition.y <= endY + markerHeight && cursorPosition.y >= endY\n      : cursorPosition.y >= startY - markerHeight && cursorPosition.y <= startY;\n    const topAxisYBounds = chartRotation === 0 ?\n      cursorPosition.y >= startY - markerHeight && cursorPosition.y <= startY\n      : cursorPosition.y <= endY + markerHeight && cursorPosition.y >= endY;\n\n    isCursorWithinMarkerXBounds = isHorizontalChartRotation ?\n      cursorPosition.x <= endX + markerWidthOffset && cursorPosition.x >= startX - markerWidthOffset\n      : cursorPosition.x >= startX - markerWidthOffset && cursorPosition.x <= startX + markerWidthOffset;\n    isCursorWithinMarkerYBounds = isHorizontalChartRotation ?\n      (axisPosition === Position.Top ? topAxisYBounds : bottomAxisYBounds)\n      : cursorPosition.y >= startY - markerHeightOffset && cursorPosition.y <= endY + markerHeightOffset;\n  } else {\n    const leftAxisXBounds = chartRotation === 0 ?\n      cursorPosition.x >= startX - markerWidth && cursorPosition.x <= startX\n      : cursorPosition.x <= endX + markerWidth && cursorPosition.x >= endX;\n\n    const rightAxisXBounds = chartRotation === 0 ?\n      cursorPosition.x <= endX + markerWidth && cursorPosition.x >= endX\n      : cursorPosition.x >= startX - markerWidth && cursorPosition.x <= startX;\n\n    isCursorWithinMarkerXBounds = isHorizontalChartRotation ?\n      (axisPosition === Position.Right ? rightAxisXBounds : leftAxisXBounds)\n      : cursorPosition.x <= endX + offset + markerWidth && cursorPosition.x >= startX - offset - markerWidth;\n    isCursorWithinMarkerYBounds = isHorizontalChartRotation ?\n      cursorPosition.y >= startY - markerHeightOffset && cursorPosition.y <= endY + markerHeightOffset\n      : cursorPosition.y >= chartWidth - startY - markerHeightOffset\n      && cursorPosition.y <= chartWidth - endY + markerHeightOffset;\n  }\n\n  return isCursorWithinMarkerXBounds && isCursorWithinMarkerYBounds;\n}\n\nexport function isVerticalAnnotationLine(\n  isXDomainAnnotation: boolean,\n  isHorizontalChartRotation: boolean,\n): boolean {\n  if (isXDomainAnnotation) {\n    return isHorizontalChartRotation;\n  }\n\n  return !isHorizontalChartRotation;\n}\n\nexport function getAnnotationLineTooltipXOffset(\n  chartRotation: Rotation,\n  axisPosition: Position,\n): number {\n  let xOffset = 0;\n\n  const isHorizontalAxis = isHorizontal(axisPosition);\n  const isChartHorizontalRotation = isHorizontalRotation(chartRotation);\n\n  if (isHorizontalAxis) {\n    xOffset = isChartHorizontalRotation ? 50 : 0;\n  } else {\n    xOffset = isChartHorizontalRotation ? (axisPosition === Position.Right ? 100 : 0) : 50;\n  }\n\n  return xOffset;\n}\n\nexport function getAnnotationLineTooltipYOffset(\n  chartRotation: Rotation,\n  axisPosition: Position,\n): number {\n  let yOffset = 0;\n\n  const isHorizontalAxis = isHorizontal(axisPosition);\n  const isChartHorizontalRotation = isHorizontalRotation(chartRotation);\n\n  if (isHorizontalAxis) {\n    yOffset = isChartHorizontalRotation ? (axisPosition === Position.Top ? 0 : 100) : 50;\n  } else {\n    yOffset = isChartHorizontalRotation ? 50 : 100;\n  }\n\n  return yOffset;\n}\n\nexport function getAnnotationLineTooltipPosition(\n  chartRotation: Rotation,\n  linePosition: AnnotationLinePosition,\n  axisPosition: Position,\n): TransformPosition {\n  const [startX, startY, endX, endY] = linePosition;\n\n  const xPosition = (axisPosition === Position.Right) ? endX : startX;\n  const yPosition = (axisPosition === Position.Top) ? startY : endY;\n\n  const xOffset = getAnnotationLineTooltipXOffset(chartRotation, axisPosition);\n  const yOffset = getAnnotationLineTooltipYOffset(chartRotation, axisPosition);\n\n  return { xPosition, yPosition, xOffset, yOffset };\n}\n\nexport function toTransformString(position: TransformPosition): string {\n  const { xPosition, yPosition, xOffset, yOffset } = position;\n\n  const xTranslation = `calc(${xPosition}px - ${xOffset}%)`;\n  const yTranslation = `calc(${yPosition}px - ${yOffset}%)`;\n\n  return `translate(${xTranslation},${yTranslation})`;\n}\n\nexport function getAnnotationLineTooltipTransform(\n  chartRotation: Rotation,\n  linePosition: AnnotationLinePosition,\n  axisPosition: Position,\n): string {\n  const position = getAnnotationLineTooltipPosition(\n    chartRotation,\n    linePosition,\n    axisPosition,\n  );\n\n  return toTransformString(position);\n}\n\nexport function isXDomain(domainType: AnnotationDomainType): boolean {\n  return domainType === AnnotationDomainTypes.XDomain;\n}\n\nexport function computeLineAnnotationTooltipState(\n  cursorPosition: Point,\n  annotationLines: AnnotationLineProps[],\n  groupId: GroupId,\n  domainType: AnnotationDomainType,\n  style: LineAnnotationStyle,\n  chartRotation: Rotation,\n  chartDimensions: Dimensions,\n  axesSpecs: Map<AxisId, AxisSpec>,\n): AnnotationTooltipState {\n\n  const annotationTooltipState: AnnotationTooltipState = {\n    isVisible: false,\n    transform: '',\n    annotationType: AnnotationTypes.Line,\n  };\n\n  const { xAxis, yAxis } = getAxesSpecForSpecId(axesSpecs, groupId);\n  const isXDomainAnnotation = isXDomain(domainType);\n  const annotationAxis = isXDomainAnnotation ? xAxis : yAxis;\n  const chartWidth = chartDimensions.width;\n  const chartHeight = chartDimensions.height;\n\n  if (!annotationAxis) {\n    return annotationTooltipState;\n  }\n\n  const axisPosition = annotationAxis.position;\n\n  annotationLines.forEach((line: AnnotationLineProps) => {\n    const lineOffset = style.line.strokeWidth / 2;\n    const isWithinBounds = isWithinLineBounds(\n      axisPosition,\n      line.position,\n      cursorPosition,\n      lineOffset,\n      chartRotation,\n      chartDimensions,\n      domainType,\n      line.marker,\n    );\n\n    if (isWithinBounds) {\n      annotationTooltipState.isVisible = true;\n\n      // Position tooltip based on axis position & lineOffset amount\n      const [tooltipStartX, tooltipStartY, tooltipEndX, tooltipEndY] = line.tooltipLinePosition;\n      const tooltipLinePosition: AnnotationLinePosition = [tooltipStartX, tooltipStartY, tooltipEndX, tooltipEndY];\n\n      annotationTooltipState.transform = getAnnotationLineTooltipTransform(\n        chartRotation,\n        tooltipLinePosition,\n        axisPosition,\n      );\n\n      if (chartRotation === 180 && domainType === AnnotationDomainTypes.YDomain) {\n        const flippedYDomainTooltipLinePosition: AnnotationLinePosition =\n          [tooltipStartX, chartHeight - tooltipStartY, tooltipEndX, chartHeight - tooltipEndY];\n\n        annotationTooltipState.transform = getAnnotationLineTooltipTransform(\n          chartRotation,\n          flippedYDomainTooltipLinePosition,\n          axisPosition,\n        );\n      }\n      if (chartRotation === 180 && domainType === AnnotationDomainTypes.XDomain) {\n        const rotatedXDomainTooltipLinePosition: AnnotationLinePosition =\n          [chartWidth - tooltipStartX, tooltipStartY, chartWidth - tooltipEndX, tooltipEndY];\n        annotationTooltipState.transform = getAnnotationLineTooltipTransform(\n          chartRotation,\n          rotatedXDomainTooltipLinePosition,\n          axisPosition,\n        );\n      }\n      if (chartRotation === 90 && domainType === AnnotationDomainTypes.YDomain) {\n        const rotatedYDomainTooltipLinePosition: AnnotationLinePosition =\n          [chartWidth - tooltipStartX, tooltipStartY, chartWidth - tooltipEndX, tooltipEndY];\n\n        annotationTooltipState.transform = getAnnotationLineTooltipTransform(\n          chartRotation,\n          rotatedYDomainTooltipLinePosition,\n          axisPosition,\n        );\n      }\n\n      if (line.details) {\n        annotationTooltipState.header = line.details.headerText;\n        annotationTooltipState.details = line.details.detailsText;\n      }\n    }\n  });\n\n  return annotationTooltipState;\n}\n\nexport function isWithinRectBounds(\n  cursorPosition: Point,\n  { startX, endX, startY, endY }:\n    { startX: number; endX: number; startY: number; endY: number; },\n): boolean {\n  const withinXBounds = cursorPosition.x > startX && cursorPosition.x < endX;\n  const withinYBounds = cursorPosition.y > startY && cursorPosition.y < endY;\n\n  return withinXBounds && withinYBounds;\n}\n\nexport function isRightRectTooltip(\n  chartRotation: Rotation,\n  cursorPosition: Point,\n  chartWidth: number,\n) {\n  const xPosition = isHorizontalRotation(chartRotation) ? cursorPosition.x : cursorPosition.y;\n\n  return chartRotation === -90 ?\n    xPosition > chartWidth / 2\n    : xPosition < chartWidth / 2;\n}\n\nexport function isBottomRectTooltip(\n  chartRotation: Rotation,\n  cursorPosition: Point,\n  chartHeight: number,\n) {\n  const yPosition = isHorizontalRotation(chartRotation) ? cursorPosition.y : cursorPosition.x;\n  return (chartRotation === 180) ?\n    yPosition > chartHeight / 2\n    : yPosition < chartHeight / 2;\n}\n\nexport function computeRectTooltipLeft(\n  chartRotation: Rotation,\n  isRightTooltip: boolean,\n  { startX, endX }: { startX: number, endX: number },\n  cursorX: number,\n  chartWidth: number,\n): number {\n  const isHorizontalChartRotation = isHorizontalRotation(chartRotation);\n  const horizontalLeft = isRightTooltip ? endX : startX;\n  return isHorizontalChartRotation ?\n    (chartRotation === 180 ? chartWidth - horizontalLeft : horizontalLeft)\n    : cursorX;\n}\n\nexport function computeRectTooltipTop(\n  chartRotation: Rotation,\n  isBottomTooltip: boolean,\n  { startX, endX }: { startX: number, endX: number },\n  cursorY: number,\n  chartHeight: number,\n): number {\n  const isHorizontalChartRotation = isHorizontalRotation(chartRotation);\n  const verticalTop = isBottomTooltip ? endX : startX;\n\n  return isHorizontalChartRotation ?\n    cursorY\n    : (chartRotation === -90) ? chartHeight - verticalTop : verticalTop;\n}\n\nexport function computeRectTooltipOffset(\n  isRightTooltip: boolean,\n  isBottomTooltip: boolean,\n  chartRotation: Rotation,\n): { offsetLeft: string; offsetTop: string; } {\n  const offsetLeft = isRightTooltip ?\n    (chartRotation === 180 ? '-100%' : '0')\n    : (chartRotation === 180 ? '0' : '-100%');\n  const offsetTop = isBottomTooltip ?\n    (chartRotation === -90 ? '-100%' : '0')\n    : (chartRotation === -90 ? '0' : '-100%');\n\n  return { offsetLeft, offsetTop };\n}\n\nexport function getRotatedCursor(\n  rawCursorPosition: Point,\n  chartDimensions: Dimensions,\n  chartRotation: Rotation,\n): Point {\n  const { x, y } = rawCursorPosition;\n  const { height, width } = chartDimensions;\n  switch (chartRotation) {\n    case 0:\n      return { x, y };\n    case 90:\n      return { x: y, y: x };\n    case -90:\n      return { x: height - y, y: width - x };\n    case 180:\n      return { x: width - x, y: height - y };\n  }\n}\n\nexport function computeRectAnnotationTooltipState(\n  rawCursorPosition: Point,\n  annotationRects: AnnotationRectProps[],\n  chartRotation: Rotation,\n  chartDimensions: Dimensions,\n  renderTooltip?: (position: { transform: string; top: number; left: number; }, details?: string) => JSX.Element,\n): AnnotationTooltipState {\n  const cursorPosition = getRotatedCursor(rawCursorPosition, chartDimensions, chartRotation);\n\n  const annotationTooltipState: AnnotationTooltipState = {\n    isVisible: false,\n    transform: '',\n    annotationType: AnnotationTypes.Rectangle,\n  };\n\n  const isRightTooltip = isRightRectTooltip(chartRotation, cursorPosition, chartDimensions.width);\n  const isBottomTooltip = isBottomRectTooltip(chartRotation, cursorPosition, chartDimensions.height);\n\n  annotationRects.forEach((rectProps: AnnotationRectProps) => {\n    const { rect, details } = rectProps;\n    const startX = rect.x;\n    const endX = startX + rect.width;\n\n    const startY = rect.y;\n    const endY = startY + rect.height;\n\n    const isWithinBounds = isWithinRectBounds(\n      cursorPosition,\n      { startX, endX, startY, endY },\n    );\n\n    if (isWithinBounds) {\n      annotationTooltipState.isVisible = true;\n      annotationTooltipState.details = details;\n\n      const tooltipLeft = computeRectTooltipLeft(\n        chartRotation,\n        isRightTooltip,\n        { startX, endX },\n        rawCursorPosition.x,\n        chartDimensions.width,\n      );\n      const tooltipTop = computeRectTooltipTop(\n        chartRotation,\n        isBottomTooltip,\n        { startX, endX },\n        rawCursorPosition.y,\n        chartDimensions.height,\n      );\n\n      const { offsetLeft, offsetTop } = computeRectTooltipOffset(isRightTooltip, isBottomTooltip, chartRotation);\n\n      annotationTooltipState.top = tooltipTop;\n      annotationTooltipState.left = tooltipLeft;\n      annotationTooltipState.transform = `translate(${offsetLeft}, ${offsetTop})`;\n      annotationTooltipState.renderTooltip = renderTooltip;\n    }\n  });\n\n  return annotationTooltipState;\n}\n\nexport function computeAnnotationTooltipState(\n  cursorPosition: Point,\n  annotationDimensions: Map<AnnotationId, any>,\n  annotationSpecs: Map<AnnotationId, AnnotationSpec>,\n  chartRotation: Rotation,\n  axesSpecs: Map<AxisId, AxisSpec>,\n  chartDimensions: Dimensions,\n): AnnotationTooltipState | null {\n  for (const [annotationId, annotationDimension] of annotationDimensions) {\n    const spec = annotationSpecs.get(annotationId);\n\n    if (!spec) {\n      continue;\n    }\n\n    const groupId = spec.groupId;\n\n    if (isLineAnnotation(spec)) {\n      if (spec.hideTooltips || spec.hideLines) {\n        continue;\n      }\n\n      const lineAnnotationTooltipState = computeLineAnnotationTooltipState(\n        cursorPosition,\n        annotationDimension,\n        groupId,\n        spec.domainType,\n        spec.style as LineAnnotationStyle, // this type is guaranteed as this has been merged with default\n        chartRotation,\n        chartDimensions,\n        axesSpecs,\n      );\n\n      if (lineAnnotationTooltipState.isVisible) {\n        return lineAnnotationTooltipState;\n      }\n    } else if (isRectAnnotation(spec)) {\n      const rectAnnotationTooltipState = computeRectAnnotationTooltipState(\n        cursorPosition,\n        annotationDimension,\n        chartRotation,\n        chartDimensions,\n        spec.renderTooltip,\n      );\n\n      if (rectAnnotationTooltipState.isVisible) {\n        return rectAnnotationTooltipState;\n      }\n    }\n  }\n\n  return null;\n}\ntry {\n    // @ts-ignore\n    toTransformString.displayName = \"toTransformString\";\n    // @ts-ignore\n    toTransformString.__docgenInfo = { \"description\": \"\", \"displayName\": \"toTransformString\", \"props\": { \"xPosition\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"xPosition\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"yPosition\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"yPosition\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"xOffset\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"xOffset\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"yOffset\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"yOffset\", \"required\": true, \"type\": { \"name\": \"number\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/state/annotation_utils.ts#toTransformString\"] = { docgenInfo: toTransformString.__docgenInfo, name: \"toTransformString\", path: \"src/state/annotation_utils.ts#toTransformString\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    isXDomain.displayName = \"isXDomain\";\n    // @ts-ignore\n    isXDomain.__docgenInfo = { \"description\": \"\", \"displayName\": \"isXDomain\", \"props\": { \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of a string.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"charAt\": { \"defaultValue\": null, \"description\": \"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.\", \"name\": \"charAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => string\" } }, \"charCodeAt\": { \"defaultValue\": null, \"description\": \"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.\", \"name\": \"charCodeAt\", \"required\": true, \"type\": { \"name\": \"(index: number) => number\" } }, \"concat\": { \"defaultValue\": null, \"description\": \"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.\", \"name\": \"concat\", \"required\": true, \"type\": { \"name\": \"(...strings: string[]) => string\" } }, \"indexOf\": { \"defaultValue\": null, \"description\": \"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.\", \"name\": \"indexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"lastIndexOf\": { \"defaultValue\": null, \"description\": \"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.\", \"name\": \"lastIndexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"localeCompare\": { \"defaultValue\": null, \"description\": \"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.\", \"name\": \"localeCompare\", \"required\": true, \"type\": { \"name\": \"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }\" } }, \"match\": { \"defaultValue\": null, \"description\": \"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.\", \"name\": \"match\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }\" } }, \"replace\": { \"defaultValue\": null, \"description\": \"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.\", \"name\": \"replace\", \"required\": true, \"type\": { \"name\": \"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri...\" } }, \"search\": { \"defaultValue\": null, \"description\": \"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.\", \"name\": \"search\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }\" } }, \"slice\": { \"defaultValue\": null, \"description\": \"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\rIf this value is not specified, the substring continues to the end of stringObj.\", \"name\": \"slice\", \"required\": true, \"type\": { \"name\": \"(start?: number, end?: number) => string\" } }, \"split\": { \"defaultValue\": null, \"description\": \"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.\", \"name\": \"split\", \"required\": true, \"type\": { \"name\": \"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }\" } }, \"substring\": { \"defaultValue\": null, \"description\": \"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\rIf end is omitted, the characters from start through the end of the original string are returned.\", \"name\": \"substring\", \"required\": true, \"type\": { \"name\": \"(start: number, end?: number) => string\" } }, \"toLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to lowercase.\", \"name\": \"toLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toUpperCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to uppercase.\", \"name\": \"toUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleUpperCase\": { \"defaultValue\": null, \"description\": \"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trim\": { \"defaultValue\": null, \"description\": \"Removes the leading and trailing white space and line terminator characters from a string.\", \"name\": \"trim\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"length\": { \"defaultValue\": null, \"description\": \"Returns the length of a String object.\", \"name\": \"length\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"substr\": { \"defaultValue\": null, \"description\": \"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.\", \"name\": \"substr\", \"required\": true, \"type\": { \"name\": \"(from: number, length?: number) => string\" } }, \"valueOf\": { \"defaultValue\": null, \"description\": \"Returns the primitive value of the specified object.\", \"name\": \"valueOf\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"codePointAt\": { \"defaultValue\": null, \"description\": \"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\r\\nthe String resulting from converting this object to a String.\\r\\nIf there is no element at that position, the result is undefined.\\r\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\", \"name\": \"codePointAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => number\" } }, \"includes\": { \"defaultValue\": null, \"description\": \"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\r\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.\", \"name\": \"includes\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"endsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nendPosition \\u2013 length(this). Otherwise returns false.\", \"name\": \"endsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, endPosition?: number) => boolean\" } }, \"normalize\": { \"defaultValue\": null, \"description\": \"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\r\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\", \"name\": \"normalize\", \"required\": true, \"type\": { \"name\": \"{ (form: \\\"NFC\\\" | \\\"NFD\\\" | \\\"NFKC\\\" | \\\"NFKD\\\"): string; (form?: string): string; }\" } }, \"repeat\": { \"defaultValue\": null, \"description\": \"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append\", \"name\": \"repeat\", \"required\": true, \"type\": { \"name\": \"(count: number) => string\" } }, \"startsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nposition. Otherwise returns false.\", \"name\": \"startsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"anchor\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name\", \"name\": \"anchor\", \"required\": true, \"type\": { \"name\": \"(name: string) => string\" } }, \"big\": { \"defaultValue\": null, \"description\": \"Returns a <big> HTML element\", \"name\": \"big\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"blink\": { \"defaultValue\": null, \"description\": \"Returns a <blink> HTML element\", \"name\": \"blink\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"bold\": { \"defaultValue\": null, \"description\": \"Returns a <b> HTML element\", \"name\": \"bold\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fixed\": { \"defaultValue\": null, \"description\": \"Returns a <tt> HTML element\", \"name\": \"fixed\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fontcolor\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the color attribute value\", \"name\": \"fontcolor\", \"required\": true, \"type\": { \"name\": \"(color: string) => string\" } }, \"fontsize\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value\", \"name\": \"fontsize\", \"required\": true, \"type\": { \"name\": \"{ (size: number): string; (size: string): string; }\" } }, \"italics\": { \"defaultValue\": null, \"description\": \"Returns an <i> HTML element\", \"name\": \"italics\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"link\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML element and sets the href attribute value\", \"name\": \"link\", \"required\": true, \"type\": { \"name\": \"(url: string) => string\" } }, \"small\": { \"defaultValue\": null, \"description\": \"Returns a <small> HTML element\", \"name\": \"small\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"strike\": { \"defaultValue\": null, \"description\": \"Returns a <strike> HTML element\", \"name\": \"strike\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sub\": { \"defaultValue\": null, \"description\": \"Returns a <sub> HTML element\", \"name\": \"sub\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sup\": { \"defaultValue\": null, \"description\": \"Returns a <sup> HTML element\", \"name\": \"sup\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"__@iterator\": { \"defaultValue\": null, \"description\": \"Iterator\", \"name\": \"__@iterator\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<string>\" } }, \"padStart\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padStart\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"padEnd\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padEnd\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"trimLeft\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the left end of a string.\", \"name\": \"trimLeft\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trimRight\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the right end of a string.\", \"name\": \"trimRight\", \"required\": true, \"type\": { \"name\": \"() => string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/state/annotation_utils.ts#isXDomain\"] = { docgenInfo: isXDomain.__docgenInfo, name: \"isXDomain\", path: \"src/state/annotation_utils.ts#isXDomain\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { Rotation } from '../lib/series/specs';\nimport { Dimensions } from '../lib/utils/dimensions';\nimport { Scale } from '../lib/utils/scales/scales';\nimport { isHorizontalRotation } from './utils';\n\nexport interface SnappedPosition {\n  position: number;\n  band: number;\n}\n\nexport const DEFAULT_SNAP_POSITION_BAND = 1;\n\nexport function getSnapPosition(\n  value: string | number,\n  scale: Scale,\n  totalBarsInCluster: number = 1,\n): { band: number; position: number } | undefined {\n  const position = scale.scale(value);\n  if (position === undefined) {\n    return;\n  }\n  if (scale.bandwidth > 0) {\n    const band = scale.bandwidth / (1 - scale.barsPadding);\n    const halfPadding = (band - scale.bandwidth) / 2;\n    return {\n      position: position - halfPadding * totalBarsInCluster,\n      band: band * totalBarsInCluster,\n    };\n  } else {\n    return {\n      position,\n      band: DEFAULT_SNAP_POSITION_BAND,\n    };\n  }\n}\n\nexport function getCursorLinePosition(\n  chartRotation: Rotation,\n  chartDimensions: Dimensions,\n  cursorPosition: { x: number; y: number },\n): Dimensions {\n  const { left, top, width, height } = chartDimensions;\n  const isHorizontalRotated = isHorizontalRotation(chartRotation);\n  if (isHorizontalRotated) {\n    const crosshairTop = cursorPosition.y + top;\n    return {\n      left,\n      width,\n      top: crosshairTop,\n      height: 0,\n    };\n  } else {\n    const crosshairLeft = cursorPosition.x + left;\n\n    return {\n      top,\n      left: crosshairLeft,\n      width: 0,\n      height,\n    };\n  }\n}\n\nexport function getCursorBandPosition(\n  chartRotation: Rotation,\n  chartDimensions: Dimensions,\n  cursorPosition: { x: number; y: number },\n  snapEnabled: boolean,\n  xScale: Scale,\n  data: any[],\n  totalBarsInCluster?: number,\n): Dimensions | undefined {\n  const { top, left, width, height } = chartDimensions;\n  const { x, y } = cursorPosition;\n  if (x > width || y > height || x < 0 || y < 0) {\n    return;\n  }\n  const isHorizontalRotated = isHorizontalRotation(chartRotation);\n  const invertedValue = xScale.invertWithStep(isHorizontalRotated ? x : y, data);\n  if (invertedValue == null) {\n    return;\n  }\n  const snappedPosition = getSnapPosition(invertedValue, xScale, totalBarsInCluster);\n  if (!snappedPosition) {\n    return;\n  }\n  const { position, band } = snappedPosition;\n  if (isHorizontalRotated) {\n    return {\n      top,\n      left: left + (snapEnabled ? position : x),\n      width: band,\n      height,\n    };\n  } else {\n    return {\n      top: top + (snapEnabled ? position : y),\n      left,\n      width,\n      height: band,\n    };\n  }\n}\n\nexport function getTooltipPosition(\n  chartDimensions: Dimensions,\n  chartRotation: Rotation,\n  cursorBandPosition: Dimensions,\n  cursorPosition: { x: number; y: number },\n): {\n  transform: string;\n} {\n  const isHorizontalRotated = isHorizontalRotation(chartRotation);\n  const hPosition = getHorizontalTooltipPosition(\n    cursorPosition.x,\n    cursorBandPosition,\n    chartDimensions,\n    isHorizontalRotated,\n  );\n  const vPosition = getVerticalTooltipPosition(\n    cursorPosition.y,\n    cursorBandPosition,\n    chartDimensions,\n    isHorizontalRotated,\n  );\n  const xTranslation = `translateX(${hPosition.position}px) translateX(-${hPosition.offset}%)`;\n  const yTranslation = `translateY(${vPosition.position}px) translateY(-${vPosition.offset}%)`;\n  return {\n    transform: `${xTranslation} ${yTranslation}`,\n  };\n}\n\nexport function getHorizontalTooltipPosition(\n  cursorXPosition: number,\n  cursorBandPosition: Dimensions,\n  chartDimensions: Dimensions,\n  isHorizontalRotated: boolean,\n  padding: number = 20,\n): { offset: number; position: number } {\n  if (isHorizontalRotated) {\n    if (cursorXPosition <= chartDimensions.width / 2) {\n      return {\n        offset: 0,\n        position: cursorBandPosition.left + cursorBandPosition.width + padding,\n      };\n    } else {\n      return {\n        offset: 100,\n        position: cursorBandPosition.left - padding,\n      };\n    }\n  } else {\n    if (cursorXPosition <= chartDimensions.width / 2) {\n      return {\n        offset: 0,\n        position: chartDimensions.left + cursorXPosition,\n      };\n    } else {\n      return {\n        offset: 100,\n        position: chartDimensions.left + cursorXPosition,\n      };\n    }\n  }\n}\n\nexport function getVerticalTooltipPosition(\n  cursorYPosition: number,\n  cursorBandPosition: Dimensions,\n  chartDimensions: Dimensions,\n  isHorizontalRotated: boolean,\n  padding: number = 20,\n): {\n  offset: number;\n  position: number;\n} {\n  if (isHorizontalRotated) {\n    if (cursorYPosition <= chartDimensions.height / 2) {\n      return {\n        offset: 0,\n        position: cursorYPosition + chartDimensions.top,\n      };\n    } else {\n      return {\n        offset: 100,\n        position: cursorYPosition + chartDimensions.top,\n      };\n    }\n  } else {\n    if (cursorYPosition <= chartDimensions.height / 2) {\n      return {\n        offset: 0,\n        position: cursorBandPosition.top + cursorBandPosition.height + padding,\n      };\n    } else {\n      return {\n        offset: 100,\n        position: cursorBandPosition.top - padding,\n      };\n    }\n  }\n}\n","import { inject, observer } from 'mobx-react';\nimport React from 'react';\nimport { isLineAnnotation } from '../lib/series/specs';\nimport { AnnotationId } from '../lib/utils/ids';\nimport { AnnotationDimensions, AnnotationLineProps } from '../state/annotation_utils';\nimport { ChartStore } from '../state/chart_state';\n\ninterface AnnotationTooltipProps {\n  chartStore?: ChartStore;\n}\n\nclass AnnotationTooltipComponent extends React.Component<AnnotationTooltipProps> {\n  static displayName = 'AnnotationTooltip';\n\n  renderTooltip() {\n    const { annotationTooltipState } = this.props.chartStore!;\n    const tooltipState = annotationTooltipState.get();\n\n    if (!tooltipState || !tooltipState.isVisible) {\n      return <div className=\"elasticChartsAnnotation__tooltip elasticChartsAnnotation__tooltip--hidden\" />;\n    }\n\n    const { transform, details, header } = tooltipState;\n    const chartDimensions = this.props.chartStore!.chartDimensions;\n\n    const tooltipTop = tooltipState.top;\n    const tooltipLeft = tooltipState.left;\n    const top = tooltipTop == null ? chartDimensions.top : chartDimensions.top + tooltipTop;\n    const left = tooltipLeft == null ? chartDimensions.left : chartDimensions.left + tooltipLeft;\n\n    const position = {\n      transform,\n      top,\n      left,\n    };\n\n    switch (tooltipState.annotationType) {\n      case 'line': {\n        const props = { position, details, header };\n        return <LineAnnotationTooltip {...props} />;\n      }\n      case 'rectangle': {\n        const props = { details, position };\n\n        if (tooltipState.renderTooltip) {\n          return tooltipState.renderTooltip(position, details);\n        }\n\n        return <RectAnnotationTooltip {...props} />;\n      }\n      default:\n        return null;\n    }\n  }\n\n  renderAnnotationLineMarkers(annotationLines: AnnotationLineProps[], id: AnnotationId): JSX.Element[] {\n    const { chartDimensions } = this.props.chartStore!;\n\n    const markers: JSX.Element[] = [];\n\n    annotationLines.forEach((line: AnnotationLineProps, index: number) => {\n      if (!line.marker) {\n        return;\n      }\n\n      const { transform, icon, color } = line.marker;\n\n      const style = {\n        color,\n        transform,\n        top: chartDimensions.top,\n        left: chartDimensions.left,\n      };\n\n      const markerElement = (\n        <div className=\"elasticChartsAnnotation\" style={{ ...style }} key={`annotation-${id}-${index}`}>\n          {icon}\n        </div>\n      );\n\n      markers.push(markerElement);\n    });\n\n    return markers;\n  }\n\n  renderAnnotationMarkers(): JSX.Element[] {\n    const { annotationDimensions, annotationSpecs } = this.props.chartStore!;\n    const markers: JSX.Element[] = [];\n\n    annotationDimensions.forEach((dimensions: AnnotationDimensions, id: AnnotationId) => {\n      const annotationSpec = annotationSpecs.get(id);\n      if (!annotationSpec) {\n        return;\n      }\n\n      if (isLineAnnotation(annotationSpec)) {\n        const annotationLines = dimensions as AnnotationLineProps[];\n        const lineMarkers = this.renderAnnotationLineMarkers(annotationLines, id);\n        markers.push(...lineMarkers);\n      }\n    });\n\n    return markers;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.renderAnnotationMarkers()}\n        {this.renderTooltip()}\n      </React.Fragment>\n    );\n  }\n}\n\nexport const AnnotationTooltip = inject('chartStore')(observer(AnnotationTooltipComponent));\n\nfunction RectAnnotationTooltip(props: {\n  details?: string;\n  position: { transform: string; top: number; left: number; };\n}) {\n  const { details, position } = props;\n  return (\n    <div className=\"elasticChartsAnnotation__tooltip\" style={{ ...position }}>\n      <div className=\"elasticChartsAnnotation__details\">\n        <div className=\"elasticChartsAnnotation__detailsText\">\n          {details}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction LineAnnotationTooltip(props: {\n  details?: string;\n  header?: string;\n  position: { transform: string; top: number; left: number; };\n}) {\n  const { details, position, header } = props;\n  return (\n    <div className=\"elasticChartsAnnotation__tooltip\" style={{ ...position }}>\n      <p className=\"elasticChartsAnnotation__header\">{header}</p>\n      <div className=\"elasticChartsAnnotation__details\">\n        {details}\n      </div>\n    </div>\n  );\n}\n","import debounce from 'lodash/debounce';\nimport { inject, observer } from 'mobx-react';\nimport React, { RefObject } from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { ChartStore } from '../state/chart_state';\n\ninterface ResizerProps {\n  chartStore?: ChartStore;\n}\nclass Resizer extends React.Component<ResizerProps> {\n  private containerRef: RefObject<HTMLDivElement>;\n  private ro: ResizeObserver;\n\n  constructor(props: ResizerProps) {\n    super(props);\n    this.containerRef = React.createRef();\n    this.ro = new ResizeObserver(debounce(this.onResize, 200));\n  }\n\n  componentDidMount() {\n    this.ro.observe(this.containerRef.current as Element);\n  }\n\n  componentWillUnmount() {\n    this.ro.unobserve(this.containerRef.current as Element);\n  }\n\n  onResize = (entries: ResizeObserverEntry[]) => {\n    entries.forEach(({ contentRect: { width, height } }) => {\n      this.props.chartStore!.updateParentDimensions(width, height, 0, 0);\n    });\n  }\n\n  render() {\n    return (\n      <div\n        ref={this.containerRef}\n        style={{\n          zIndex: -10000000,\n          position: 'absolute',\n          bottom: 0,\n          top: 0,\n          left: 0,\n          right: 0,\n          boxSizing: 'border-box',\n        }}\n      />\n    );\n  }\n}\n\nexport const ChartResizer = inject('chartStore')(observer(Resizer));\n","import { inject, observer } from 'mobx-react';\nimport React, { CSSProperties } from 'react';\nimport { TooltipType } from '../lib/utils/interactions';\nimport { ChartStore } from '../state/chart_state';\nimport { isHorizontalRotation } from '../state/utils';\n\ninterface CrosshairProps {\n  chartStore?: ChartStore;\n}\n\nfunction canRenderBand(type: TooltipType, visible: boolean) {\n  return visible && (type === TooltipType.Crosshairs || type === TooltipType.VerticalCursor);\n}\nfunction canRenderHelpLine(type: TooltipType, visible: boolean) {\n  return visible && type === TooltipType.Crosshairs;\n}\n\nclass CrosshairComponent extends React.Component<CrosshairProps> {\n  static displayName = 'Crosshair';\n\n  render() {\n    const { isCrosshairVisible } = this.props.chartStore!;\n    if (!isCrosshairVisible.get()) {\n      return <div className=\"elasticChartsCrosshair\" />;\n    }\n\n    return (\n      <div className=\"elasticChartsCrosshair\">\n        {this.renderBand()}\n        {this.renderLine()}\n      </div>\n    );\n  }\n\n  renderBand() {\n    const {\n      chartTheme: {\n        crosshair: { band },\n      },\n      cursorBandPosition,\n      tooltipType,\n    } = this.props.chartStore!;\n\n    if (!canRenderBand(tooltipType.get(), band.visible)) {\n      return null;\n    }\n    const style: CSSProperties = {\n      ...cursorBandPosition,\n      background: band.fill,\n    };\n\n    return <div className=\"elasticChartsCrosshair__band\" style={style} />;\n  }\n\n  renderLine() {\n    const {\n      chartTheme: {\n        crosshair: { line },\n      },\n      cursorLinePosition,\n      tooltipType,\n      chartRotation,\n    } = this.props.chartStore!;\n\n    if (!canRenderHelpLine(tooltipType.get(), line.visible)) {\n      return null;\n    }\n    const isHorizontalRotated = isHorizontalRotation(chartRotation);\n    let style: CSSProperties;\n    if (isHorizontalRotated) {\n      style = {\n        ...cursorLinePosition,\n        borderTopWidth: line.strokeWidth,\n        borderTopColor: line.stroke,\n        borderTopStyle: line.dash ? 'dashed' : 'solid',\n      };\n    } else {\n      style = {\n        ...cursorLinePosition,\n        borderLeftWidth: line.strokeWidth,\n        borderLeftColor: line.stroke,\n        borderLeftStyle: line.dash ? 'dashed' : 'solid',\n      };\n    }\n    return <div className=\"elasticChartsCrosshair__line\" style={style} />;\n  }\n}\n\nexport const Crosshair = inject('chartStore')(observer(CrosshairComponent));\n","import { inject, observer } from 'mobx-react';\nimport React from 'react';\nimport { isPointGeometry } from '../lib/series/rendering';\nimport { ChartStore } from '../state/chart_state';\n\ninterface HighlighterProps {\n  chartStore?: ChartStore;\n}\n\nclass HighlighterComponent extends React.Component<HighlighterProps> {\n  static displayName = 'Highlighter';\n\n  render() {\n    const {\n      highlightedGeometries,\n      chartTransform,\n      chartDimensions,\n      chartRotation,\n    } = this.props.chartStore!;\n    const left = chartDimensions.left + chartTransform.x;\n    const top = chartDimensions.top + chartTransform.y;\n    return (\n      <svg className=\"elasticChartsHighlighter\">\n        <g transform={`translate(${left}, ${top}) rotate(${chartRotation})`}>\n          {highlightedGeometries.map((geom, i) => {\n            const { color, x, y } = geom;\n            if (isPointGeometry(geom)) {\n              return (\n                <circle\n                  key={i}\n                  cx={x + geom.transform.x}\n                  cy={y}\n                  r={geom.radius}\n                  stroke={color}\n                  strokeWidth={4}\n                  fill=\"transparent\"\n                />\n              );\n            }\n            return (\n              <rect\n                key={i}\n                x={x}\n                y={y}\n                width={geom.width}\n                height={geom.height}\n                fill=\"white\"\n                opacity={0.4}\n              />\n            );\n          })}\n        </g>\n      </svg>\n    );\n  }\n}\n\nexport const Highlighter = inject('chartStore')(observer(HighlighterComponent));\n","import { EuiFlexGroup, EuiFlexItem } from '@elastic/eui';\nimport classNames from 'classnames';\nimport { inject, observer } from 'mobx-react';\nimport React from 'react';\nimport { isVertical } from '../lib/axes/axis_utils';\nimport { LegendItem } from '../lib/series/legend';\nimport { ChartStore } from '../state/chart_state';\nimport { LegendElement } from './legend_element';\n\ninterface ReactiveChartProps {\n  chartStore?: ChartStore; // FIX until we find a better way on ts mobx\n}\n\nclass LegendComponent extends React.Component<ReactiveChartProps> {\n  static displayName = 'Legend';\n\n  onCollapseLegend = () => {\n    this.props.chartStore!.toggleLegendCollapsed();\n  }\n\n  render() {\n    const {\n      initialized,\n      legendItems,\n      legendPosition,\n      showLegend,\n      legendCollapsed,\n      debug,\n      chartTheme,\n    } = this.props.chartStore!;\n\n    if (\n      !showLegend.get() ||\n      !initialized.get() ||\n      legendItems.size === 0 ||\n      legendPosition === undefined\n    ) {\n      return null;\n    }\n\n    const legendClasses = classNames(\n      'elasticChartsLegend',\n      `elasticChartsLegend--${legendPosition}`,\n      {\n        'elasticChartsLegend--collapsed': legendCollapsed.get(),\n        'elasticChartsLegend--debug': debug,\n      },\n    );\n    let paddingStyle;\n    let legendItemGrow = false;\n    if (isVertical(legendPosition)) {\n      paddingStyle = {\n        paddingTop: chartTheme.chartMargins.top,\n        paddingBottom: chartTheme.chartMargins.bottom,\n      };\n      legendItemGrow = true;\n    } else {\n      paddingStyle = {\n        paddingLeft: chartTheme.chartMargins.left,\n        paddingRight: chartTheme.chartMargins.right,\n      };\n      legendItemGrow = true;\n    }\n    return (\n      <div className={legendClasses} style={paddingStyle}>\n        <div className=\"elasticChartsLegendList\">\n          <EuiFlexGroup\n            gutterSize=\"s\"\n            wrap\n            className=\"elasticChartsLegendListContainer\"\n            responsive={false}\n          >\n            {[...legendItems.values()].map((item) => {\n              const { isLegendItemVisible } = item;\n\n              const legendItemProps = {\n                key: item.key,\n                className: classNames('elasticChartsLegendList__item', 'euiIEFlexWrapFix', {\n                  'elasticChartsLegendList__item--hidden': !isLegendItemVisible,\n                }),\n                onMouseEnter: this.onLegendItemMouseover(item.key),\n                onMouseLeave: this.onLegendItemMouseout,\n              };\n\n              return (\n                <EuiFlexItem className={legendItemProps.className}>\n                  {this.renderLegendElement(item, item.key, legendItemGrow, legendItemProps)}\n                </EuiFlexItem>\n              );\n            })}\n          </EuiFlexGroup>\n        </div>\n      </div>\n    );\n  }\n\n  private onLegendItemMouseover = (legendItemKey: string) => () => {\n    this.props.chartStore!.onLegendItemOver(legendItemKey);\n  }\n\n  private onLegendItemMouseout = () => {\n    this.props.chartStore!.onLegendItemOut();\n  }\n\n  private renderLegendElement = (\n    { color, label, isSeriesVisible, displayValue }: LegendItem,\n    legendItemKey: string,\n    legendItemGrow: boolean,\n    containerProps: {\n      key: string;\n      className: string;\n      onMouseEnter: (key: React.MouseEvent) => void;\n      onMouseLeave: () => void;\n    },\n  ) => {\n    const tooltipValues = this.props.chartStore!.legendItemTooltipValues.get();\n    let tooltipValue;\n\n    if (tooltipValues && tooltipValues.get(legendItemKey)) {\n      tooltipValue = tooltipValues.get(legendItemKey);\n    }\n\n    const display = tooltipValue != null ? tooltipValue : displayValue.formatted;\n    const props = { color, label, isSeriesVisible, legendItemKey, displayValue: display };\n\n    return <LegendElement {...props} {...containerProps} />;\n  }\n}\n\nexport const Legend = inject('chartStore')(observer(LegendComponent));\n","import {\n  EuiButtonIcon,\n  // TODO: remove ts-ignore below once typings file is included in eui for color picker\n  // @ts-ignore\n  EuiColorPicker,\n  EuiContextMenuPanel,\n  EuiFlexGroup,\n  EuiFlexItem,\n  EuiIcon,\n  EuiPopover,\n  EuiText,\n} from '@elastic/eui';\nimport classNames from 'classnames';\nimport { inject, observer } from 'mobx-react';\nimport React from 'react';\n\nimport { ChartStore } from '../state/chart_state';\n\ninterface LegendElementProps {\n  chartStore?: ChartStore; // FIX until we find a better way on ts mobx\n  legendItemKey: string;\n  color: string | undefined;\n  label: string | undefined;\n  isSeriesVisible?: boolean;\n  displayValue: string;\n  key: string;\n  className: string;\n  onMouseEnter: (key: React.MouseEvent) => void;\n  onMouseLeave: () => void;\n}\n\ninterface LegendElementState {\n  isColorPickerOpen: boolean;\n}\n\nclass LegendElementComponent extends React.Component<LegendElementProps, LegendElementState> {\n  static displayName = 'LegendElement';\n\n  constructor(props: LegendElementProps) {\n    super(props);\n    this.state = {\n      isColorPickerOpen: false,\n    };\n  }\n\n  closeColorPicker = () => {\n    this.setState({\n      isColorPickerOpen: false,\n    });\n  }\n\n  toggleColorPicker = () => {\n    this.setState({\n      isColorPickerOpen: !this.state.isColorPickerOpen,\n    });\n  }\n\n  renderDisplayValue(displayValue: string, show: boolean) {\n    if (!show) {\n      return;\n    }\n\n    return (\n      <EuiText\n        size=\"xs\"\n        className=\"eui-textTruncate elasticChartsLegendListItem__displayValue\"\n        title={displayValue}\n      >\n        {displayValue}\n      </EuiText>\n    );\n  }\n\n  render() {\n    const { legendItemKey } = this.props;\n    const { color, label, isSeriesVisible, displayValue } = this.props;\n    const { className, onMouseEnter, onMouseLeave } = this.props;\n\n    const onTitleClick = this.onLegendTitleClick(legendItemKey);\n\n    const showLegendDisplayValue = this.props.chartStore!.showLegendDisplayValue.get();\n    const isSelected = legendItemKey === this.props.chartStore!.selectedLegendItemKey.get();\n    const titleClassNames = classNames('eui-textTruncate', 'elasticChartsLegendListItem__title', {\n      ['elasticChartsLegendListItem__title--selected']: isSelected,\n      ['elasticChartsLegendListItem__title--hasDisplayValue']: this.props.chartStore!.showLegendDisplayValue.get(),\n    });\n\n    const colorDotProps = {\n      color,\n      onClick: this.toggleColorPicker,\n    };\n\n    const colorDot = <EuiIcon type=\"dot\" {...colorDotProps} />;\n\n    const displayValueClassNames = classNames('elasticChartsLegendListItem__displayValue', {\n      ['elasticChartsLegendListItem__displayValue--hidden']: !isSeriesVisible,\n    });\n\n    return (\n      <EuiFlexGroup\n        className={classNames(className, 'euiIEFlexWrapFix')}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        gutterSize=\"xs\"\n        alignItems=\"center\"\n        justifyContent=\"spaceBetween\"\n        responsive={false}\n      >\n        <EuiFlexItem grow={false}>\n          <EuiPopover\n            id=\"legendItemColorPicker\"\n            button={colorDot}\n            isOpen={this.state.isColorPickerOpen}\n            closePopover={this.closeColorPicker}\n            panelPaddingSize=\"s\"\n            anchorPosition=\"downCenter\"\n          >\n            <EuiContextMenuPanel>\n              <EuiColorPicker onChange={this.onColorPickerChange(legendItemKey)} color={color} />\n            </EuiContextMenuPanel>\n          </EuiPopover>\n        </EuiFlexItem>\n        <EuiFlexItem grow={false}>\n          {this.renderVisibilityButton(legendItemKey, isSeriesVisible)}\n        </EuiFlexItem>\n        <EuiFlexItem onClick={onTitleClick} grow={true}>\n          <EuiPopover\n            id=\"contentPanel\"\n            button={\n              <EuiText size=\"xs\" className={titleClassNames}>\n                {label}\n              </EuiText>\n            }\n            isOpen={isSelected}\n            closePopover={this.onLegendItemPanelClose}\n            panelPaddingSize=\"s\"\n            anchorPosition=\"downCenter\"\n          >\n            <EuiContextMenuPanel>\n              <EuiFlexGroup gutterSize=\"xs\" alignItems=\"center\" responsive={false}>\n                <EuiFlexItem>{this.renderPlusButton()}</EuiFlexItem>\n                <EuiFlexItem>{this.renderMinusButton()}</EuiFlexItem>\n              </EuiFlexGroup>\n            </EuiContextMenuPanel>\n          </EuiPopover>\n        </EuiFlexItem>\n        <EuiFlexItem grow={true} className={displayValueClassNames}>\n          {this.renderDisplayValue(displayValue, showLegendDisplayValue)}\n        </EuiFlexItem>\n      </EuiFlexGroup>\n    );\n  }\n\n  private onLegendTitleClick = (legendItemKey: string) => () => {\n    this.props.chartStore!.onLegendItemClick(legendItemKey);\n  }\n\n  private onLegendItemPanelClose = () => {\n    // tslint:disable-next-line:no-console\n    console.log('close');\n  }\n\n  private onColorPickerChange = (legendItemKey: string) => (color: string) => {\n    this.props.chartStore!.setSeriesColor(legendItemKey, color);\n  }\n\n  private renderPlusButton = () => {\n    return (\n      <EuiButtonIcon\n        onClick={this.props.chartStore!.onLegendItemPlusClick}\n        iconType=\"plusInCircle\"\n        aria-label=\"minus\"\n      />\n    );\n  }\n\n  private renderMinusButton = () => {\n    return (\n      <EuiButtonIcon\n        onClick={this.props.chartStore!.onLegendItemMinusClick}\n        iconType=\"minusInCircle\"\n        aria-label=\"minus\"\n      />\n    );\n  }\n\n  private onVisibilityClick = (legendItemKey: string) => (event: React.MouseEvent<HTMLElement>) => {\n    if (event.shiftKey) {\n      this.props.chartStore!.toggleSingleSeries(legendItemKey);\n    } else {\n      this.props.chartStore!.toggleSeriesVisibility(legendItemKey);\n    }\n  }\n\n  private renderVisibilityButton = (legendItemKey: string, isSeriesVisible: boolean = true) => {\n    const iconType = isSeriesVisible ? 'eye' : 'eyeClosed';\n    return (\n      <EuiButtonIcon\n        onClick={this.onVisibilityClick(legendItemKey)}\n        iconType={iconType}\n        aria-label=\"toggle visibility\"\n      />\n    );\n  }\n}\n\nexport const LegendElement = inject('chartStore')(observer(LegendElementComponent));\n","import { EuiButtonIcon } from '@elastic/eui';\nimport classNames from 'classnames';\nimport { inject, observer } from 'mobx-react';\nimport React from 'react';\nimport { ChartStore } from '../state/chart_state';\n\ninterface ReactiveChartProps {\n  chartStore?: ChartStore;\n}\n\nclass LegendButtonComponent extends React.Component<ReactiveChartProps> {\n  static displayName = 'Legend';\n  onCollapseLegend = () => {\n    this.props.chartStore!.toggleLegendCollapsed();\n  }\n\n  render() {\n    const { initialized, legendItems, legendCollapsed, showLegend } = this.props.chartStore!;\n\n    if (!showLegend.get() || !initialized.get() || legendItems.size === 0) {\n      return null;\n    }\n    const isOpen = !legendCollapsed.get();\n    const className = classNames('elasticChartsLegend__toggle', {\n      'elasticChartsLegend__toggle--isOpen': isOpen,\n    });\n    return (\n      <EuiButtonIcon\n        className={className}\n        onClick={this.onCollapseLegend}\n        iconType=\"list\"\n        aria-label={legendCollapsed.get() ? 'Expand legend' : 'Collapse legend'}\n      />\n    );\n  }\n}\n\nexport const LegendButton = inject('chartStore')(observer(LegendButtonComponent));\n","import { inject, observer } from 'mobx-react';\nimport React from 'react';\nimport { Layer, Rect, Stage } from 'react-konva';\nimport { isLineAnnotation, isRectAnnotation } from '../../lib/series/specs';\nimport { LineAnnotationStyle, RectAnnotationStyle } from '../../lib/themes/theme';\nimport { AnnotationId } from '../../lib/utils/ids';\nimport { AnnotationDimensions, AnnotationLineProps, AnnotationRectProps } from '../../state/annotation_utils';\nimport { ChartStore, Point } from '../../state/chart_state';\nimport { BrushExtent } from '../../state/utils';\nimport { AreaGeometries } from './area_geometries';\nimport { Axis } from './axis';\nimport { BarGeometries } from './bar_geometries';\nimport { BarValues } from './bar_values';\nimport { Grid } from './grid';\nimport { LineAnnotation } from './line_annotation';\nimport { LineGeometries } from './line_geometries';\nimport { RectAnnotation } from './rect_annotation';\n\ninterface ReactiveChartProps {\n  chartStore?: ChartStore; // FIX until we find a better way on ts mobx\n}\ninterface ReactiveChartState {\n  brushing: boolean;\n  brushStart: Point;\n  brushEnd: Point;\n  bbox: {\n    left: number;\n    top: number;\n  };\n}\n\ninterface ReactiveChartElementIndex {\n  element: JSX.Element;\n  zIndex: number;\n}\n\nfunction limitPoint(value: number, min: number, max: number) {\n  if (value > max) {\n    return max;\n  } else if (value < min) {\n    return min;\n  } else {\n    return value;\n  }\n}\nfunction getPoint(event: MouseEvent, extent: BrushExtent): Point {\n  const point = {\n    x: limitPoint(event.layerX, extent.minX, extent.maxX),\n    y: limitPoint(event.layerY, extent.minY, extent.maxY),\n  };\n  return point;\n}\nclass Chart extends React.Component<ReactiveChartProps, ReactiveChartState> {\n  static displayName = 'ReactiveChart';\n  firstRender = true;\n  state = {\n    brushing: false,\n    brushStart: {\n      x: 0,\n      y: 0,\n    },\n    brushEnd: {\n      x: 0,\n      y: 0,\n    },\n    bbox: {\n      left: 0,\n      top: 0,\n    },\n  };\n\n  renderBarSeries = (): ReactiveChartElementIndex[] => {\n    const { geometries, canDataBeAnimated, chartTheme } = this.props.chartStore!;\n    if (!geometries) {\n      return [];\n    }\n    const highlightedLegendItem = this.getHighlightedLegendItem();\n\n    const element = <BarGeometries\n      key={'bar-geometries'}\n      animated={canDataBeAnimated}\n      bars={geometries.bars}\n      style={chartTheme.barSeriesStyle}\n      sharedStyle={chartTheme.sharedStyle}\n      highlightedLegendItem={highlightedLegendItem}\n    />;\n\n    return [{\n      element,\n      zIndex: 0,\n    }];\n  }\n  renderLineSeries = (): ReactiveChartElementIndex[] => {\n    const { geometries, canDataBeAnimated, chartTheme } = this.props.chartStore!;\n    if (!geometries) {\n      return [];\n    }\n\n    const highlightedLegendItem = this.getHighlightedLegendItem();\n\n    const element = <LineGeometries\n      key={'line-geometries'}\n      animated={canDataBeAnimated}\n      lines={geometries.lines}\n      style={chartTheme.lineSeriesStyle}\n      sharedStyle={chartTheme.sharedStyle}\n      highlightedLegendItem={highlightedLegendItem}\n    />;\n\n    return [{\n      element,\n      zIndex: 0,\n    }];\n  }\n  renderAreaSeries = (): ReactiveChartElementIndex[] => {\n    const { geometries, canDataBeAnimated, chartTheme } = this.props.chartStore!;\n    if (!geometries) {\n      return [];\n    }\n\n    const highlightedLegendItem = this.getHighlightedLegendItem();\n\n    const element = <AreaGeometries\n      key={'area-geometries'}\n      animated={canDataBeAnimated}\n      areas={geometries.areas}\n      style={chartTheme.areaSeriesStyle}\n      sharedStyle={chartTheme.sharedStyle}\n      highlightedLegendItem={highlightedLegendItem}\n    />;\n\n    return [{\n      element,\n      zIndex: 0,\n    }];\n  }\n  renderAxes = () => {\n    const {\n      axesVisibleTicks,\n      axesSpecs,\n      axesTicksDimensions,\n      axesPositions,\n      chartTheme,\n      debug,\n      chartDimensions,\n    } = this.props.chartStore!;\n\n    const axesComponents: JSX.Element[] = [];\n    axesVisibleTicks.forEach((axisTicks, axisId) => {\n      const axisSpec = axesSpecs.get(axisId);\n      const axisTicksDimensions = axesTicksDimensions.get(axisId);\n      const axisPosition = axesPositions.get(axisId);\n      const ticks = axesVisibleTicks.get(axisId);\n      if (!ticks || !axisSpec || !axisTicksDimensions || !axisPosition) {\n        return;\n      }\n      axesComponents.push(\n        <Axis\n          key={`axis-${axisId}`}\n          axisSpec={axisSpec}\n          axisTicksDimensions={axisTicksDimensions}\n          axisPosition={axisPosition}\n          ticks={ticks}\n          chartTheme={chartTheme}\n          debug={debug}\n          chartDimensions={chartDimensions}\n        />,\n      );\n    });\n    return axesComponents;\n  }\n\n  renderGrids = () => {\n    const { axesGridLinesPositions, axesSpecs, chartDimensions, debug } = this.props.chartStore!;\n\n    const gridComponents: JSX.Element[] = [];\n    axesGridLinesPositions.forEach((axisGridLinesPositions, axisId) => {\n      const axisSpec = axesSpecs.get(axisId);\n      if (axisSpec && axisGridLinesPositions.length > 0) {\n        gridComponents.push(\n          <Grid\n            key={`axis-grid-${axisId}`}\n            chartDimensions={chartDimensions}\n            debug={debug}\n            gridLineStyle={axisSpec.gridLineStyle}\n            linesPositions={axisGridLinesPositions}\n          />,\n        );\n      }\n    });\n    return gridComponents;\n  }\n\n  renderAnnotations = (): ReactiveChartElementIndex[] => {\n    const { annotationDimensions, annotationSpecs, chartDimensions, debug } = this.props.chartStore!;\n\n    const annotationElements: ReactiveChartElementIndex[] = [];\n    annotationDimensions.forEach((annotation: AnnotationDimensions, id: AnnotationId) => {\n      const spec = annotationSpecs.get(id);\n\n      if (!spec) {\n        return;\n      }\n\n      const zIndex = spec.zIndex || 0;\n      let element;\n      if (isLineAnnotation(spec)) {\n        const lineStyle = spec.style as LineAnnotationStyle;\n\n        element = <LineAnnotation\n          key={`annotation-${id}`}\n          chartDimensions={chartDimensions}\n          debug={debug}\n          lines={annotation as AnnotationLineProps[]}\n          lineStyle={lineStyle}\n        />;\n      } else if (isRectAnnotation(spec)) {\n        const rectStyle = spec.style as RectAnnotationStyle;\n\n        element = <RectAnnotation\n          key={`annotation-${id}`}\n          chartDimensions={chartDimensions}\n          debug={debug}\n          rects={annotation as AnnotationRectProps[]}\n          rectStyle={rectStyle}\n        />;\n      }\n\n      if (element) {\n        annotationElements.push({\n          element,\n          zIndex,\n        });\n      }\n    });\n    return annotationElements;\n  }\n\n  renderBarValues = () => {\n    const { debug, chartDimensions, geometries, chartTheme, chartRotation } = this.props.chartStore!;\n    if (!geometries) {\n      return;\n    }\n    const props = {\n      debug,\n      chartDimensions,\n      chartRotation,\n      bars: geometries.bars,\n      // displayValue is guaranteed on style as part of the merged theme\n      displayValueStyle: chartTheme.barSeriesStyle.displayValue!,\n    };\n    return <BarValues {...props} />;\n  }\n\n  renderBrushTool = () => {\n    const { brushing, brushStart, brushEnd } = this.state;\n    const { chartDimensions, chartRotation, chartTransform } = this.props.chartStore!;\n    if (!brushing) {\n      return null;\n    }\n    let x = 0;\n    let y = 0;\n    let width = 0;\n    let height = 0;\n    // x = {chartDimensions.left + chartTransform.x};\n    // y = {chartDimensions.top + chartTransform.y};\n    if (chartRotation === 0 || chartRotation === 180) {\n      x = brushStart.x;\n      y = chartDimensions.top + chartTransform.y;\n      width = brushEnd.x - brushStart.x;\n      height = chartDimensions.height;\n    } else {\n      x = chartDimensions.left + chartTransform.x;\n      y = brushStart.y;\n      width = chartDimensions.width;\n      height = brushEnd.y - brushStart.y;\n    }\n    return <Rect x={x} y={y} width={width} height={height} fill=\"gray\" opacity={0.6} />;\n  }\n  onStartBrusing = (event: { evt: MouseEvent }) => {\n    window.addEventListener('mouseup', this.onEndBrushing);\n    this.props.chartStore!.onBrushStart();\n    const { brushExtent } = this.props.chartStore!;\n    const point = getPoint(event.evt, brushExtent);\n    this.setState(() => ({\n      brushing: true,\n      brushStart: point,\n      brushEnd: point,\n    }));\n  }\n  onEndBrushing = () => {\n    window.removeEventListener('mouseup', this.onEndBrushing);\n    const { brushStart, brushEnd } = this.state;\n    this.props.chartStore!.onBrushEnd(brushStart, brushEnd);\n    this.setState(() => ({\n      brushing: false,\n      brushStart: { x: 0, y: 0 },\n      brushEnd: { x: 0, y: 0 },\n    }));\n  }\n  onBrushing = (event: { evt: MouseEvent }) => {\n    if (!this.state.brushing) {\n      return;\n    }\n    const { brushExtent } = this.props.chartStore!;\n    const point = getPoint(event.evt, brushExtent);\n    this.setState(() => ({\n      brushEnd: point,\n    }));\n  }\n\n  sortAndRenderElements() {\n    const bars = this.renderBarSeries();\n    const areas = this.renderAreaSeries();\n    const lines = this.renderLineSeries();\n    const annotations = this.renderAnnotations();\n\n    return [...bars, ...areas, ...lines, ...annotations]\n      .sort((elemIdxA, elemIdxB) => elemIdxA.zIndex - elemIdxB.zIndex)\n      .map((elemIdx) => elemIdx.element);\n  }\n\n  render() {\n    const { initialized, debug } = this.props.chartStore!;\n    if (!initialized.get()) {\n      return null;\n    }\n\n    const {\n      parentDimensions,\n      chartDimensions,\n      chartRotation,\n      chartTransform,\n      setCursorPosition,\n    } = this.props.chartStore!;\n\n    // disable clippings when debugging\n    const clippings = debug\n      ? {}\n      : {\n        clipX: 0,\n        clipY: 0,\n        clipWidth: [90, -90].includes(chartRotation)\n          ? chartDimensions.height\n          : chartDimensions.width,\n        clipHeight: [90, -90].includes(chartRotation)\n          ? chartDimensions.width\n          : chartDimensions.height,\n      };\n\n    let brushProps = {};\n    const isBrushEnabled = this.props.chartStore!.isBrushEnabled();\n    if (isBrushEnabled) {\n      brushProps = {\n        onMouseDown: this.onStartBrusing,\n        onMouseMove: this.onBrushing,\n      };\n    }\n\n    const layerClippings = {\n      clipX: chartDimensions.left,\n      clipY: chartDimensions.top,\n      clipWidth: chartDimensions.width,\n      clipHeight: chartDimensions.height,\n    };\n\n    return (\n      <div\n        style={{\n          position: 'absolute',\n          top: 0,\n          bottom: 0,\n          right: 0,\n          left: 0,\n          boxSizing: 'border-box',\n        }}\n        onMouseMove={({ nativeEvent: { offsetX, offsetY } }) => {\n          setCursorPosition(offsetX, offsetY);\n        }}\n        onMouseLeave={() => {\n          setCursorPosition(-1, -1);\n        }}\n        onClick={() => {\n          this.props.chartStore!.handleChartClick();\n        }}\n      >\n        <Stage\n          width={parentDimensions.width}\n          height={parentDimensions.height}\n          style={{\n            width: '100%',\n            height: '100%',\n          }}\n          {...brushProps}\n        >\n          <Layer hitGraphEnabled={false} listening={false} {...layerClippings}>\n            {this.renderGrids()}\n          </Layer>\n\n          <Layer\n            x={chartDimensions.left + chartTransform.x}\n            y={chartDimensions.top + chartTransform.y}\n            rotation={chartRotation}\n            {...clippings}\n            hitGraphEnabled={false}\n            listening={false}\n          >\n            {this.sortAndRenderElements()}\n          </Layer>\n\n          <Layer hitGraphEnabled={false} listening={false}>\n            {debug && this.renderDebugChartBorders()}\n          </Layer>\n          {isBrushEnabled && (\n            <Layer hitGraphEnabled={false} listening={false}>\n              {this.renderBrushTool()}\n            </Layer>\n          )}\n\n          <Layer hitGraphEnabled={false} listening={false}>\n            {this.renderAxes()}\n          </Layer>\n\n          <Layer hitGraphEnabled={false} listening={false} {...layerClippings}>\n            {this.renderBarValues()}\n          </Layer>\n        </Stage>\n      </div>\n    );\n  }\n\n  private renderDebugChartBorders = () => {\n    const { chartDimensions } = this.props.chartStore!;\n    return (\n      <Rect\n        x={chartDimensions.left}\n        y={chartDimensions.top}\n        width={chartDimensions.width}\n        height={chartDimensions.height}\n        stroke=\"red\"\n        strokeWidth={4}\n        listening={false}\n        dash={[4, 4]}\n      />\n    );\n  }\n\n  private getHighlightedLegendItem = () => {\n    return this.props.chartStore!.highlightedLegendItem.get();\n  }\n}\n\nexport const ReactiveChart = inject('chartStore')(observer(Chart));\n","import { Group as KonvaGroup } from 'konva';\nimport React from 'react';\nimport { Circle, Group, Path } from 'react-konva';\nimport { animated, Spring } from 'react-spring/renderprops-konva.cjs';\nimport { LegendItem } from '../../lib/series/legend';\nimport { AreaGeometry, getGeometryStyle, PointGeometry } from '../../lib/series/rendering';\nimport { AreaSeriesStyle, SharedGeometryStyle } from '../../lib/themes/theme';\nimport {\n  buildAreaLineProps,\n  buildAreaPointProps,\n  buildAreaProps,\n  buildPointStyleProps,\n} from './utils/rendering_props_utils';\n\ninterface AreaGeometriesDataProps {\n  animated?: boolean;\n  areas: AreaGeometry[];\n  style: AreaSeriesStyle;\n  sharedStyle: SharedGeometryStyle;\n  highlightedLegendItem: LegendItem | null;\n}\ninterface AreaGeometriesDataState {\n  overPoint?: PointGeometry;\n}\nexport class AreaGeometries extends React.PureComponent<\n  AreaGeometriesDataProps,\n  AreaGeometriesDataState\n  > {\n  static defaultProps: Partial<AreaGeometriesDataProps> = {\n    animated: false,\n  };\n  private readonly barSeriesRef: React.RefObject<KonvaGroup> = React.createRef();\n  constructor(props: AreaGeometriesDataProps) {\n    super(props);\n    this.barSeriesRef = React.createRef();\n    this.state = {\n      overPoint: undefined,\n    };\n  }\n  render() {\n    const { point, area, line } = this.props.style;\n\n    return (\n      <Group ref={this.barSeriesRef} key={'bar_series'}>\n        {this.renderAreaGeoms(area.visible)}\n        {this.renderAreaLines(line.visible)}\n        {this.renderAreaPoints(point.visible)}\n      </Group>\n    );\n  }\n  private renderAreaPoints = (themeIsVisible: boolean): JSX.Element[] => {\n    const { areas } = this.props;\n    return areas.reduce(\n      (acc, glyph, i) => {\n        const { points, seriesPointStyle } = glyph;\n\n        const isVisible = seriesPointStyle ? seriesPointStyle.visible : themeIsVisible;\n        if (!isVisible) {\n          return acc;\n        }\n\n        const { radius, strokeWidth, opacity } = this.props.style.point;\n        const pointStyleProps = buildPointStyleProps({\n          radius,\n          strokeWidth,\n          opacity,\n          seriesPointStyle,\n        });\n\n        return [...acc, ...this.renderPoints(points, i, pointStyleProps)];\n      },\n      [] as JSX.Element[],\n    );\n  }\n  private renderPoints = (\n    areaPoints: PointGeometry[],\n    areaIndex: number,\n    pointStyleProps: any,\n  ): JSX.Element[] => {\n    const areaPointElements: JSX.Element[] = [];\n    areaPoints.forEach((areaPoint, pointIndex) => {\n      const { x, y, color, transform } = areaPoint;\n\n      if (this.props.animated) {\n        areaPointElements.push(\n          <Group key={`area-point-group-${areaIndex}-${pointIndex}`} x={transform.x}>\n            <Spring native from={{ y }} to={{ y }}>\n              {(props: { y: number }) => {\n                const pointProps = buildAreaPointProps({\n                  areaIndex,\n                  pointIndex,\n                  x,\n                  y,\n                  color,\n                  pointStyleProps,\n                });\n                return <animated.Circle {...pointProps} />;\n              }}\n            </Spring>\n          </Group>);\n      } else {\n        const pointProps = buildAreaPointProps({\n          areaIndex,\n          pointIndex,\n          x: transform.x + x,\n          y,\n          color,\n          pointStyleProps,\n        });\n        areaPointElements.push(<Circle {...pointProps} />);\n      }\n    });\n    return areaPointElements;\n  }\n\n  private renderAreaGeoms = (themeIsVisible: boolean): JSX.Element[] => {\n    const { areas } = this.props;\n    const { opacity } = this.props.style.area;\n    const areasToRender: JSX.Element[] = [];\n\n    areas.forEach((glyph, i) => {\n      const { area, color, transform, seriesAreaStyle } = glyph;\n      const isVisible = seriesAreaStyle ? seriesAreaStyle.visible : themeIsVisible;\n      if (!isVisible) {\n        return;\n      }\n\n      if (this.props.animated) {\n        areasToRender.push(\n          <Group key={`area-group-${i}`} x={transform.x}>\n            <Spring native from={{ area }} to={{ area }}>\n              {(props: { area: string }) => {\n                const areaProps = buildAreaProps({\n                  index: i,\n                  areaPath: props.area,\n                  xTransform: 0,\n                  color,\n                  opacity,\n                  seriesAreaStyle,\n                });\n                return <animated.Path {...areaProps} />;\n              }}\n            </Spring>\n          </Group>);\n      } else {\n        const areaProps = buildAreaProps({\n          index: i,\n          areaPath: area,\n          xTransform: transform.x,\n          color,\n          opacity,\n          seriesAreaStyle,\n        });\n        areasToRender.push(<Path {...areaProps} />);\n      }\n    });\n    return areasToRender;\n  }\n  private renderAreaLines = (themeIsVisible: boolean): JSX.Element[] => {\n    const { areas, sharedStyle } = this.props;\n    const { strokeWidth } = this.props.style.line;\n    const linesToRender: JSX.Element[] = [];\n    areas.forEach((glyph, areaIndex) => {\n      const { lines, color, geometryId, transform, seriesAreaLineStyle } = glyph;\n      const isVisible = seriesAreaLineStyle ? seriesAreaLineStyle.visible : themeIsVisible;\n      if (!isVisible) {\n        return;\n      }\n\n      const customOpacity = seriesAreaLineStyle ? seriesAreaLineStyle.opacity : undefined;\n\n      const geometryStyle = getGeometryStyle(\n        geometryId,\n        this.props.highlightedLegendItem,\n        sharedStyle,\n        customOpacity,\n      );\n\n      lines.forEach((linePath, lineIndex) => {\n        const lineProps = buildAreaLineProps({\n          areaIndex,\n          lineIndex,\n          xTransform: transform.x,\n          linePath,\n          color,\n          strokeWidth,\n          geometryStyle,\n          seriesAreaLineStyle,\n        });\n        linesToRender.push(<Path {...lineProps} />);\n      });\n    });\n    return linesToRender;\n    // if (this.props.animated) {\n    //   return (\n    //     <Group key={`area-line-group-${i}`} x={transform.x}>\n    //       <Spring native from={{ line }} to={{ line }}>\n    //         {(props: { line: string }) => {\n    //           const lineProps = buildAreaLineProps({\n    //             index: i,\n    //             linePath: props.line,\n    //             color,\n    //             strokeWidth,\n    //             geometryStyle,\n    //           });\n    //           return <animated.Path {...lineProps} />;\n    //         }}\n    //       </Spring>\n    //     </Group>\n    //   );\n    // } else {\n\n    // }\n  }\n}\n","import { ShapeConfig } from 'konva';\n\nexport const GlobalKonvaElementProps: ShapeConfig = {\n  strokeHitEnabled: false,\n  perfectDrawEnabled: false,\n  listening: false,\n};\n","import React from 'react';\nimport { Group, Line, Rect, Text } from 'react-konva';\nimport {\n  AxisTick,\n  AxisTicksDimensions,\n  centerRotationOrigin,\n  getHorizontalAxisTickLineProps,\n  getTickLabelProps,\n  getVerticalAxisTickLineProps,\n  isHorizontal,\n  isVertical,\n} from '../../lib/axes/axis_utils';\nimport { AxisSpec, Position } from '../../lib/series/specs';\nimport { Theme } from '../../lib/themes/theme';\nimport { Dimensions } from '../../lib/utils/dimensions';\n\ninterface AxisProps {\n  chartTheme: Theme;\n  axisSpec: AxisSpec;\n  axisTicksDimensions: AxisTicksDimensions;\n  axisPosition: Dimensions;\n  ticks: AxisTick[];\n  debug: boolean;\n  chartDimensions: Dimensions;\n}\n\nexport class Axis extends React.PureComponent<AxisProps> {\n  render() {\n    return this.renderAxis();\n  }\n  renderTickLabel = (tick: AxisTick, i: number) => {\n    const { padding, ...labelStyle } = this.props.chartTheme.axes.tickLabelStyle;\n    const {\n      axisSpec: { tickSize, tickPadding, position },\n      axisTicksDimensions,\n      debug,\n    } = this.props;\n\n    const tickLabelRotation = this.props.axisSpec.tickLabelRotation || 0;\n\n    const tickLabelProps = getTickLabelProps(\n      tickLabelRotation,\n      tickSize,\n      tickPadding,\n      tick.position,\n      position,\n      axisTicksDimensions,\n    );\n\n    const { maxLabelTextWidth, maxLabelTextHeight } = axisTicksDimensions;\n    const centeredRectProps = centerRotationOrigin(axisTicksDimensions, {\n      x: tickLabelProps.x,\n      y: tickLabelProps.y,\n    });\n\n    const textProps = {\n      width: maxLabelTextWidth,\n      height: maxLabelTextHeight,\n      rotation: tickLabelRotation,\n      ...tickLabelProps,\n      ...centeredRectProps,\n    };\n\n    return (\n      <Group key={`tick-${i}`}>\n        {debug && <Rect {...textProps} stroke=\"black\" strokeWidth={1} fill=\"violet\" />}\n        <Text {...textProps} {...labelStyle} text={tick.label} />\n      </Group>\n    );\n  }\n\n  private renderTickLine = (tick: AxisTick, i: number) => {\n    const {\n      axisSpec: { tickSize, tickPadding, position },\n      axisTicksDimensions: { maxLabelBboxHeight },\n      chartTheme: {\n        axes: { tickLineStyle },\n      },\n    } = this.props;\n\n    const lineProps = isVertical(position)\n      ? getVerticalAxisTickLineProps(position, tickPadding, tickSize, tick.position)\n      : getHorizontalAxisTickLineProps(\n          position,\n          tickPadding,\n          tickSize,\n          tick.position,\n          maxLabelBboxHeight,\n        );\n\n    return <Line key={`tick-${i}`} points={lineProps} {...tickLineStyle} />;\n  }\n  private renderAxis = () => {\n    const { ticks, axisPosition } = this.props;\n    return (\n      <Group x={axisPosition.left} y={axisPosition.top}>\n        <Group key=\"lines\">{this.renderAxisLine()}</Group>\n        <Group key=\"tick-lines\">{ticks.map(this.renderTickLine)}</Group>\n        <Group key=\"ticks\">\n          {ticks.filter((tick) => tick.label !== null).map(this.renderTickLabel)}\n        </Group>\n        {this.renderAxisTitle()}\n      </Group>\n    );\n  }\n  private renderAxisLine = () => {\n    const {\n      axisSpec: { tickSize, tickPadding, position },\n      axisPosition,\n      axisTicksDimensions,\n      chartTheme: {\n        axes: { axisLineStyle },\n      },\n    } = this.props;\n    const lineProps: number[] = [];\n    if (isVertical(position)) {\n      lineProps[0] = position === Position.Left ? tickSize + tickPadding : 0;\n      lineProps[2] = position === Position.Left ? tickSize + tickPadding : 0;\n      lineProps[1] = 0;\n      lineProps[3] = axisPosition.height;\n    } else {\n      lineProps[0] = 0;\n      lineProps[2] = axisPosition.width;\n      lineProps[1] =\n        position === Position.Top\n          ? axisTicksDimensions.maxLabelBboxHeight + tickSize + tickPadding\n          : 0;\n      lineProps[3] =\n        position === Position.Top\n          ? axisTicksDimensions.maxLabelBboxHeight + tickSize + tickPadding\n          : 0;\n    }\n    return <Line points={lineProps} {...axisLineStyle} />;\n  }\n  private renderAxisTitle() {\n    const {\n      axisSpec: { title, position },\n    } = this.props;\n    if (!title) {\n      return null;\n    }\n    if (isHorizontal(position)) {\n      return this.renderHorizontalAxisTitle();\n    }\n    return this.renderVerticalAxisTitle();\n  }\n  private renderVerticalAxisTitle() {\n    const {\n      axisPosition: { height },\n      axisSpec: { title, position, tickSize, tickPadding },\n      axisTicksDimensions: { maxLabelBboxWidth },\n      chartTheme: {\n        axes: { axisTitleStyle },\n      },\n      debug,\n    } = this.props;\n    if (!title) {\n      return null;\n    }\n    const { padding, ...titleStyle } = axisTitleStyle;\n    const top = height;\n    const left =\n      position === Position.Left\n        ? -(maxLabelBboxWidth + titleStyle.fontSize + padding)\n        : tickSize + tickPadding + maxLabelBboxWidth + padding;\n\n    return (\n      <Group>\n        {debug && (\n          <Rect\n            x={left}\n            y={top}\n            width={height}\n            height={titleStyle.fontSize}\n            fill=\"violet\"\n            stroke=\"black\"\n            strokeWidth={1}\n            rotation={-90}\n          />\n        )}\n        <Text\n          align=\"center\"\n          x={left}\n          y={top}\n          text={title}\n          width={height}\n          rotation={-90}\n          {...titleStyle}\n        />\n      </Group>\n    );\n  }\n  private renderHorizontalAxisTitle() {\n    const {\n      axisPosition: { width, height },\n      axisSpec: { title, position, tickSize, tickPadding },\n      axisTicksDimensions: { maxLabelBboxHeight },\n      chartTheme: {\n        axes: {\n          axisTitleStyle: { padding, ...titleStyle },\n        },\n      },\n      debug,\n    } = this.props;\n\n    if (!title) {\n      return;\n    }\n\n    const top =\n      position === Position.Top\n        ? -maxLabelBboxHeight - padding\n        : maxLabelBboxHeight + tickPadding + tickSize + padding;\n\n    const left = 0;\n    return (\n      <Group>\n        {debug && (\n          <Rect\n            x={left}\n            y={top}\n            width={width}\n            height={titleStyle.fontSize}\n            stroke=\"black\"\n            strokeWidth={1}\n            fill=\"violet\"\n          />\n        )}\n        <Text\n          align=\"center\"\n          x={left}\n          y={top}\n          width={width}\n          height={height}\n          text={title}\n          {...titleStyle}\n        />\n      </Group>\n    );\n  }\n}\n","import { Group as KonvaGroup } from 'konva';\nimport React from 'react';\nimport { Group, Rect } from 'react-konva';\nimport { animated, Spring } from 'react-spring/renderprops-konva.cjs';\nimport { LegendItem } from '../../lib/series/legend';\nimport { BarGeometry, getGeometryStyle } from '../../lib/series/rendering';\nimport { BarSeriesStyle, SharedGeometryStyle } from '../../lib/themes/theme';\nimport { buildBarProps } from './utils/rendering_props_utils';\n\ninterface BarGeometriesDataProps {\n  animated?: boolean;\n  bars: BarGeometry[];\n  style: BarSeriesStyle;\n  sharedStyle: SharedGeometryStyle;\n  highlightedLegendItem: LegendItem | null;\n}\ninterface BarGeometriesDataState {\n  overBar?: BarGeometry;\n}\nexport class BarGeometries extends React.PureComponent<\n  BarGeometriesDataProps,\n  BarGeometriesDataState\n  > {\n  static defaultProps: Partial<BarGeometriesDataProps> = {\n    animated: false,\n  };\n  private readonly barSeriesRef: React.RefObject<KonvaGroup> = React.createRef();\n  constructor(props: BarGeometriesDataProps) {\n    super(props);\n    this.barSeriesRef = React.createRef();\n    this.state = {\n      overBar: undefined,\n    };\n  }\n  render() {\n    const { bars } = this.props;\n    return (\n      <Group ref={this.barSeriesRef} key={'bar_series'}>\n        {this.renderBarGeoms(bars)}\n      </Group>\n    );\n  }\n\n  private renderBarGeoms = (bars: BarGeometry[]): JSX.Element[] => {\n    const { overBar } = this.state;\n    const { style, sharedStyle } = this.props;\n    return bars.map((bar, index) => {\n      const { x, y, width, height, color, seriesStyle } = bar;\n      const border = seriesStyle ? seriesStyle.border : style.border;\n      const customOpacity = seriesStyle ? seriesStyle.opacity : undefined;\n\n      // Properties to determine if we need to highlight individual bars depending on hover state\n      const hasGeometryHover = overBar != null;\n      const hasHighlight = overBar === bar;\n      const individualHighlight = {\n        hasGeometryHover,\n        hasHighlight,\n      };\n\n      const geometryStyle = getGeometryStyle(\n        bar.geometryId,\n        this.props.highlightedLegendItem,\n        sharedStyle,\n        customOpacity,\n        individualHighlight,\n      );\n\n      if (this.props.animated) {\n        return (\n          <Group key={index}>\n            <Spring native from={{ y: y + height, height: 0 }} to={{ y, height }}>\n              {(props: { y: number; height: number }) => {\n                const barProps = buildBarProps({\n                  index,\n                  x,\n                  y: props.y,\n                  width,\n                  height: props.height,\n                  fill: color,\n                  stroke: border.stroke,\n                  strokeWidth: border.strokeWidth,\n                  borderEnabled: border.visible,\n                  geometryStyle,\n                });\n\n                return <animated.Rect {...barProps} />;\n              }}\n            </Spring>\n          </Group>\n        );\n      } else {\n        const barProps = buildBarProps({\n          index,\n          x,\n          y,\n          width,\n          height,\n          fill: color,\n          stroke: border.stroke,\n          strokeWidth: border.strokeWidth,\n          borderEnabled: border.visible,\n          geometryStyle,\n        });\n        return (\n          <React.Fragment key={index}>\n            <Rect {...barProps} />\n          </React.Fragment>\n        );\n      }\n    });\n  }\n}\n","import React from 'react';\nimport { Group, Rect, Text } from 'react-konva';\nimport { BarGeometry } from '../../lib/series/rendering';\nimport { Rotation } from '../../lib/series/specs';\nimport { DisplayValueStyle } from '../../lib/themes/theme';\nimport { Dimensions } from '../../lib/utils/dimensions';\nimport { buildBarValueProps } from './utils/rendering_props_utils';\n\ninterface BarValuesProps {\n  chartDimensions: Dimensions;\n  chartRotation: Rotation;\n  debug: boolean;\n  bars: BarGeometry[];\n  displayValueStyle: DisplayValueStyle;\n}\n\nexport class BarValues extends React.PureComponent<BarValuesProps> {\n  render() {\n    const { chartDimensions } = this.props;\n\n    return (\n      <Group x={chartDimensions.left} y={chartDimensions.top}>\n        {this.renderBarValues()}\n      </Group>\n    );\n  }\n\n  private renderBarValues = () => {\n    const { bars, displayValueStyle, debug, chartRotation, chartDimensions } = this.props;\n    return bars.map((bar, index) => {\n      const { displayValue, x, y, height, width } = bar;\n      if (!displayValue) {\n        return;\n      }\n\n      const key = `bar-value-${index}`;\n      const displayValueProps = buildBarValueProps({\n        x,\n        y,\n        barHeight: height,\n        barWidth: width,\n        displayValueStyle,\n        displayValue,\n        chartRotation,\n        chartDimensions,\n      });\n\n      const debugProps = {\n        ...displayValueProps,\n        stroke: 'violet',\n        strokeWidth: 1,\n        fill: 'transparent',\n      };\n\n      return (\n        <Group key={key}>\n          {debug && <Rect {...debugProps} />}\n          {displayValue && <Text {...displayValueProps} />}\n        </Group>\n      );\n    });\n  }\n}\n","import React from 'react';\nimport { Group, Line } from 'react-konva';\nimport { AxisLinePosition } from '../../lib/axes/axis_utils';\nimport { DEFAULT_GRID_LINE_CONFIG, GridLineConfig, mergeWithDefaultGridLineConfig } from '../../lib/themes/theme';\nimport { Dimensions } from '../../lib/utils/dimensions';\n\ninterface GridProps {\n  chartDimensions: Dimensions;\n  debug: boolean;\n  gridLineStyle: GridLineConfig | undefined;\n  linesPositions: AxisLinePosition[];\n}\n\nexport class Grid extends React.PureComponent<GridProps> {\n  render() {\n    return this.renderGrid();\n  }\n  private renderGridLine = (linePosition: AxisLinePosition, i: number) => {\n    const {\n      gridLineStyle,\n    } = this.props;\n\n    const config = gridLineStyle ? mergeWithDefaultGridLineConfig(gridLineStyle) : DEFAULT_GRID_LINE_CONFIG;\n\n    return <Line key={`tick-${i}`} points={linePosition} {...config} />;\n  }\n\n  private renderGrid = () => {\n    const { chartDimensions, linesPositions } = this.props;\n\n    return (\n      <Group x={chartDimensions.left} y={chartDimensions.top}>\n        <Group key=\"grid-lines\">{linesPositions.map(this.renderGridLine)}</Group>\n      </Group>\n    );\n  }\n}\n","import React from 'react';\nimport { Group, Line } from 'react-konva';\nimport { LineAnnotationStyle } from '../../lib/themes/theme';\nimport { Dimensions } from '../../lib/utils/dimensions';\nimport { AnnotationLineProps } from '../../state/annotation_utils';\n\ninterface LineAnnotationProps {\n  chartDimensions: Dimensions;\n  debug: boolean;\n  lines: AnnotationLineProps[];\n  lineStyle: LineAnnotationStyle;\n}\n\nexport class LineAnnotation extends React.PureComponent<LineAnnotationProps> {\n  render() {\n    return this.renderAnnotation();\n  }\n  private renderAnnotationLine = (lineConfig: AnnotationLineProps, i: number) => {\n    const { line } = this.props.lineStyle;\n    const { position } = lineConfig;\n\n    const lineProps = {\n      points: position,\n      ...line,\n    };\n\n    return <Line key={`tick-${i}`} {...lineProps} />;\n  }\n\n  private renderAnnotation = () => {\n    const { lines } = this.props;\n\n    return (\n      <Group>\n        {lines.map(this.renderAnnotationLine)}\n      </Group>\n    );\n  }\n}\n","import { Group as KonvaGroup } from 'konva';\nimport React from 'react';\nimport { Circle, Group, Path } from 'react-konva';\nimport { animated, Spring } from 'react-spring/renderprops-konva.cjs';\nimport { LegendItem } from '../../lib/series/legend';\nimport { getGeometryStyle, LineGeometry, PointGeometry } from '../../lib/series/rendering';\nimport { LineSeriesStyle, SharedGeometryStyle } from '../../lib/themes/theme';\nimport {\n  buildLinePointProps,\n  buildLineProps,\n  buildPointStyleProps,\n  PointStyleProps,\n} from './utils/rendering_props_utils';\n\ninterface LineGeometriesDataProps {\n  animated?: boolean;\n  lines: LineGeometry[];\n  style: LineSeriesStyle;\n  sharedStyle: SharedGeometryStyle;\n  highlightedLegendItem: LegendItem | null;\n}\ninterface LineGeometriesDataState {\n  overPoint?: PointGeometry;\n}\nexport class LineGeometries extends React.PureComponent<\n  LineGeometriesDataProps,\n  LineGeometriesDataState\n  > {\n  static defaultProps: Partial<LineGeometriesDataProps> = {\n    animated: false,\n  };\n  private readonly barSeriesRef: React.RefObject<KonvaGroup> = React.createRef();\n  constructor(props: LineGeometriesDataProps) {\n    super(props);\n    this.barSeriesRef = React.createRef();\n    this.state = {\n      overPoint: undefined,\n    };\n  }\n\n  render() {\n    const { point, line } = this.props.style;\n\n    return (\n      <Group ref={this.barSeriesRef} key={'bar_series'}>\n        {this.renderLineGeoms(line.visible)}\n        {this.renderLinePoints(point.visible)}\n      </Group>\n    );\n  }\n\n  private renderLinePoints = (themeIsVisible: boolean): JSX.Element[] => {\n    const { lines } = this.props;\n    return lines.reduce(\n      (acc, glyph, i) => {\n        const { points, seriesPointStyle } = glyph;\n\n        const isVisible = seriesPointStyle ? seriesPointStyle.visible : themeIsVisible;\n        if (!isVisible) {\n          return acc;\n        }\n\n        const { radius, strokeWidth, opacity } = this.props.style.point;\n        const pointStyleProps = buildPointStyleProps({\n          radius,\n          strokeWidth,\n          opacity,\n          seriesPointStyle,\n        });\n\n        return [...acc, ...this.renderPoints(points, i, pointStyleProps)];\n      },\n      [] as JSX.Element[],\n    );\n  }\n\n  private renderPoints = (\n    linePoints: PointGeometry[],\n    lineIndex: number,\n    pointStyleProps: PointStyleProps,\n  ): JSX.Element[] => {\n    const linePointsElements: JSX.Element[] = [];\n    linePoints.forEach((linePoint, pointIndex) => {\n      const { x, y, color, transform } = linePoint;\n\n      if (this.props.animated) {\n        linePointsElements.push(\n          <Group key={`line-point-group-${lineIndex}-${pointIndex}`} x={transform.x}>\n            <Spring native from={{ y }} to={{ y }}>\n              {(props: { y: number }) => {\n                const pointProps = buildLinePointProps({\n                  lineIndex,\n                  pointIndex,\n                  x,\n                  y,\n                  color,\n                  pointStyleProps,\n                });\n                return <animated.Circle {...pointProps} />;\n              }}\n            </Spring>\n          </Group>);\n      } else {\n        const pointProps = buildLinePointProps({\n          lineIndex,\n          pointIndex,\n          x: transform.x + x,\n          y,\n          color,\n          pointStyleProps,\n        });\n        linePointsElements.push(<Circle {...pointProps} />);\n      }\n    });\n    return linePointsElements;\n  }\n\n  private renderLineGeoms = (themeIsVisible: boolean): JSX.Element[] => {\n    const { style, lines, sharedStyle } = this.props;\n    const { strokeWidth } = style.line;\n\n    const lineElements: JSX.Element[] = [];\n\n    lines.forEach((glyph, index) => {\n      const { line, color, transform, geometryId, seriesLineStyle } = glyph;\n      const isVisible = seriesLineStyle ? seriesLineStyle.visible : themeIsVisible;\n\n      if (!isVisible) {\n        return;\n      }\n\n      const customOpacity = seriesLineStyle ? seriesLineStyle.opacity : undefined;\n\n      const geometryStyle = getGeometryStyle(\n        geometryId,\n        this.props.highlightedLegendItem,\n        sharedStyle,\n        customOpacity,\n      );\n\n      if (this.props.animated) {\n        lineElements.push(\n          <Group key={index} x={transform.x}>\n            <Spring native reset from={{ opacity: 0 }} to={{ opacity: 1 }}>\n              {(props: { opacity: number }) => {\n                const lineProps = buildLineProps({\n                  index,\n                  xTransform: 0,\n                  linePath: line,\n                  color,\n                  strokeWidth,\n                  geometryStyle,\n                  seriesLineStyle,\n                });\n                return <animated.Path {...lineProps} />;\n              }}\n            </Spring>\n          </Group>);\n      } else {\n        const lineProps = buildLineProps({\n          index,\n          xTransform: transform.x,\n          linePath: line,\n          color,\n          strokeWidth,\n          geometryStyle,\n          seriesLineStyle,\n        });\n        lineElements.push(<Path {...lineProps} />);\n      }\n    });\n\n    return lineElements;\n  }\n}\n","import React from 'react';\nimport { Group, Rect } from 'react-konva';\nimport { RectAnnotationStyle } from '../../lib/themes/theme';\nimport { Dimensions } from '../../lib/utils/dimensions';\nimport { AnnotationRectProps } from '../../state/annotation_utils';\n\ninterface RectAnnotationProps {\n  chartDimensions: Dimensions;\n  debug: boolean;\n  rects: AnnotationRectProps[];\n  rectStyle: RectAnnotationStyle;\n}\n\nexport class RectAnnotation extends React.PureComponent<RectAnnotationProps> {\n  render() {\n    return this.renderAnnotation();\n  }\n  private renderAnnotationRect = (props: AnnotationRectProps, i: number) => {\n    const { x, y, width, height } = props.rect;\n\n    const rectProps = {\n      ...this.props.rectStyle,\n      x,\n      y,\n      width,\n      height,\n    };\n\n    return <Rect key={`rect-${i}`} {...rectProps} />;\n  }\n\n  private renderAnnotation = () => {\n    const { rects } = this.props;\n\n    return (\n      <Group>\n        {rects.map(this.renderAnnotationRect)}\n      </Group>\n    );\n  }\n}\n","// import { toJS } from 'mobx';\nimport { inject, observer } from 'mobx-react';\nimport React from 'react';\n// import { LineSeries } from '../components/line_series';\nimport { ChartStore } from '../../state/chart_state';\n// import { DataSeriesType } from '../commons/series/specs';\n// import { AreaSeries } from '../components/area_series';\nimport { Axis } from './axis';\nimport { BarSeries } from './bar_series';\n// import { AreaSeriesGlyph } from '../utils/area_series_utils';\n// import { BarSeriesGlyph } from '../utils/bar_series_utils';\n// import { LineSeriesGlyph } from '../utils/line_series_utils';\n\ninterface ReactiveChartProps {\n  chartStore?: ChartStore; // FIX until we find a better way on ts mobx\n}\n// interface BarSeriesDataGlyphs {\n//   type: DataSeriesType;\n//   bars: BarSeriesGlyph[];\n// }\n// interface LineSeriesDataGlyphs {\n//   type: DataSeriesType;\n//   line: LineSeriesGlyph;\n// }\n// interface AreaSeriesDataGlyphs {\n//   type: DataSeriesType;\n//   area: AreaSeriesGlyph;\n// }\n\nclass Chart extends React.Component<ReactiveChartProps> {\n  static displayName = 'ReactiveChart';\n\n  componentDidMount() {\n    // tslint:disable-next-line:no-console\n    console.log('Chart mounted');\n  }\n\n  componentWillUnmount() {\n    // tslint:disable-next-line:no-console\n    console.log('Chart unmounted');\n  }\n\n  renderAxes = () => {\n    const {\n      axesVisibleTicks,\n      axesSpecs,\n      axesTicksDimensions,\n      axesPositions,\n      chartTheme,\n    } = this.props.chartStore!;\n    const axesComponents: JSX.Element[] = [];\n    axesVisibleTicks.forEach((axisTicks, axisId) => {\n      const axisSpec = axesSpecs.get(axisId);\n      const axisTicksDimensions = axesTicksDimensions.get(axisId);\n      const axisPosition = axesPositions.get(axisId);\n      const ticks = axesVisibleTicks.get(axisId);\n      if (!ticks || !axisSpec || !axisTicksDimensions || !axisPosition) {\n        return;\n      }\n      axesComponents.push(\n        <Axis\n          key={`axis-${axisId}`}\n          axisSpec={axisSpec}\n          axisTicksDimensions={axisTicksDimensions}\n          axisPosition={axisPosition}\n          ticks={ticks}\n          chartTheme={chartTheme}\n        />,\n      );\n    });\n    return axesComponents;\n  }\n  // public renderLineSeries = () => {\n  //   const { seriesGlyphs } = this.props.chartStore!;\n  //   const points: JSX.Element[] = [];\n  //   seriesGlyphs.forEach((spec, specId) => {\n  //     if (spec.type !== DataSeriesType.Line) {\n  //       return;\n  //     }\n  //     const lineGlyph = spec as LineSeriesDataGlyphs;\n  //     points.push(<LineSeries key={`line-series-${specId}`} line={lineGlyph.line} />);\n  //   });\n  //   return points;\n  // }\n  // public renderPointSeries = () => {\n  //   return null;\n  // }\n  renderBarSeries = () => {\n    const { geometries, canDataBeAnimated } = this.props.chartStore!;\n    if (!geometries) {\n      return;\n    }\n    return <BarSeries key=\"data bars\" animated={canDataBeAnimated} bars={geometries.bars} />;\n  }\n  // public renderAreaSeries = () => {\n  //   const { seriesGlyphs } = this.props.chartStore!;\n  //   const points: JSX.Element[] = [];\n  //   seriesGlyphs.forEach((spec, specId) => {\n  //     if (spec.type !== DataSeriesType.Area) {\n  //       return;\n  //     }\n  //     const areaGlyph = spec as AreaSeriesDataGlyphs;\n  //     // tslint:disable-next-line:no-console\n  //     console.log('areaGlyph', areaGlyph);\n  //     points.push(<AreaSeries key={`area-series-${specId}`} area={areaGlyph.area} />);\n  //   });\n  //   return points;\n  // }\n  render() {\n    const { initialized } = this.props.chartStore!;\n    if (!initialized.get()) {\n      return null;\n    }\n\n    const { parentDimensions, chartDimensions, chartRotation } = this.props.chartStore!;\n    // console.log({ lineSeriesSpecs: toJS(lineSeriesSpecs)})\n    // console.log({ groupDomains: toJS(groupDomains)})\n    // console.log({ vLeftAxisSpec: toJS(vLeftAxisSpec)})\n    // console.log({ hBottomAxisSpec: toJS(hBottomAxisSpec)})\n    // console.log({ chartDimensions});\n    let chartTransform = '';\n    if (chartRotation === 90) {\n      chartTransform = `translate(${chartDimensions.width} 0) rotate(90)`;\n    } else if (chartRotation === -90) {\n      chartTransform = `translate(0 ${chartDimensions.height}) rotate(-90)`;\n    }\n    return (\n      <div\n        style={{\n          position: 'absolute',\n          top: 0,\n          bottom: 0,\n          right: 0,\n          left: 0,\n          // width: '100%',\n          // height: '100%',\n          // background: 'lightblue',\n          // border: '10px solid blue',\n          boxSizing: 'border-box',\n        }}\n      >\n        <svg\n          width={parentDimensions.width}\n          height={parentDimensions.height}\n          style={{\n            width: '100%',\n            height: '100%',\n          }}\n        >\n          {/* <defs>\n            <clipPath id=\"chart-bbox\" clipPathUnits=\"objectBoundingBox\">\n              <rect\n                x={chartDimensions.left}\n                y={chartDimensions.top}\n                width={chartDimensions.width + chartDimensions.left}\n                height={chartDimensions.height}\n              />\n            </clipPath>\n          </defs> */}\n          <g\n            className=\"euiSeriesChartChart_group\"\n            transform={`translate(${chartDimensions.left} ${chartDimensions.top})`}\n          >\n            {/* <rect\n              x={0}\n              y={0}\n              width={chartDimensions.width}\n              height={chartDimensions.height}\n              fill=\"red\"\n              fillOpacity={0.3}\n            /> */}\n            {/* <g className=\"euiSeriesChartSeries_lineSeries\">{this.renderLineSeries()}</g>\n            <g className=\"euiSeriesChartSeries_pointSeries\">{this.renderPointSeries()}</g> */}\n            <g className=\"euiSeriesChartSeries_barSeries\" transform={chartTransform}>\n              {this.renderBarSeries()}\n            </g>\n            {/* <g className=\"euiSeriesChartSeries_areaSeries\">{this.renderAreaSeries()}</g> */}\n          </g>\n          <g className=\"euiSeriesChartAxis_group\">{this.renderAxes()}</g>\n        </svg>\n      </div>\n    );\n  }\n}\n\nexport const ReactiveChart = inject('chartStore')(observer(Chart));\n","import React, { SVGProps } from 'react';\nimport { AxisTick, AxisTicksDimensions, isHorizontal, isVertical } from '../../lib/axes/axis_utils';\nimport { AxisSpec, Position } from '../../lib/series/specs';\nimport { Theme } from '../../lib/themes/theme';\nimport { Dimensions } from '../../lib/utils/dimensions';\n\ninterface AxisProps {\n  chartTheme: Theme;\n  axisSpec: AxisSpec;\n  axisTicksDimensions: AxisTicksDimensions;\n  axisPosition: Dimensions;\n  ticks: AxisTick[];\n}\n\nexport class Axis extends React.PureComponent<AxisProps> {\n  render() {\n    return this.renderAxis();\n  }\n  renderTickLabel = (tick: AxisTick, i: number) => {\n    const {\n      axisSpec: { tickSize, tickPadding, position },\n    } = this.props;\n\n    const textProps: SVGProps<SVGTextElement> = {};\n\n    if (isVertical(position)) {\n      textProps.y = tick.position;\n      textProps.textAnchor = position === 'left' ? 'end' : 'start';\n      textProps.x = position === 'left' ? 0 : tickSize + tickPadding;\n      textProps.dominantBaseline = 'middle';\n    } else {\n      textProps.y = position === 'top' ? 0 : tickSize + tickPadding;\n      textProps.x = tick.position;\n      textProps.textAnchor = 'middle';\n      textProps.dominantBaseline = 'hanging';\n    }\n    // const transform = `translate(${textProps.x}, ${textProps.y})`;\n    return (\n      <text\n        className=\"euiSeriesChartAxis_tickLabel\"\n        key={`tick-${i}`}\n        {...textProps}\n        // textAnchor={textProps.textAnchor}\n        // dominantBaseline={textProps.dominantBaseline}\n        // transform={transform}\n      >\n        {tick.label}\n      </text>\n    );\n  }\n\n  private renderTickLine = (tick: AxisTick, i: number) => {\n    const {\n      axisSpec: { tickSize, tickPadding, position },\n      axisTicksDimensions: { maxLabelBboxHeight },\n    } = this.props;\n\n    const lineProps: SVGProps<SVGLineElement> = {};\n\n    if (isVertical(position)) {\n      lineProps.x1 = position === 'left' ? tickPadding : 0;\n      lineProps.x2 = position === 'left' ? tickSize + tickPadding : tickSize;\n      lineProps.y1 = tick.position;\n      lineProps.y2 = tick.position;\n    } else {\n      lineProps.x1 = tick.position;\n      lineProps.x2 = tick.position;\n      lineProps.y1 = position === 'top' ? maxLabelBboxHeight + tickPadding : 0;\n      lineProps.y2 = position === 'top' ? maxLabelBboxHeight + tickPadding + tickSize : tickSize;\n    }\n\n    return <line className=\"euiSeriesChartAxis_tickLine\" key={`tick-${i}`} {...lineProps} />;\n  }\n  private renderAxis = () => {\n    const { ticks, axisPosition } = this.props;\n    const translation = `translate(${axisPosition.left} ${axisPosition.top})`;\n    return (\n      <g className=\"euiSeriesChartAxis\" transform={translation}>\n        <g className=\"euiSeriesChartAxis_lineGroup\">{this.renderLine()}</g>\n        <g className=\"euiSeriesChartAxis_ticksGroup\">{ticks.map(this.renderTickLine)}</g>\n        <g className=\"euiSeriesChartAxis_tickLabelsGroup\">\n          {ticks.filter((tick) => tick.label !== null).map(this.renderTickLabel)}\n        </g>\n        {this.renderAxisTitle()}\n      </g>\n    );\n  }\n  private renderLine = () => {\n    const {\n      axisSpec: { tickSize, tickPadding, position },\n      axisPosition,\n      axisTicksDimensions,\n    } = this.props;\n    const lineProps: SVGProps<SVGLineElement> = {};\n    if (orientation === 'vertical') {\n      lineProps.x1 = position === 'left' ? tickSize + tickPadding : 0;\n      lineProps.x2 = position === 'left' ? tickSize + tickPadding : 0;\n      lineProps.y1 = 0;\n      lineProps.y2 = axisPosition.height;\n    } else {\n      lineProps.x1 = 0;\n      lineProps.x2 = axisPosition.width;\n      lineProps.y1 =\n        position === 'top' ? axisTicksDimensions.maxLabelBboxHeight + tickSize + tickPadding : 0;\n      lineProps.y2 =\n        position === 'top' ? axisTicksDimensions.maxLabelBboxHeight + tickSize + tickPadding : 0;\n    }\n    return <line className=\"euiSeriesChartAxis_line\" {...lineProps} />;\n  }\n  private renderAxisTitle() {\n    const {\n      axisSpec: { title, position },\n    } = this.props;\n    if (!title) {\n      return null;\n    }\n    if (isHorizontal(position)) {\n      return this.renderHoriziontalAxisTitle();\n    }\n    return this.renderVerticalAxisTitle();\n  }\n  private renderVerticalAxisTitle() {\n    const {\n      axisPosition: { height },\n      axisSpec: { title, position, tickSize, tickPadding },\n      axisTicksDimensions: { maxLabelBboxWidth },\n      chartTheme: { chartMargins },\n    } = this.props;\n\n    const top = height / 2;\n    const left =\n      position === Position.Left\n        ? -(maxLabelBboxWidth + chartMargins.left / 2)\n        : tickSize + tickPadding + maxLabelBboxWidth + +chartMargins.right / 2;\n    const translate = `translate(${left} ${top}) rotate(-90)`;\n    return (\n      <g className=\"euiSeriesChartAxis_axisTitle\">\n        <text textAnchor=\"middle\" dominantBaseline=\"middle\" transform={translate}>\n          {title}\n        </text>\n      </g>\n    );\n  }\n  private renderHoriziontalAxisTitle() {\n    const {\n      axisPosition: { width },\n      axisSpec: { title, position, tickSize, tickPadding },\n      axisTicksDimensions: { maxLabelBboxHeight },\n      chartTheme: { chartMargins },\n    } = this.props;\n\n    const top =\n      position === Position.Top\n        ? -chartMargins.top / 2\n        : maxLabelBboxHeight + tickPadding + tickSize + chartMargins.bottom / 2;\n    const left = width / 2;\n    const translate = `translate(${left} ${top} )`;\n    return (\n      <g className=\"euiSeriesChartAxis_axisTitle\">\n        <text textAnchor=\"middle\" dominantBaseline=\"middle\" transform={translate}>\n          {title}\n        </text>\n      </g>\n    );\n  }\n}\n","import React from 'react';\nimport { BarGeometry } from '../../lib/series/rendering';\n\ninterface BarSeriesDataProps {\n  animated?: boolean;\n  bars: BarGeometry[];\n}\nexport class BarSeries extends React.PureComponent<BarSeriesDataProps> {\n  static defaultProps: Partial<BarSeriesDataProps> = {\n    animated: false,\n  };\n  render() {\n    const { animated, bars } = this.props;\n    if (animated) {\n      return this.renderAnimatedBars(bars);\n    } else {\n      return this.renderBars(bars);\n    }\n  }\n  private renderBars = (bars: BarGeometry[]) => {\n    return bars.map(({ x, y, width, height, color }, index) => {\n      return <rect key={`rect-${index}`} x={x} y={y} width={width} height={height} fill={color} />;\n    });\n  }\n  private renderAnimatedBars = (geoms: BarGeometry[]) => {\n    // tslint:disable-next-line:no-console\n    console.warn('[EUISeriesChart] Missing bar animation on SVG renderer');\n    return this.renderBars(geoms);\n  }\n}\n","import classNames from 'classnames';\nimport { inject, observer } from 'mobx-react';\nimport React from 'react';\nimport { ChartStore } from '../state/chart_state';\n\ninterface TooltipProps {\n  chartStore?: ChartStore;\n}\n\nclass TooltipsComponent extends React.Component<TooltipProps> {\n  static displayName = 'Tooltips';\n\n  render() {\n    const { isTooltipVisible, tooltipData, tooltipPosition } = this.props.chartStore!;\n    if (!isTooltipVisible.get()) {\n      return <div className=\"elasticChartsTooltip elasticChartsTooltip--hidden\" />;\n    }\n    return (\n      <div className=\"elasticChartsTooltip\" style={{ transform: tooltipPosition.transform }}>\n        <p className=\"elasticChartsTooltip__header\">{tooltipData[0] && tooltipData[0].value}</p>\n        <div className=\"elasticChartsTooltip__table\">\n          <table>\n            <tbody>\n              {tooltipData.slice(1).map(({ name, value, color, isHighlighted }, index) => {\n                const classes = classNames({\n                  elasticChartsTooltip__rowHighlighted: isHighlighted,\n                });\n                return (\n                  <tr key={`row-${index}`} className={classes}>\n                    <td\n                      className=\"elasticChartsTooltip__label\"\n                      style={{\n                        borderLeftColor: color,\n                      }}\n                    >\n                      {name}\n                    </td>\n                    <td>{value}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const Tooltips = inject('chartStore')(observer(TooltipsComponent));\n","export interface Scale {\n  domain: any[];\n  range: number[];\n  ticks: () => any[];\n  scale: (value: any) => number;\n  invert: (value: number) => any;\n  invertWithStep: (value: number, data: any[]) => any;\n  bandwidth: number;\n  minInterval: number;\n  type: ScaleType;\n  isInverted: boolean;\n  barsPadding: number;\n}\nexport type ScaleFunction = (value: any) => number;\n\n/**\n * The scale type\n */\nexport const enum ScaleType {\n  Linear = 'linear',\n  Ordinal = 'ordinal',\n  Log = 'log',\n  Sqrt = 'sqrt',\n  Time = 'time',\n}\n\nexport interface ScaleConfig {\n  accessor: (value: any) => any;\n  domain: any[];\n  type: ScaleType;\n  clamp?: boolean;\n}\n\nexport type ScaleContinuousType =\n  | ScaleType.Linear\n  | ScaleType.Sqrt\n  | ScaleType.Log\n  | ScaleType.Time;\nexport type ScaleOrdinalType = ScaleType.Ordinal;\nexport type ScaleTypes = ScaleContinuousType | ScaleOrdinalType;\ntry {\n    // @ts-ignore\n    ScaleType.displayName = \"ScaleType\";\n    // @ts-ignore\n    ScaleType.__docgenInfo = { \"description\": \"The scale type\", \"displayName\": \"ScaleType\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/utils/scales/scales.ts#ScaleType\"] = { docgenInfo: ScaleType.__docgenInfo, name: \"ScaleType\", path: \"src/lib/utils/scales/scales.ts#ScaleType\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { palettes } from '@elastic/eui';\nimport { Theme } from './theme';\n\nimport {\n  DEFAULT_CHART_MARGINS,\n  DEFAULT_CHART_PADDING,\n  DEFAULT_GEOMETRY_STYLES,\n  DEFAULT_MISSING_COLOR,\n} from './theme_commons';\n\nexport const DARK_THEME: Theme = {\n  chartPaddings: DEFAULT_CHART_PADDING,\n  chartMargins: DEFAULT_CHART_MARGINS,\n  lineSeriesStyle: {\n    line: {\n      stroke: DEFAULT_MISSING_COLOR,\n      strokeWidth: 1,\n      visible: true,\n    },\n    border: {\n      stroke: 'white',\n      strokeWidth: 2,\n      visible: false,\n    },\n    point: {\n      visible: true,\n      radius: 1,\n      stroke: 'white',\n      strokeWidth: 0.5,\n      opacity: 1,\n    },\n  },\n  areaSeriesStyle: {\n    area: {\n      fill: DEFAULT_MISSING_COLOR,\n      visible: true,\n      opacity: 1,\n    },\n    line: {\n      stroke: DEFAULT_MISSING_COLOR,\n      strokeWidth: 1,\n      visible: true,\n    },\n    border: {\n      stroke: 'white',\n      strokeWidth: 2,\n      visible: false,\n    },\n    point: {\n      visible: true,\n      radius: 1,\n      stroke: 'white',\n      strokeWidth: 0.5,\n      opacity: 1,\n    },\n  },\n  barSeriesStyle: {\n    border: {\n      stroke: 'white',\n      strokeWidth: 2,\n      visible: false,\n    },\n    displayValue: {\n      fontSize: 10,\n      fontStyle: 'normal',\n      fontFamily: `'Open Sans', Helvetica, Arial, sans-serif`,\n      padding: 0,\n      fill: 'white',\n      offsetX: 0,\n      offsetY: 0,\n    },\n  },\n  sharedStyle: DEFAULT_GEOMETRY_STYLES,\n  scales: {\n    barsPadding: 0.25,\n  },\n  axes: {\n    axisTitleStyle: {\n      fontSize: 12,\n      fontStyle: 'bold',\n      fontFamily: `'Open Sans', Helvetica, Arial, sans-serif`,\n      padding: 5,\n      fill: 'white',\n    },\n    axisLineStyle: {\n      stroke: 'white',\n      strokeWidth: 1,\n    },\n    tickLabelStyle: {\n      fontSize: 10,\n      fontFamily: `'Open Sans', Helvetica, Arial, sans-serif`,\n      fontStyle: 'normal',\n      fill: 'white',\n      padding: 0,\n    },\n    tickLineStyle: {\n      stroke: 'white',\n      strokeWidth: 1,\n    },\n  },\n  colors: {\n    vizColors: palettes.euiPaletteColorBlind.colors,\n    defaultVizColor: DEFAULT_MISSING_COLOR,\n  },\n  legend: {\n    verticalWidth: 160,\n    horizontalHeight: 64,\n  },\n  crosshair: {\n    band: {\n      fill: 'lightgray',\n      visible: true,\n    },\n    line: {\n      stroke: 'gray',\n      strokeWidth: 1,\n      dash: [5, 5],\n      visible: true,\n    },\n  },\n};\n","import { Simple1DNoise } from './simple_noise';\n\nexport class DataGenerator {\n  private generator: Simple1DNoise;\n  private frequency: number;\n  constructor(frequency = 500) {\n    this.generator = new Simple1DNoise();\n    this.frequency = frequency;\n  }\n  generateSimpleSeries(totalPoints = 50, group = 1) {\n    const dataPoints = new Array(totalPoints).fill(0).map((value, i) => {\n      return {\n        x: i,\n        y: 3 + Math.sin(i / this.frequency) + this.generator.getValue(i),\n        g: group,\n      };\n    });\n    return dataPoints;\n  }\n  generateGroupedSeries(totalPoints = 50, totalGroups = 2) {\n    const groups = new Array(totalGroups).fill(0).map((group, i) => {\n      return this.generateSimpleSeries(totalPoints, i);\n    });\n    return groups.reduce((acc, curr) => [...acc, ...curr]);\n  }\n}\n","export class Simple1DNoise {\n  private maxVertices: number;\n  private maxVerticesMask: number;\n  private amplitude: number;\n  private scale: number;\n  constructor(maxVertices = 256, amplitude = 5.1, scale = 0.6) {\n    this.maxVerticesMask = maxVertices - 1;\n    this.amplitude = amplitude;\n    this.scale = scale;\n    this.maxVertices = maxVertices;\n  }\n  getValue(x: number) {\n    const r = new Array(this.maxVertices).fill(0).map(Math.random);\n    const scaledX = x * this.scale;\n    const xFloor = Math.floor(scaledX);\n    const t = scaledX - xFloor;\n    const tRemapSmoothstep = t * t * (3 - 2 * t);\n\n    // tslint:disable-next-line:no-bitwise\n    const xMin = xFloor & this.maxVerticesMask;\n    // tslint:disable-next-line:no-bitwise\n    const xMax = (xMin + 1) & this.maxVerticesMask;\n\n    const y = this.lerp(r[xMin], r[xMax], tRemapSmoothstep);\n\n    return y * this.amplitude;\n  }\n  private lerp(a: number, b: number, t: number) {\n    return a * (1 - t) + b * t;\n  }\n}\n","\n  export var withStorySource = require('@storybook/addon-storysource').withStorySource;\n  export var __STORY__ = \"import { boolean } from '@storybook/addon-knobs';\\nimport { storiesOf } from '@storybook/react';\\nimport React from 'react';\\nimport {\\n  Axis,\\n  Chart,\\n  CurveType,\\n  getAxisId,\\n  getSpecId,\\n  LineSeries,\\n  niceTimeFormatByDay,\\n  Position,\\n  ScaleType,\\n  Settings,\\n  timeFormatter,\\n} from '../src/';\\nimport { KIBANA_METRICS } from '../src/lib/series/utils/test_dataset_kibana';\\nimport { TSVB_DATASET } from '../src/lib/series/utils/test_dataset_tsvb';\\n\\nconst dateFormatter = timeFormatter(niceTimeFormatByDay(1));\\n\\nstoriesOf('Line Chart', module)\\n  .add('basic', () => {\\n    const toggleSpec = boolean('toggle line spec', true);\\n    const data1 = KIBANA_METRICS.metrics.kibana_os_load[0].data;\\n    const data2 = data1.map(datum => [datum[0], datum[1] - 1]);\\n    const data = toggleSpec ? data1 : data2;\\n    const specId = toggleSpec ? 'lines1' : 'lines2';\\n\\n    return (\\n      <Chart className={'story-chart'}>\\n        <LineSeries\\n          id={getSpecId(specId)}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={data}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('w axis', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis\\n          id={getAxisId('bottom')}\\n          position={Position.Bottom}\\n          showOverlappingTicks={true}\\n          tickFormat={dateFormatter}\\n        />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Left}\\n          tickFormat={d => `${Number(d).toFixed(2)}%`}\\n        />\\n        <LineSeries\\n          id={getSpecId('lines')}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data.slice(0, 5)}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('ordinal w axis', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis\\n          id={getAxisId('bottom')}\\n          position={Position.Bottom}\\n          showOverlappingTicks={true}\\n          tickFormat={dateFormatter}\\n        />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Left}\\n          tickFormat={d => `${Number(d).toFixed(2)}%`}\\n        />\\n        <LineSeries\\n          id={getSpecId('lines')}\\n          xScaleType={ScaleType.Ordinal}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data.slice(0, 5)}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('linear w axis', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis\\n          id={getAxisId('bottom')}\\n          position={Position.Bottom}\\n          showOverlappingTicks={true}\\n          tickFormat={dateFormatter}\\n        />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Left}\\n          tickFormat={d => `${Number(d).toFixed(2)}%`}\\n        />\\n        <LineSeries\\n          id={getSpecId('lines')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data.slice(0, 5)}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('w axis and legend', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} />\\n        <Axis\\n          id={getAxisId('bottom')}\\n          position={Position.Bottom}\\n          showOverlappingTicks={true}\\n          tickFormat={dateFormatter}\\n        />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Left}\\n          tickFormat={d => `${Number(d).toFixed(0)}%`}\\n        />\\n        <LineSeries\\n          id={getSpecId('lines')}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('curved w axis and legend', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} />\\n        <Axis\\n          id={getAxisId('bottom')}\\n          position={Position.Bottom}\\n          showOverlappingTicks={true}\\n          tickFormat={dateFormatter}\\n        />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Left}\\n          tickFormat={d => `${Number(d).toFixed(0)}%`}\\n        />\\n\\n        <LineSeries\\n          id={getSpecId('monotone x')}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\\n          curve={CurveType.CURVE_MONOTONE_X}\\n        />\\n        <LineSeries\\n          id={getSpecId('basis')}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\\n          curve={CurveType.CURVE_BASIS}\\n        />\\n        <LineSeries\\n          id={getSpecId('cardinal')}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\\n          curve={CurveType.CURVE_CARDINAL}\\n        />\\n        <LineSeries\\n          id={getSpecId('catmull rom')}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\\n          curve={CurveType.CURVE_CATMULL_ROM}\\n        />\\n        <LineSeries\\n          id={getSpecId('natural')}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\\n          curve={CurveType.CURVE_NATURAL}\\n        />\\n        <LineSeries\\n          id={getSpecId('linear')}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\\n          curve={CurveType.LINEAR}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('multiple w axis and legend', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} />\\n        <Axis\\n          id={getAxisId('bottom')}\\n          position={Position.Bottom}\\n          showOverlappingTicks={true}\\n          tickFormat={dateFormatter}\\n        />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Left}\\n          tickFormat={d => `${Number(d).toFixed(0)}%`}\\n        />\\n\\n        <LineSeries\\n          id={getSpecId(KIBANA_METRICS.metrics.kibana_os_load[0].metric.label)}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\\n          curve={CurveType.LINEAR}\\n        />\\n        <LineSeries\\n          id={getSpecId(KIBANA_METRICS.metrics.kibana_os_load[1].metric.label)}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[1].data}\\n          curve={CurveType.LINEAR}\\n        />\\n        <LineSeries\\n          id={getSpecId(KIBANA_METRICS.metrics.kibana_os_load[2].metric.label)}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[2].data}\\n          curve={CurveType.LINEAR}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('stacked w axis and legend', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} />\\n        <Axis\\n          id={getAxisId('bottom')}\\n          position={Position.Bottom}\\n          showOverlappingTicks={true}\\n          tickFormat={dateFormatter}\\n        />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Left}\\n          tickFormat={d => `${Number(d).toFixed(0)}%`}\\n        />\\n        <LineSeries\\n          id={getSpecId(KIBANA_METRICS.metrics.kibana_os_load[2].metric.label)}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[2].data}\\n          curve={CurveType.LINEAR}\\n          stackAccessors={[0]}\\n        />\\n        <LineSeries\\n          id={getSpecId(KIBANA_METRICS.metrics.kibana_os_load[1].metric.label)}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[1].data}\\n          curve={CurveType.LINEAR}\\n          stackAccessors={[0]}\\n        />\\n        <LineSeries\\n          id={getSpecId(KIBANA_METRICS.metrics.kibana_os_load[0].metric.label)}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\\n          curve={CurveType.LINEAR}\\n          stackAccessors={[0]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('multi series with log values (limit 0 or negative values)', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} />\\n        <Axis\\n          id={getAxisId('bottom')}\\n          position={Position.Bottom}\\n          showOverlappingTicks={true}\\n          tickFormat={dateFormatter}\\n        />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Left}\\n          tickFormat={d => `${Number(d).toFixed(0)}%`}\\n        />\\n        {TSVB_DATASET.series.map(series => {\\n          return (\\n            <LineSeries\\n              key={series.id}\\n              id={getSpecId(series.label)}\\n              xScaleType={ScaleType.Time}\\n              yScaleType={ScaleType.Log}\\n              xAccessor={0}\\n              yAccessors={[1]}\\n              data={series.data}\\n              curve={CurveType.CURVE_MONOTONE_X}\\n            />\\n          );\\n        })}\\n      </Chart>\\n    );\\n  });\\n\";\n  export var __ADDS_MAP__ = {\"Line Chart@multi series with log values (limit 0 or negative values)\":{\"startLoc\":{\"col\":7,\"line\":318},\"endLoc\":{\"col\":3,\"line\":350}},\"Line Chart@stacked w axis and legend\":{\"startLoc\":{\"col\":7,\"line\":269},\"endLoc\":{\"col\":3,\"line\":317}},\"Line Chart@multiple w axis and legend\":{\"startLoc\":{\"col\":7,\"line\":222},\"endLoc\":{\"col\":3,\"line\":268}},\"Line Chart@curved w axis and legend\":{\"startLoc\":{\"col\":7,\"line\":148},\"endLoc\":{\"col\":3,\"line\":221}},\"Line Chart@w axis and legend\":{\"startLoc\":{\"col\":7,\"line\":121},\"endLoc\":{\"col\":3,\"line\":147}},\"Line Chart@linear w axis\":{\"startLoc\":{\"col\":7,\"line\":95},\"endLoc\":{\"col\":3,\"line\":120}},\"Line Chart@ordinal w axis\":{\"startLoc\":{\"col\":7,\"line\":69},\"endLoc\":{\"col\":3,\"line\":94}},\"Line Chart@w axis\":{\"startLoc\":{\"col\":7,\"line\":43},\"endLoc\":{\"col\":3,\"line\":68}},\"Line Chart@basic\":{\"startLoc\":{\"col\":7,\"line\":23},\"endLoc\":{\"col\":3,\"line\":42}}};\n  \n  import { boolean } from '@storybook/addon-knobs';\nimport { storiesOf } from '@storybook/react';\nimport React from 'react';\nimport {\n  Axis,\n  Chart,\n  CurveType,\n  getAxisId,\n  getSpecId,\n  LineSeries,\n  niceTimeFormatByDay,\n  Position,\n  ScaleType,\n  Settings,\n  timeFormatter,\n} from '../src/';\nimport { KIBANA_METRICS } from '../src/lib/series/utils/test_dataset_kibana';\nimport { TSVB_DATASET } from '../src/lib/series/utils/test_dataset_tsvb';\n\nconst dateFormatter = timeFormatter(niceTimeFormatByDay(1));\n\nstoriesOf('Line Chart', module).addDecorator(withStorySource(__STORY__, __ADDS_MAP__))\n  .add('basic', () => {\n    const toggleSpec = boolean('toggle line spec', true);\n    const data1 = KIBANA_METRICS.metrics.kibana_os_load[0].data;\n    const data2 = data1.map((datum) => [datum[0], datum[1] - 1]);\n    const data = toggleSpec ? data1 : data2;\n    const specId = toggleSpec ? 'lines1' : 'lines2';\n\n    return (\n      <Chart className={'story-chart'}>\n        <LineSeries\n          id={getSpecId(specId)}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={data}\n        />\n      </Chart>\n    );\n  })\n  .add('w axis', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          showOverlappingTicks={true}\n          tickFormat={dateFormatter}\n        />\n        <Axis\n          id={getAxisId('left')}\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Left}\n          tickFormat={(d) => `${Number(d).toFixed(2)}%`}\n        />\n        <LineSeries\n          id={getSpecId('lines')}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data.slice(0, 5)}\n        />\n      </Chart>\n    );\n  })\n  .add('ordinal w axis', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          showOverlappingTicks={true}\n          tickFormat={dateFormatter}\n        />\n        <Axis\n          id={getAxisId('left')}\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Left}\n          tickFormat={(d) => `${Number(d).toFixed(2)}%`}\n        />\n        <LineSeries\n          id={getSpecId('lines')}\n          xScaleType={ScaleType.Ordinal}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data.slice(0, 5)}\n        />\n      </Chart>\n    );\n  })\n  .add('linear w axis', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          showOverlappingTicks={true}\n          tickFormat={dateFormatter}\n        />\n        <Axis\n          id={getAxisId('left')}\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Left}\n          tickFormat={(d) => `${Number(d).toFixed(2)}%`}\n        />\n        <LineSeries\n          id={getSpecId('lines')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data.slice(0, 5)}\n        />\n      </Chart>\n    );\n  })\n  .add('w axis and legend', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          showOverlappingTicks={true}\n          tickFormat={dateFormatter}\n        />\n        <Axis\n          id={getAxisId('left')}\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Left}\n          tickFormat={(d) => `${Number(d).toFixed(0)}%`}\n        />\n        <LineSeries\n          id={getSpecId('lines')}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\n        />\n      </Chart>\n    );\n  })\n  .add('curved w axis and legend', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          showOverlappingTicks={true}\n          tickFormat={dateFormatter}\n        />\n        <Axis\n          id={getAxisId('left')}\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Left}\n          tickFormat={(d) => `${Number(d).toFixed(0)}%`}\n        />\n\n        <LineSeries\n          id={getSpecId('monotone x')}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\n          curve={CurveType.CURVE_MONOTONE_X}\n        />\n        <LineSeries\n          id={getSpecId('basis')}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\n          curve={CurveType.CURVE_BASIS}\n        />\n        <LineSeries\n          id={getSpecId('cardinal')}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\n          curve={CurveType.CURVE_CARDINAL}\n        />\n        <LineSeries\n          id={getSpecId('catmull rom')}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\n          curve={CurveType.CURVE_CATMULL_ROM}\n        />\n        <LineSeries\n          id={getSpecId('natural')}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\n          curve={CurveType.CURVE_NATURAL}\n        />\n        <LineSeries\n          id={getSpecId('linear')}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\n          curve={CurveType.LINEAR}\n        />\n      </Chart>\n    );\n  })\n  .add('multiple w axis and legend', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          showOverlappingTicks={true}\n          tickFormat={dateFormatter}\n        />\n        <Axis\n          id={getAxisId('left')}\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Left}\n          tickFormat={(d) => `${Number(d).toFixed(0)}%`}\n        />\n\n        <LineSeries\n          id={getSpecId(KIBANA_METRICS.metrics.kibana_os_load[0].metric.label)}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\n          curve={CurveType.LINEAR}\n        />\n        <LineSeries\n          id={getSpecId(KIBANA_METRICS.metrics.kibana_os_load[1].metric.label)}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[1].data}\n          curve={CurveType.LINEAR}\n        />\n        <LineSeries\n          id={getSpecId(KIBANA_METRICS.metrics.kibana_os_load[2].metric.label)}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[2].data}\n          curve={CurveType.LINEAR}\n        />\n      </Chart>\n    );\n  })\n  .add('stacked w axis and legend', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          showOverlappingTicks={true}\n          tickFormat={dateFormatter}\n        />\n        <Axis\n          id={getAxisId('left')}\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Left}\n          tickFormat={(d) => `${Number(d).toFixed(0)}%`}\n        />\n        <LineSeries\n          id={getSpecId(KIBANA_METRICS.metrics.kibana_os_load[2].metric.label)}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[2].data}\n          curve={CurveType.LINEAR}\n          stackAccessors={[0]}\n        />\n        <LineSeries\n          id={getSpecId(KIBANA_METRICS.metrics.kibana_os_load[1].metric.label)}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[1].data}\n          curve={CurveType.LINEAR}\n          stackAccessors={[0]}\n        />\n        <LineSeries\n          id={getSpecId(KIBANA_METRICS.metrics.kibana_os_load[0].metric.label)}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\n          curve={CurveType.LINEAR}\n          stackAccessors={[0]}\n        />\n      </Chart>\n    );\n  })\n  .add('multi series with log values (limit 0 or negative values)', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          showOverlappingTicks={true}\n          tickFormat={dateFormatter}\n        />\n        <Axis\n          id={getAxisId('left')}\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Left}\n          tickFormat={(d) => `${Number(d).toFixed(0)}%`}\n        />\n        {TSVB_DATASET.series.map((series) => {\n          return (\n            <LineSeries\n              key={series.id}\n              id={getSpecId(series.label)}\n              xScaleType={ScaleType.Time}\n              yScaleType={ScaleType.Log}\n              xAccessor={0}\n              yAccessors={[1]}\n              data={series.data}\n              curve={CurveType.CURVE_MONOTONE_X}\n            />\n          );\n        })}\n      </Chart>\n    );\n  });\n\n  ","\n  export var withStorySource = require('@storybook/addon-storysource').withStorySource;\n  export var __STORY__ = \"import { boolean } from '@storybook/addon-knobs';\\nimport { storiesOf } from '@storybook/react';\\nimport { DateTime } from 'luxon';\\nimport React from 'react';\\nimport {\\n  AreaSeries,\\n  Axis,\\n  Chart,\\n  CurveType,\\n  getAxisId,\\n  getSpecId,\\n  LineSeries,\\n  Position,\\n  ScaleType,\\n  Settings,\\n  timeFormatter,\\n} from '../src';\\nimport { KIBANA_METRICS } from '../src/lib/series/utils/test_dataset_kibana';\\nconst dateFormatter = timeFormatter('HH:mm');\\n\\nstoriesOf('Area Chart', module)\\n  .add('basic', () => {\\n    const toggleSpec = boolean('toggle area spec', true);\\n    const data1 = KIBANA_METRICS.metrics.kibana_os_load[0].data;\\n    const data2 = data1.map(datum => [datum[0], datum[1] - 1]);\\n    const data = toggleSpec ? data1 : data2;\\n    const specId = toggleSpec ? 'areas1' : 'areas2';\\n\\n    return (\\n      <Chart className={'story-chart'}>\\n        <AreaSeries\\n          id={getSpecId(specId)}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={data}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('with time x axis', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis\\n          id={getAxisId('bottom')}\\n          title={'timestamp per 1 minute'}\\n          position={Position.Bottom}\\n          showOverlappingTicks={true}\\n          tickFormat={dateFormatter}\\n        />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <AreaSeries\\n          id={getSpecId('area')}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('with linear x axis', () => {\\n    const start = KIBANA_METRICS.metrics.kibana_os_load[0].data[0][0];\\n    const data = KIBANA_METRICS.metrics.kibana_os_load[0].data.slice(0, 20).map(d => {\\n      return [(d[0] - start) / 30000, d[1]];\\n    });\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis id={getAxisId('bottom')} title={'index'} position={Position.Bottom} />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <AreaSeries\\n          id={getSpecId('areas')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={data}\\n          curve={CurveType.CURVE_MONOTONE_X}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('with log y axis', () => {\\n    const data = KIBANA_METRICS.metrics.kibana_os_load[0].data.map(d => {\\n      return d[1] < 7 ? [d[0], null] : [d[0], d[1] - 10];\\n    });\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis id={getAxisId('bottom')} title={'index'} position={Position.Bottom} tickFormat={dateFormatter} />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <AreaSeries\\n          id={getSpecId('areas')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Log}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={data}\\n          curve={CurveType.CURVE_MONOTONE_X}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('with 4 axes', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings debug={false} />\\n        <Axis\\n          id={getAxisId('bottom')}\\n          title={'timestamp per 1 minute'}\\n          position={Position.Bottom}\\n          showOverlappingTicks={true}\\n          tickFormat={dateFormatter}\\n        />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Left}\\n          tickFormat={d => `${Number(d).toFixed(0)}%`}\\n        />\\n        <Axis\\n          id={getAxisId('top')}\\n          position={Position.Top}\\n          showOverlappingTicks={true}\\n          tickFormat={timeFormatter('HH:mm:ss')}\\n        />\\n        <Axis\\n          id={getAxisId('right')}\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Right}\\n          tickFormat={d => `${Number(d).toFixed(0)} %`}\\n        />\\n\\n        <AreaSeries\\n          id={getSpecId(KIBANA_METRICS.metrics.kibana_os_load[0].metric.label)}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('w axis and legend', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} />\\n        <Axis\\n          id={getAxisId('bottom')}\\n          title={'timestamp per 1 minute'}\\n          position={Position.Bottom}\\n          showOverlappingTicks={true}\\n          tickFormat={dateFormatter}\\n        />\\n        <Axis\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <AreaSeries\\n          id={getSpecId(KIBANA_METRICS.metrics.kibana_os_load[0].metric.label)}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('stacked w axis and legend', () => {\\n    const data1 = KIBANA_METRICS.metrics.kibana_os_load[0].data.map(d => {\\n      return [...d, KIBANA_METRICS.metrics.kibana_os_load[0].metric.label];\\n    });\\n    const data2 = KIBANA_METRICS.metrics.kibana_os_load[1].data.map(d => {\\n      return [...d, KIBANA_METRICS.metrics.kibana_os_load[1].metric.label];\\n    });\\n    const data3 = KIBANA_METRICS.metrics.kibana_os_load[2].data.map(d => {\\n      return [...d, KIBANA_METRICS.metrics.kibana_os_load[2].metric.label];\\n    });\\n    const allMetrics = [...data3, ...data2, ...data1];\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} />\\n        <Axis\\n          id={getAxisId('bottom')}\\n          position={Position.Bottom}\\n          title={'timestamp per 1 minute'}\\n          showOverlappingTicks={true}\\n          tickFormat={dateFormatter}\\n        />\\n        <Axis\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n        <AreaSeries\\n          id={getSpecId(KIBANA_METRICS.metrics.kibana_os_load[0].metric.label)}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          stackAccessors={[0]}\\n          splitSeriesAccessors={[2]}\\n          data={allMetrics}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('stacked with separated specs', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} />\\n        <Axis\\n          id={getAxisId('bottom')}\\n          position={Position.Bottom}\\n          title={'timestamp per 1 minute'}\\n          showOverlappingTicks={true}\\n          tickFormat={dateFormatter}\\n        />\\n        <Axis\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n        <AreaSeries\\n          id={getSpecId('1')}\\n          name={KIBANA_METRICS.metrics.kibana_os_load[2].metric.label}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          stackAccessors={[0]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[2].data}\\n        />\\n        <AreaSeries\\n          id={getSpecId('2')}\\n          name={KIBANA_METRICS.metrics.kibana_os_load[1].metric.label}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          stackAccessors={[0]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[1].data}\\n        />\\n        <AreaSeries\\n          id={getSpecId('3')}\\n          name={KIBANA_METRICS.metrics.kibana_os_load[0].metric.label}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          stackAccessors={[0]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('stacked with separated specs - same naming', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} />\\n        <Axis\\n          id={getAxisId('bottom')}\\n          position={Position.Bottom}\\n          title={'timestamp per 1 minute'}\\n          showOverlappingTicks={true}\\n          tickFormat={dateFormatter}\\n        />\\n        <Axis\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n        <AreaSeries\\n          id={getSpecId('1')}\\n          name={'Count'}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          stackAccessors={[0]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[2].data}\\n        />\\n        <AreaSeries\\n          id={getSpecId('2')}\\n          name={'Count'}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          stackAccessors={[0]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[1].data}\\n        />\\n        <AreaSeries\\n          id={getSpecId('3')}\\n          name={'Count'}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          stackAccessors={[0]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('[test] - linear', () => {\\n    const data = [[1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 4], [7, 3], [8, 2], [9, 1]];\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis id={getAxisId('bottom')} title={'index'} position={Position.Bottom} />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n        <AreaSeries\\n          id={getSpecId('areas')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={data}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('[test] - time', () => {\\n    const start = DateTime.fromISO('2019-01-01T00:00:00.000', { zone: 'utc' });\\n    const data = [\\n      [start.toMillis(), 1],\\n      [start.plus({ minute: 1 }).toMillis(), 2],\\n      [start.plus({ minute: 2 }).toMillis(), 3],\\n      [start.plus({ minute: 3 }).toMillis(), 4],\\n      [start.plus({ minute: 4 }).toMillis(), 5],\\n      [start.plus({ minute: 5 }).toMillis(), 4],\\n      [start.plus({ minute: 6 }).toMillis(), 3],\\n      [start.plus({ minute: 7 }).toMillis(), 2],\\n      [start.plus({ minute: 8 }).toMillis(), 1],\\n    ];\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis id={getAxisId('bottom')} title={'index'} position={Position.Bottom} tickFormat={dateFormatter} />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n        <AreaSeries\\n          id={getSpecId('data')}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={data}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('band area chart', () => {\\n    const data = KIBANA_METRICS.metrics.kibana_os_load[0].data.map(d => {\\n      return {\\n        x: d[0],\\n        max: d[1] + 4 + 4 * Math.random(),\\n        min: d[1] - 4 - 4 * Math.random(),\\n      };\\n    });\\n    const lineData = KIBANA_METRICS.metrics.kibana_os_load[0].data.map(d => {\\n      return [d[0], d[1]];\\n    });\\n    const scaleToDataExtent = boolean('scale to extent', true);\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis\\n          id={getAxisId('bottom')}\\n          title={'timestamp per 1 minute'}\\n          position={Position.Bottom}\\n          showOverlappingTicks={true}\\n          tickFormat={dateFormatter}\\n        />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <AreaSeries\\n          id={getSpecId('area')}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={'x'}\\n          yAccessors={['max']}\\n          y0Accessors={['min']}\\n          data={data}\\n          yScaleToDataExtent={scaleToDataExtent}\\n          curve={CurveType.CURVE_MONOTONE_X}\\n        />\\n\\n        <LineSeries\\n          id={getSpecId('average')}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={lineData}\\n          yScaleToDataExtent={scaleToDataExtent}\\n          curve={CurveType.CURVE_MONOTONE_X}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('stacked band area chart', () => {\\n    const data = KIBANA_METRICS.metrics.kibana_os_load[0].data;\\n    const data2 = KIBANA_METRICS.metrics.kibana_os_load[0].data.map(d => {\\n      return [d[0], 20, 10];\\n    });\\n    const scaleToDataExtent = boolean('scale to extent', false);\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis\\n          id={getAxisId('bottom')}\\n          title={'timestamp per 1 minute'}\\n          position={Position.Bottom}\\n          showOverlappingTicks={true}\\n          tickFormat={dateFormatter}\\n        />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <AreaSeries\\n          id={getSpecId('area')}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          y0Accessors={[2]}\\n          data={data}\\n          stackAccessors={[0]}\\n          yScaleToDataExtent={scaleToDataExtent}\\n        />\\n\\n        <AreaSeries\\n          id={getSpecId('fixed band')}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          y0Accessors={[2]}\\n          data={data2}\\n          stackAccessors={[0]}\\n          yScaleToDataExtent={scaleToDataExtent}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('stacked only grouped areas', () => {\\n    const data1 = [[1, 2], [2, 2], [3, 3], [4, 5], [5, 5], [6, 3], [7, 8], [8, 2], [9, 1]];\\n    const data2 = [[1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 4], [7, 3], [8, 2], [9, 4]];\\n    const data3 = [[1, 6], [2, 6], [3, 3], [4, 2], [5, 1], [6, 1], [7, 5], [8, 6], [9, 7]];\\n    return (\\n      <Chart renderer=\\\"canvas\\\" className={'story-chart'}>\\n        <Axis id={getAxisId('bottom')} title={'index'} position={Position.Bottom} />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n        <AreaSeries\\n          id={getSpecId('stacked area 1')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          stackAccessors={[0]}\\n          data={data1}\\n          yScaleToDataExtent={false}\\n        />\\n        <AreaSeries\\n          id={getSpecId('stacked area 2')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          stackAccessors={[0]}\\n          data={data2}\\n          yScaleToDataExtent={false}\\n        />\\n        <AreaSeries\\n          id={getSpecId('non stacked area')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={data3}\\n          yScaleToDataExtent={false}\\n        />\\n      </Chart>\\n    );\\n  });\\n\";\n  export var __ADDS_MAP__ = {\"Area Chart@stacked only grouped areas\":{\"startLoc\":{\"col\":7,\"line\":485},\"endLoc\":{\"col\":3,\"line\":529}},\"Area Chart@stacked band area chart\":{\"startLoc\":{\"col\":7,\"line\":437},\"endLoc\":{\"col\":3,\"line\":484}},\"Area Chart@band area chart\":{\"startLoc\":{\"col\":7,\"line\":384},\"endLoc\":{\"col\":3,\"line\":436}},\"Area Chart@[test] - time\":{\"startLoc\":{\"col\":7,\"line\":351},\"endLoc\":{\"col\":3,\"line\":383}},\"Area Chart@[test] - linear\":{\"startLoc\":{\"col\":7,\"line\":329},\"endLoc\":{\"col\":3,\"line\":350}},\"Area Chart@stacked with separated specs - same naming\":{\"startLoc\":{\"col\":7,\"line\":280},\"endLoc\":{\"col\":3,\"line\":328}},\"Area Chart@stacked with separated specs\":{\"startLoc\":{\"col\":7,\"line\":231},\"endLoc\":{\"col\":3,\"line\":279}},\"Area Chart@stacked w axis and legend\":{\"startLoc\":{\"col\":7,\"line\":192},\"endLoc\":{\"col\":3,\"line\":230}},\"Area Chart@w axis and legend\":{\"startLoc\":{\"col\":7,\"line\":164},\"endLoc\":{\"col\":3,\"line\":191}},\"Area Chart@with 4 axes\":{\"startLoc\":{\"col\":7,\"line\":123},\"endLoc\":{\"col\":3,\"line\":163}},\"Area Chart@with log y axis\":{\"startLoc\":{\"col\":7,\"line\":97},\"endLoc\":{\"col\":3,\"line\":122}},\"Area Chart@with linear x axis\":{\"startLoc\":{\"col\":7,\"line\":70},\"endLoc\":{\"col\":3,\"line\":96}},\"Area Chart@with time x axis\":{\"startLoc\":{\"col\":7,\"line\":42},\"endLoc\":{\"col\":3,\"line\":69}},\"Area Chart@basic\":{\"startLoc\":{\"col\":7,\"line\":22},\"endLoc\":{\"col\":3,\"line\":41}}};\n  \n  import { boolean } from '@storybook/addon-knobs';\nimport { storiesOf } from '@storybook/react';\nimport { DateTime } from 'luxon';\nimport React from 'react';\nimport {\n  AreaSeries,\n  Axis,\n  Chart,\n  CurveType,\n  getAxisId,\n  getSpecId,\n  LineSeries,\n  Position,\n  ScaleType,\n  Settings,\n  timeFormatter,\n} from '../src';\nimport { KIBANA_METRICS } from '../src/lib/series/utils/test_dataset_kibana';\nconst dateFormatter = timeFormatter('HH:mm');\n\nstoriesOf('Area Chart', module).addDecorator(withStorySource(__STORY__, __ADDS_MAP__))\n  .add('basic', () => {\n    const toggleSpec = boolean('toggle area spec', true);\n    const data1 = KIBANA_METRICS.metrics.kibana_os_load[0].data;\n    const data2 = data1.map((datum) => [datum[0], datum[1] - 1]);\n    const data = toggleSpec ? data1 : data2;\n    const specId = toggleSpec ? 'areas1' : 'areas2';\n\n    return (\n      <Chart className={'story-chart'}>\n        <AreaSeries\n          id={getSpecId(specId)}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={data}\n        />\n      </Chart>\n    );\n  })\n  .add('with time x axis', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Axis\n          id={getAxisId('bottom')}\n          title={'timestamp per 1 minute'}\n          position={Position.Bottom}\n          showOverlappingTicks={true}\n          tickFormat={dateFormatter}\n        />\n        <Axis\n          id={getAxisId('left')}\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <AreaSeries\n          id={getSpecId('area')}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\n        />\n      </Chart>\n    );\n  })\n  .add('with linear x axis', () => {\n    const start = KIBANA_METRICS.metrics.kibana_os_load[0].data[0][0];\n    const data = KIBANA_METRICS.metrics.kibana_os_load[0].data.slice(0, 20).map((d) => {\n      return [(d[0] - start) / 30000, d[1]];\n    });\n    return (\n      <Chart className={'story-chart'}>\n        <Axis id={getAxisId('bottom')} title={'index'} position={Position.Bottom} />\n        <Axis\n          id={getAxisId('left')}\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <AreaSeries\n          id={getSpecId('areas')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={data}\n          curve={CurveType.CURVE_MONOTONE_X}\n        />\n      </Chart>\n    );\n  })\n  .add('with log y axis', () => {\n    const data = KIBANA_METRICS.metrics.kibana_os_load[0].data.map((d) => {\n      return d[1] < 7 ? [d[0], null] : [d[0], d[1] - 10];\n    });\n    return (\n      <Chart className={'story-chart'}>\n        <Axis\n          id={getAxisId('bottom')}\n          title={'index'}\n          position={Position.Bottom}\n          tickFormat={dateFormatter}\n        />\n        <Axis\n          id={getAxisId('left')}\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <AreaSeries\n          id={getSpecId('areas')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Log}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={data}\n          curve={CurveType.CURVE_MONOTONE_X}\n        />\n      </Chart>\n    );\n  })\n  .add('with 4 axes', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings debug={false} />\n        <Axis\n          id={getAxisId('bottom')}\n          title={'timestamp per 1 minute'}\n          position={Position.Bottom}\n          showOverlappingTicks={true}\n          tickFormat={dateFormatter}\n        />\n        <Axis\n          id={getAxisId('left')}\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Left}\n          tickFormat={(d) => `${Number(d).toFixed(0)}%`}\n        />\n        <Axis\n          id={getAxisId('top')}\n          position={Position.Top}\n          showOverlappingTicks={true}\n          tickFormat={timeFormatter('HH:mm:ss')}\n        />\n        <Axis\n          id={getAxisId('right')}\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Right}\n          tickFormat={(d) => `${Number(d).toFixed(0)} %`}\n        />\n\n        <AreaSeries\n          id={getSpecId(KIBANA_METRICS.metrics.kibana_os_load[0].metric.label)}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\n        />\n      </Chart>\n    );\n  })\n  .add('w axis and legend', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} />\n        <Axis\n          id={getAxisId('bottom')}\n          title={'timestamp per 1 minute'}\n          position={Position.Bottom}\n          showOverlappingTicks={true}\n          tickFormat={dateFormatter}\n        />\n        <Axis\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <AreaSeries\n          id={getSpecId(KIBANA_METRICS.metrics.kibana_os_load[0].metric.label)}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\n        />\n      </Chart>\n    );\n  })\n  .add('stacked w axis and legend', () => {\n    const data1 = KIBANA_METRICS.metrics.kibana_os_load[0].data.map((d) => {\n      return [...d, KIBANA_METRICS.metrics.kibana_os_load[0].metric.label];\n    });\n    const data2 = KIBANA_METRICS.metrics.kibana_os_load[1].data.map((d) => {\n      return [...d, KIBANA_METRICS.metrics.kibana_os_load[1].metric.label];\n    });\n    const data3 = KIBANA_METRICS.metrics.kibana_os_load[2].data.map((d) => {\n      return [...d, KIBANA_METRICS.metrics.kibana_os_load[2].metric.label];\n    });\n    const allMetrics = [...data3, ...data2, ...data1];\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'timestamp per 1 minute'}\n          showOverlappingTicks={true}\n          tickFormat={dateFormatter}\n        />\n        <Axis\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n        <AreaSeries\n          id={getSpecId(KIBANA_METRICS.metrics.kibana_os_load[0].metric.label)}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          stackAccessors={[0]}\n          splitSeriesAccessors={[2]}\n          data={allMetrics}\n        />\n      </Chart>\n    );\n  })\n  .add('stacked with separated specs', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'timestamp per 1 minute'}\n          showOverlappingTicks={true}\n          tickFormat={dateFormatter}\n        />\n        <Axis\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n        <AreaSeries\n          id={getSpecId('1')}\n          name={KIBANA_METRICS.metrics.kibana_os_load[2].metric.label}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          stackAccessors={[0]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[2].data}\n        />\n        <AreaSeries\n          id={getSpecId('2')}\n          name={KIBANA_METRICS.metrics.kibana_os_load[1].metric.label}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          stackAccessors={[0]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[1].data}\n        />\n        <AreaSeries\n          id={getSpecId('3')}\n          name={KIBANA_METRICS.metrics.kibana_os_load[0].metric.label}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          stackAccessors={[0]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\n        />\n      </Chart>\n    );\n  })\n  .add('stacked with separated specs - same naming', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'timestamp per 1 minute'}\n          showOverlappingTicks={true}\n          tickFormat={dateFormatter}\n        />\n        <Axis\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n        <AreaSeries\n          id={getSpecId('1')}\n          name={'Count'}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          stackAccessors={[0]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[2].data}\n        />\n        <AreaSeries\n          id={getSpecId('2')}\n          name={'Count'}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          stackAccessors={[0]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[1].data}\n        />\n        <AreaSeries\n          id={getSpecId('3')}\n          name={'Count'}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          stackAccessors={[0]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data}\n        />\n      </Chart>\n    );\n  })\n  .add('[test] - linear', () => {\n    const data = [[1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 4], [7, 3], [8, 2], [9, 1]];\n    return (\n      <Chart className={'story-chart'}>\n        <Axis id={getAxisId('bottom')} title={'index'} position={Position.Bottom} />\n        <Axis\n          id={getAxisId('left')}\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n        <AreaSeries\n          id={getSpecId('areas')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={data}\n        />\n      </Chart>\n    );\n  })\n  .add('[test] - time', () => {\n    const start = DateTime.fromISO('2019-01-01T00:00:00.000', { zone: 'utc' });\n    const data = [\n      [start.toMillis(), 1],\n      [start.plus({ minute: 1 }).toMillis(), 2],\n      [start.plus({ minute: 2 }).toMillis(), 3],\n      [start.plus({ minute: 3 }).toMillis(), 4],\n      [start.plus({ minute: 4 }).toMillis(), 5],\n      [start.plus({ minute: 5 }).toMillis(), 4],\n      [start.plus({ minute: 6 }).toMillis(), 3],\n      [start.plus({ minute: 7 }).toMillis(), 2],\n      [start.plus({ minute: 8 }).toMillis(), 1],\n    ];\n    return (\n      <Chart className={'story-chart'}>\n        <Axis\n          id={getAxisId('bottom')}\n          title={'index'}\n          position={Position.Bottom}\n          tickFormat={dateFormatter}\n        />\n        <Axis\n          id={getAxisId('left')}\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n        <AreaSeries\n          id={getSpecId('data')}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={data}\n        />\n      </Chart>\n    );\n  })\n  .add('band area chart', () => {\n    const data = KIBANA_METRICS.metrics.kibana_os_load[0].data.map((d) => {\n      return {\n        x: d[0],\n        max: d[1] + 4 + 4 * Math.random(),\n        min: d[1] - 4 - 4 * Math.random(),\n      };\n    });\n    const lineData = KIBANA_METRICS.metrics.kibana_os_load[0].data.map((d) => {\n      return [d[0], d[1]];\n    });\n    const scaleToDataExtent = boolean('scale to extent', true);\n    return (\n      <Chart className={'story-chart'}>\n        <Axis\n          id={getAxisId('bottom')}\n          title={'timestamp per 1 minute'}\n          position={Position.Bottom}\n          showOverlappingTicks={true}\n          tickFormat={dateFormatter}\n        />\n        <Axis\n          id={getAxisId('left')}\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <AreaSeries\n          id={getSpecId('area')}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={'x'}\n          yAccessors={['max']}\n          y0Accessors={['min']}\n          data={data}\n          yScaleToDataExtent={scaleToDataExtent}\n          curve={CurveType.CURVE_MONOTONE_X}\n        />\n\n        <LineSeries\n          id={getSpecId('average')}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={lineData}\n          yScaleToDataExtent={scaleToDataExtent}\n          curve={CurveType.CURVE_MONOTONE_X}\n        />\n      </Chart>\n    );\n  })\n  .add('stacked band area chart', () => {\n    const data = KIBANA_METRICS.metrics.kibana_os_load[0].data;\n    const data2 = KIBANA_METRICS.metrics.kibana_os_load[0].data.map((d) => {\n      return [d[0], 20, 10];\n    });\n    const scaleToDataExtent = boolean('scale to extent', false);\n    return (\n      <Chart className={'story-chart'}>\n        <Axis\n          id={getAxisId('bottom')}\n          title={'timestamp per 1 minute'}\n          position={Position.Bottom}\n          showOverlappingTicks={true}\n          tickFormat={dateFormatter}\n        />\n        <Axis\n          id={getAxisId('left')}\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <AreaSeries\n          id={getSpecId('area')}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          y0Accessors={[2]}\n          data={data}\n          stackAccessors={[0]}\n          yScaleToDataExtent={scaleToDataExtent}\n        />\n\n        <AreaSeries\n          id={getSpecId('fixed band')}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          y0Accessors={[2]}\n          data={data2}\n          stackAccessors={[0]}\n          yScaleToDataExtent={scaleToDataExtent}\n        />\n      </Chart>\n    );\n  })\n  .add('stacked only grouped areas', () => {\n    const data1 = [[1, 2], [2, 2], [3, 3], [4, 5], [5, 5], [6, 3], [7, 8], [8, 2], [9, 1]];\n    const data2 = [[1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 4], [7, 3], [8, 2], [9, 4]];\n    const data3 = [[1, 6], [2, 6], [3, 3], [4, 2], [5, 1], [6, 1], [7, 5], [8, 6], [9, 7]];\n    return (\n      <Chart renderer=\"canvas\" className={'story-chart'}>\n        <Axis id={getAxisId('bottom')} title={'index'} position={Position.Bottom} />\n        <Axis\n          id={getAxisId('left')}\n          title={KIBANA_METRICS.metrics.kibana_os_load[0].metric.title}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n        <AreaSeries\n          id={getSpecId('stacked area 1')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          stackAccessors={[0]}\n          data={data1}\n          yScaleToDataExtent={false}\n        />\n        <AreaSeries\n          id={getSpecId('stacked area 2')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          stackAccessors={[0]}\n          data={data2}\n          yScaleToDataExtent={false}\n        />\n        <AreaSeries\n          id={getSpecId('non stacked area')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={data3}\n          yScaleToDataExtent={false}\n        />\n      </Chart>\n    );\n  });\n\n  ","\n  export var withStorySource = require('@storybook/addon-storysource').withStorySource;\n  export var __STORY__ = \"import { array, boolean, number } from '@storybook/addon-knobs';\\nimport { storiesOf } from '@storybook/react';\\nimport React from 'react';\\nimport {\\n  AreaSeries,\\n  Axis,\\n  BarSeries,\\n  Chart,\\n  DataGenerator,\\n  getAxisId,\\n  getGroupId,\\n  getSpecId,\\n  LIGHT_THEME,\\n  LineSeries,\\n  mergeWithDefaultTheme,\\n  PartialTheme,\\n  Position,\\n  ScaleType,\\n  Settings,\\n} from '../src/';\\n\\nfunction createThemeAction(title: string, min: number, max: number, value: number) {\\n  return number(\\n    title,\\n    value,\\n    {\\n      range: true,\\n      min,\\n      max,\\n      step: 1,\\n    },\\n    'theme'\\n  );\\n}\\n\\nfunction renderAxisWithOptions(position: Position, seriesGroup: string, show: boolean) {\\n  const axisTitle = `${position} axis (${seriesGroup})`;\\n\\n  const showAxis = boolean(`show ${axisTitle} axis`, show, `${position} axes`);\\n\\n  if (!showAxis) {\\n    return null;\\n  }\\n\\n  const axisProps = {\\n    id: getAxisId(axisTitle),\\n    position,\\n    title: axisTitle,\\n    showOverlappingTicks: true,\\n  };\\n\\n  return <Axis {...axisProps} />;\\n}\\n\\nstoriesOf('Axis', module)\\n  .add('basic', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings debug={boolean('debug', false)} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <AreaSeries\\n          id={getSpecId('lines')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('tick label rotation', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis\\n          id={getAxisId('bottom')}\\n          position={Position.Bottom}\\n          title={'Bottom axis'}\\n          showOverlappingTicks={true}\\n          tickLabelRotation={number('bottom axis tick label rotation', 0, {\\n            range: true,\\n            min: -90,\\n            max: 90,\\n            step: 1,\\n          })}\\n        />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={'Bar axis'}\\n          position={Position.Left}\\n          tickLabelRotation={number('left axis tick label rotation', 0, {\\n            range: true,\\n            min: -90,\\n            max: 90,\\n            step: 1,\\n          })}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n        <Axis\\n          id={getAxisId('top')}\\n          title={'Bar axis'}\\n          position={Position.Top}\\n          tickLabelRotation={number('top axis tick label rotation', 0, {\\n            range: true,\\n            min: -90,\\n            max: 90,\\n            step: 1,\\n          })}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n        <Axis\\n          id={getAxisId('right')}\\n          title={'Bar axis'}\\n          position={Position.Right}\\n          tickLabelRotation={number('right axis tick label rotation', 0, {\\n            range: true,\\n            min: -90,\\n            max: 90,\\n            step: 1,\\n          })}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n        <AreaSeries\\n          id={getSpecId('lines')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n        />\\n        <Settings debug={boolean('debug', false)} />\\n      </Chart>\\n    );\\n  })\\n  .add('4 axes', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis\\n          id={getAxisId('bottom')}\\n          position={Position.Bottom}\\n          title={'bottom'}\\n          showOverlappingTicks={true}\\n          hide={boolean('hide botttom axis', false)}\\n        />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={'left'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n          hide={boolean('hide left axis', false)}\\n        />\\n        <Axis\\n          id={getAxisId('top')}\\n          position={Position.Top}\\n          title={'top'}\\n          showOverlappingTicks={true}\\n          hide={boolean('hide top axis', false)}\\n        />\\n        <Axis\\n          id={getAxisId('right')}\\n          title={'right'}\\n          position={Position.Right}\\n          tickFormat={d => Number(d).toFixed(2)}\\n          hide={boolean('hide right axis', false)}\\n        />\\n\\n        <AreaSeries\\n          id={getSpecId('lines')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('with multi axis', () => {\\n    const theme: PartialTheme = {\\n      chartMargins: {\\n        left: createThemeAction('margin left', 0, 50, 0),\\n        right: createThemeAction('margin right', 0, 50, 0),\\n        top: createThemeAction('margin top', 0, 50, 0),\\n        bottom: createThemeAction('margin bottom', 0, 50, 0),\\n      },\\n      chartPaddings: {\\n        left: createThemeAction('padding left', 0, 50, 0),\\n        right: createThemeAction('padding right', 0, 50, 0),\\n        top: createThemeAction('padding top', 0, 50, 0),\\n        bottom: createThemeAction('padding bottom', 0, 50, 0),\\n      },\\n    };\\n    const customTheme = mergeWithDefaultTheme(theme, LIGHT_THEME);\\n\\n    const seriesGroup1 = 'group1';\\n    const seriesGroup2 = 'group2';\\n    return (\\n      <Chart size={[500, 300]} className={'story-chart'}>\\n        <Settings showLegend={false} theme={customTheme} debug={boolean('debug', true)} />\\n        {renderAxisWithOptions(Position.Top, seriesGroup1, false)}\\n        {renderAxisWithOptions(Position.Top, seriesGroup2, true)}\\n        {renderAxisWithOptions(Position.Left, seriesGroup1, false)}\\n        {renderAxisWithOptions(Position.Left, seriesGroup2, true)}\\n        {renderAxisWithOptions(Position.Bottom, seriesGroup1, false)}\\n        {renderAxisWithOptions(Position.Bottom, seriesGroup2, true)}\\n        {renderAxisWithOptions(Position.Right, seriesGroup1, false)}\\n        {renderAxisWithOptions(Position.Right, seriesGroup2, true)}\\n        <BarSeries\\n          id={getSpecId('barseries1')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 1 }, { x: 1, y: 2 }, { x: 2, y: 3 }, { x: 3, y: 4 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('with multi axis bar/lines', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={false} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={'Bar axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n        <Axis\\n          id={getAxisId('right')}\\n          title={'Line axis'}\\n          groupId={getGroupId('group2')}\\n          position={Position.Right}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n        />\\n        <LineSeries\\n          id={getSpecId('lines')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          groupId={getGroupId('group2')}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          stackAccessors={['x']}\\n          splitSeriesAccessors={['g']}\\n          data={[{ x: 0, y: 3 }, { x: 1, y: 2 }, { x: 2, y: 4 }, { x: 3, y: 10 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('with multi axis different tooltip formats', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={false} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left')}\\n          groupId={getGroupId('group1')}\\n          title={'Line 1'}\\n          position={Position.Left}\\n          tickFormat={d => `${Number(d).toFixed(2)} %`}\\n        />\\n        <Axis\\n          id={getAxisId('right')}\\n          title={'Line 2'}\\n          groupId={getGroupId('group2')}\\n          position={Position.Right}\\n          tickFormat={d => `${Number(d).toFixed(2)}/s`}\\n        />\\n        <LineSeries\\n          id={getSpecId('line1')}\\n          groupId={getGroupId('group1')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          stackAccessors={['x']}\\n          splitSeriesAccessors={['g']}\\n          data={[{ x: 0, y: 5 }, { x: 1, y: 4 }, { x: 2, y: 3 }, { x: 3, y: 2 }]}\\n        />\\n        <LineSeries\\n          id={getSpecId('line2')}\\n          groupId={getGroupId('group2')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          stackAccessors={['x']}\\n          splitSeriesAccessors={['g']}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 3 }, { x: 2, y: 4 }, { x: 3, y: 5 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('w many tick labels', () => {\\n    const dg = new DataGenerator();\\n    const data = dg.generateSimpleSeries(31);\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings debug={true} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <AreaSeries\\n          id={getSpecId('lines')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={data}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('customizing domain limits [mixed linear chart]', () => {\\n    const leftDomain = {\\n      min: number('left min', 0),\\n      max: number('left max', 7),\\n    };\\n\\n    const rightDomain1 = {\\n      min: number('right1 min', 0),\\n      max: number('right1 max', 10),\\n    };\\n\\n    const rightDomain2 = {\\n      min: number('right2 min', 0),\\n      max: number('right2 max', 10),\\n    };\\n\\n    const xDomain = {\\n      min: number('xDomain min', 0),\\n      max: number('xDomain max', 3),\\n    };\\n\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={false} xDomain={xDomain} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={'Bar axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n          domain={leftDomain}\\n          hide={boolean('hide left axis', false)}\\n        />\\n        <Axis\\n          id={getAxisId('right')}\\n          title={'Line axis (Right 1)'}\\n          groupId={getGroupId('group2')}\\n          position={Position.Right}\\n          tickFormat={d => Number(d).toFixed(2)}\\n          domain={rightDomain1}\\n        />\\n        <Axis\\n          id={getAxisId('right2')}\\n          title={'Line axis (Right 2)'}\\n          groupId={getGroupId('group2')}\\n          position={Position.Right}\\n          tickFormat={d => Number(d).toFixed(2)}\\n          domain={rightDomain2}\\n        />\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n        />\\n        <LineSeries\\n          id={getSpecId('lines')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          groupId={getGroupId('group2')}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          stackAccessors={['x']}\\n          splitSeriesAccessors={['g']}\\n          data={[{ x: 0, y: 3 }, { x: 1, y: 2 }, { x: 2, y: 4 }, { x: 3, y: 10 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('customizing domain limits [mixed ordinal & linear x domain]', () => {\\n    const leftDomain = {\\n      min: number('left min', 0),\\n      max: number('left max', 7),\\n    };\\n\\n    const right1Domain = {\\n      min: number('right1 min', 0),\\n      max: number('right1 max', 10),\\n    };\\n\\n    const xDomain = array('xDomain', ['a', 'b', 'c', 'd', 0, 1, 2, 3]);\\n\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={false} xDomain={xDomain} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={'Bar axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n          domain={leftDomain}\\n        />\\n        <Axis\\n          id={getAxisId('right')}\\n          title={'Line axis'}\\n          groupId={getGroupId('group2')}\\n          position={Position.Right}\\n          tickFormat={d => Number(d).toFixed(2)}\\n          domain={right1Domain}\\n        />\\n        <Axis\\n          id={getAxisId('right 2')}\\n          title={'Line axis 2'}\\n          groupId={getGroupId('group2')}\\n          position={Position.Right}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Ordinal}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 'a', y: 2 }, { x: 'b', y: 7 }, { x: 'c', y: 3 }, { x: 'd', y: 6 }]}\\n        />\\n        <LineSeries\\n          id={getSpecId('lines')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          groupId={getGroupId('group2')}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          stackAccessors={['x']}\\n          splitSeriesAccessors={['g']}\\n          data={[{ x: 0, y: 3 }, { x: 1, y: 2 }, { x: 2, y: 4 }, { x: 3, y: 10 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('customizing domain limits [only one bound defined]', () => {\\n    const leftDomain = {\\n      min: number('left min', 0),\\n    };\\n\\n    const xDomain = {\\n      max: number('xDomain max', 3),\\n    };\\n\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={false} xDomain={xDomain} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left')}\\n          title={'Bar axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n          domain={leftDomain}\\n        />\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n        />\\n      </Chart>\\n    );\\n  });\\n\";\n  export var __ADDS_MAP__ = {\"Axis@customizing domain limits [only one bound defined]\":{\"startLoc\":{\"col\":7,\"line\":460},\"endLoc\":{\"col\":3,\"line\":490}},\"Axis@customizing domain limits [mixed ordinal & linear x domain]\":{\"startLoc\":{\"col\":7,\"line\":399},\"endLoc\":{\"col\":3,\"line\":459}},\"Axis@customizing domain limits [mixed linear chart]\":{\"startLoc\":{\"col\":7,\"line\":328},\"endLoc\":{\"col\":3,\"line\":398}},\"Axis@w many tick labels\":{\"startLoc\":{\"col\":7,\"line\":310},\"endLoc\":{\"col\":3,\"line\":327}},\"Axis@with multi axis different tooltip formats\":{\"startLoc\":{\"col\":7,\"line\":266},\"endLoc\":{\"col\":3,\"line\":309}},\"Axis@with multi axis bar/lines\":{\"startLoc\":{\"col\":7,\"line\":226},\"endLoc\":{\"col\":3,\"line\":265}},\"Axis@with multi axis\":{\"startLoc\":{\"col\":7,\"line\":185},\"endLoc\":{\"col\":3,\"line\":225}},\"Axis@4 axes\":{\"startLoc\":{\"col\":7,\"line\":142},\"endLoc\":{\"col\":3,\"line\":184}},\"Axis@tick label rotation\":{\"startLoc\":{\"col\":7,\"line\":79},\"endLoc\":{\"col\":3,\"line\":141}},\"Axis@basic\":{\"startLoc\":{\"col\":7,\"line\":56},\"endLoc\":{\"col\":3,\"line\":78}}};\n  \n  import { array, boolean, number } from '@storybook/addon-knobs';\nimport { storiesOf } from '@storybook/react';\nimport React from 'react';\nimport {\n  AreaSeries,\n  Axis,\n  BarSeries,\n  Chart,\n  DataGenerator,\n  getAxisId,\n  getGroupId,\n  getSpecId,\n  LIGHT_THEME,\n  LineSeries,\n  mergeWithDefaultTheme,\n  PartialTheme,\n  Position,\n  ScaleType,\n  Settings,\n} from '../src/';\n\nfunction createThemeAction(title: string, min: number, max: number, value: number) {\n  return number(\n    title,\n    value,\n    {\n      range: true,\n      min,\n      max,\n      step: 1,\n    },\n    'theme',\n  );\n}\n\nfunction renderAxisWithOptions(position: Position, seriesGroup: string, show: boolean) {\n  const axisTitle = `${position} axis (${seriesGroup})`;\n\n  const showAxis = boolean(`show ${axisTitle} axis`, show, `${position} axes`);\n\n  if (!showAxis) {\n    return null;\n  }\n\n  const axisProps = {\n    id: getAxisId(axisTitle),\n    position,\n    title: axisTitle,\n    showOverlappingTicks: true,\n  };\n\n  return <Axis {...axisProps} />;\n}\n\nstoriesOf('Axis', module).addDecorator(withStorySource(__STORY__, __ADDS_MAP__))\n  .add('basic', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings debug={boolean('debug', false)} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <AreaSeries\n          id={getSpecId('lines')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('tick label rotation', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n          tickLabelRotation={number('bottom axis tick label rotation', 0, {\n            range: true,\n            min: -90,\n            max: 90,\n            step: 1,\n          })}\n        />\n        <Axis\n          id={getAxisId('left')}\n          title={'Bar axis'}\n          position={Position.Left}\n          tickLabelRotation={number('left axis tick label rotation', 0, {\n            range: true,\n            min: -90,\n            max: 90,\n            step: 1,\n          })}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n        <Axis\n          id={getAxisId('top')}\n          title={'Bar axis'}\n          position={Position.Top}\n          tickLabelRotation={number('top axis tick label rotation', 0, {\n            range: true,\n            min: -90,\n            max: 90,\n            step: 1,\n          })}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n        <Axis\n          id={getAxisId('right')}\n          title={'Bar axis'}\n          position={Position.Right}\n          tickLabelRotation={number('right axis tick label rotation', 0, {\n            range: true,\n            min: -90,\n            max: 90,\n            step: 1,\n          })}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n        <AreaSeries\n          id={getSpecId('lines')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n        />\n        <Settings debug={boolean('debug', false)} />\n      </Chart>\n    );\n  })\n  .add('4 axes', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'bottom'}\n          showOverlappingTicks={true}\n          hide={boolean('hide botttom axis', false)}\n        />\n        <Axis\n          id={getAxisId('left')}\n          title={'left'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n          hide={boolean('hide left axis', false)}\n        />\n        <Axis\n          id={getAxisId('top')}\n          position={Position.Top}\n          title={'top'}\n          showOverlappingTicks={true}\n          hide={boolean('hide top axis', false)}\n        />\n        <Axis\n          id={getAxisId('right')}\n          title={'right'}\n          position={Position.Right}\n          tickFormat={(d) => Number(d).toFixed(2)}\n          hide={boolean('hide right axis', false)}\n        />\n\n        <AreaSeries\n          id={getSpecId('lines')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('with multi axis', () => {\n    const theme: PartialTheme = {\n      chartMargins: {\n        left: createThemeAction('margin left', 0, 50, 0),\n        right: createThemeAction('margin right', 0, 50, 0),\n        top: createThemeAction('margin top', 0, 50, 0),\n        bottom: createThemeAction('margin bottom', 0, 50, 0),\n      },\n      chartPaddings: {\n        left: createThemeAction('padding left', 0, 50, 0),\n        right: createThemeAction('padding right', 0, 50, 0),\n        top: createThemeAction('padding top', 0, 50, 0),\n        bottom: createThemeAction('padding bottom', 0, 50, 0),\n      },\n    };\n    const customTheme = mergeWithDefaultTheme(theme, LIGHT_THEME);\n\n    const seriesGroup1 = 'group1';\n    const seriesGroup2 = 'group2';\n    return (\n      <Chart size={[500, 300]} className={'story-chart'}>\n        <Settings showLegend={false} theme={customTheme} debug={boolean('debug', true)} />\n        {renderAxisWithOptions(Position.Top, seriesGroup1, false)}\n        {renderAxisWithOptions(Position.Top, seriesGroup2, true)}\n        {renderAxisWithOptions(Position.Left, seriesGroup1, false)}\n        {renderAxisWithOptions(Position.Left, seriesGroup2, true)}\n        {renderAxisWithOptions(Position.Bottom, seriesGroup1, false)}\n        {renderAxisWithOptions(Position.Bottom, seriesGroup2, true)}\n        {renderAxisWithOptions(Position.Right, seriesGroup1, false)}\n        {renderAxisWithOptions(Position.Right, seriesGroup2, true)}\n        <BarSeries\n          id={getSpecId('barseries1')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 1 }, { x: 1, y: 2 }, { x: 2, y: 3 }, { x: 3, y: 4 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('with multi axis bar/lines', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={false} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left')}\n          title={'Bar axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n        <Axis\n          id={getAxisId('right')}\n          title={'Line axis'}\n          groupId={getGroupId('group2')}\n          position={Position.Right}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n        />\n        <LineSeries\n          id={getSpecId('lines')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          groupId={getGroupId('group2')}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          stackAccessors={['x']}\n          splitSeriesAccessors={['g']}\n          data={[{ x: 0, y: 3 }, { x: 1, y: 2 }, { x: 2, y: 4 }, { x: 3, y: 10 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('with multi axis different tooltip formats', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={false} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left')}\n          groupId={getGroupId('group1')}\n          title={'Line 1'}\n          position={Position.Left}\n          tickFormat={(d) => `${Number(d).toFixed(2)} %`}\n        />\n        <Axis\n          id={getAxisId('right')}\n          title={'Line 2'}\n          groupId={getGroupId('group2')}\n          position={Position.Right}\n          tickFormat={(d) => `${Number(d).toFixed(2)}/s`}\n        />\n        <LineSeries\n          id={getSpecId('line1')}\n          groupId={getGroupId('group1')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          stackAccessors={['x']}\n          splitSeriesAccessors={['g']}\n          data={[{ x: 0, y: 5 }, { x: 1, y: 4 }, { x: 2, y: 3 }, { x: 3, y: 2 }]}\n        />\n        <LineSeries\n          id={getSpecId('line2')}\n          groupId={getGroupId('group2')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          stackAccessors={['x']}\n          splitSeriesAccessors={['g']}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 3 }, { x: 2, y: 4 }, { x: 3, y: 5 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('w many tick labels', () => {\n    const dg = new DataGenerator();\n    const data = dg.generateSimpleSeries(31);\n    return (\n      <Chart className={'story-chart'}>\n        <Settings debug={true} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <AreaSeries\n          id={getSpecId('lines')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={data}\n        />\n      </Chart>\n    );\n  })\n  .add('customizing domain limits [mixed linear chart]', () => {\n    const leftDomain = {\n      min: number('left min', 0),\n      max: number('left max', 7),\n    };\n\n    const rightDomain1 = {\n      min: number('right1 min', 0),\n      max: number('right1 max', 10),\n    };\n\n    const rightDomain2 = {\n      min: number('right2 min', 0),\n      max: number('right2 max', 10),\n    };\n\n    const xDomain = {\n      min: number('xDomain min', 0),\n      max: number('xDomain max', 3),\n    };\n\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={false} xDomain={xDomain} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left')}\n          title={'Bar axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n          domain={leftDomain}\n          hide={boolean('hide left axis', false)}\n        />\n        <Axis\n          id={getAxisId('right')}\n          title={'Line axis (Right 1)'}\n          groupId={getGroupId('group2')}\n          position={Position.Right}\n          tickFormat={(d) => Number(d).toFixed(2)}\n          domain={rightDomain1}\n        />\n        <Axis\n          id={getAxisId('right2')}\n          title={'Line axis (Right 2)'}\n          groupId={getGroupId('group2')}\n          position={Position.Right}\n          tickFormat={(d) => Number(d).toFixed(2)}\n          domain={rightDomain2}\n        />\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n        />\n        <LineSeries\n          id={getSpecId('lines')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          groupId={getGroupId('group2')}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          stackAccessors={['x']}\n          splitSeriesAccessors={['g']}\n          data={[{ x: 0, y: 3 }, { x: 1, y: 2 }, { x: 2, y: 4 }, { x: 3, y: 10 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('customizing domain limits [mixed ordinal & linear x domain]', () => {\n    const leftDomain = {\n      min: number('left min', 0),\n      max: number('left max', 7),\n    };\n\n    const right1Domain = {\n      min: number('right1 min', 0),\n      max: number('right1 max', 10),\n    };\n\n    const xDomain = array('xDomain', ['a', 'b', 'c', 'd', 0, 1, 2, 3]);\n\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={false} xDomain={xDomain} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left')}\n          title={'Bar axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n          domain={leftDomain}\n        />\n        <Axis\n          id={getAxisId('right')}\n          title={'Line axis'}\n          groupId={getGroupId('group2')}\n          position={Position.Right}\n          tickFormat={(d) => Number(d).toFixed(2)}\n          domain={right1Domain}\n        />\n        <Axis\n          id={getAxisId('right 2')}\n          title={'Line axis 2'}\n          groupId={getGroupId('group2')}\n          position={Position.Right}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Ordinal}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 'a', y: 2 }, { x: 'b', y: 7 }, { x: 'c', y: 3 }, { x: 'd', y: 6 }]}\n        />\n        <LineSeries\n          id={getSpecId('lines')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          groupId={getGroupId('group2')}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          stackAccessors={['x']}\n          splitSeriesAccessors={['g']}\n          data={[{ x: 0, y: 3 }, { x: 1, y: 2 }, { x: 2, y: 4 }, { x: 3, y: 10 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('customizing domain limits [only one bound defined]', () => {\n    const leftDomain = {\n      min: number('left min', 0),\n    };\n\n    const xDomain = {\n      max: number('xDomain max', 3),\n    };\n\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={false} xDomain={xDomain} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left')}\n          title={'Bar axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n          domain={leftDomain}\n        />\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n        />\n      </Chart>\n    );\n  });\n\n  ","\n  export var withStorySource = require('@storybook/addon-storysource').withStorySource;\n  export var __STORY__ = \"import { storiesOf } from '@storybook/react';\\nimport { DateTime } from 'luxon';\\nimport React from 'react';\\nimport {\\n  AreaSeries,\\n  Axis,\\n  BarSeries,\\n  Chart,\\n  CurveType,\\n  getAxisId,\\n  getSpecId,\\n  LineSeries,\\n  Position,\\n  ScaleType,\\n  Settings,\\n} from '../src/';\\nimport { timeFormatter } from '../src/utils/data/formatters';\\n\\nstoriesOf('Mixed Charts', module)\\n  .add('bar and lines', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n        />\\n        <LineSeries\\n          id={getSpecId('line')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 3 }, { x: 1, y: 2 }, { x: 2, y: 4 }, { x: 3, y: 10 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('lines and areas', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <AreaSeries\\n          id={getSpecId('areas')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 2.5 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n        />\\n        <LineSeries\\n          id={getSpecId('lines')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          stackAccessors={['x']}\\n          data={[{ x: 0, y: 2.8 }, { x: 1, y: 2 }, { x: 2, y: 4 }, { x: 3, y: 10 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('areas and bars', () => {\\n    return (\\n      <Chart renderer=\\\"canvas\\\" className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n        <Axis id={getAxisId('top')} position={Position.Top} title={'Top axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('right')}\\n          title={'Right axis'}\\n          position={Position.Right}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          splitSeriesAccessors={['g']}\\n          stackAccessors={['x']}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n          yScaleToDataExtent={false}\\n        />\\n        <AreaSeries\\n          id={getSpecId('areas')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          curve={CurveType.CURVE_MONOTONE_X}\\n          data={[{ x: 0, y: 2.5 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n          yScaleToDataExtent={false}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('[test] - bar/lines linear', () => {\\n    const data1 = [[1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 4], [7, 3], [8, 2], [9, 1]];\\n    const data2 = [[1, 5], [2, 4], [3, 3], [4, 2], [5, 1], [6, 2], [7, 3], [8, 4], [9, 5]];\\n\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('data1')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={data1}\\n        />\\n        <LineSeries\\n          id={getSpecId('data2')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={data2}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('[test] - bar/lines time', () => {\\n    const start = DateTime.fromISO('2019-01-01T00:00:00.000', { zone: 'utc' });\\n    const data1 = [\\n      [start.toMillis(), 1, 4],\\n      [start.plus({ minute: 1 }).toMillis(), 2, 5],\\n      [start.plus({ minute: 2 }).toMillis(), 3, 6],\\n      [start.plus({ minute: 3 }).toMillis(), 4, 7],\\n      [start.plus({ minute: 4 }).toMillis(), 5, 8],\\n      [start.plus({ minute: 5 }).toMillis(), 4, 7],\\n      [start.plus({ minute: 6 }).toMillis(), 3, 6],\\n      [start.plus({ minute: 7 }).toMillis(), 2, 5],\\n      [start.plus({ minute: 8 }).toMillis(), 1, 4],\\n    ];\\n    const data2 = [\\n      [start.toMillis(), 1, 4],\\n      [start.plus({ minute: 1 }).toMillis(), 2, 5],\\n      [start.plus({ minute: 2 }).toMillis(), 3, 6],\\n      [start.plus({ minute: 3 }).toMillis(), 4, 7],\\n      [start.plus({ minute: 4 }).toMillis(), 5, 8],\\n      [start.plus({ minute: 5 }).toMillis(), 4, 7],\\n      [start.plus({ minute: 6 }).toMillis(), 3, 6],\\n      [start.plus({ minute: 7 }).toMillis(), 2, 5],\\n      [start.plus({ minute: 8 }).toMillis(), 1, 4],\\n    ];\\n    const dateFormatter = timeFormatter('HH:mm:ss');\\n\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} />\\n        <Axis\\n          id={getAxisId('bottom')}\\n          position={Position.Bottom}\\n          title={'Bottom axis'}\\n          showOverlappingTicks={true}\\n          tickFormat={dateFormatter}\\n        />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('data1')}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={data1}\\n        />\\n        <LineSeries\\n          id={getSpecId('data2')}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[2]}\\n          data={data2}\\n        />\\n      </Chart>\\n    );\\n  });\\n\";\n  export var __ADDS_MAP__ = {\"Mixed Charts@[test] - bar/lines time\":{\"startLoc\":{\"col\":7,\"line\":159},\"endLoc\":{\"col\":3,\"line\":220}},\"Mixed Charts@[test] - bar/lines linear\":{\"startLoc\":{\"col\":7,\"line\":125},\"endLoc\":{\"col\":3,\"line\":158}},\"Mixed Charts@areas and bars\":{\"startLoc\":{\"col\":7,\"line\":83},\"endLoc\":{\"col\":3,\"line\":124}},\"Mixed Charts@lines and areas\":{\"startLoc\":{\"col\":7,\"line\":51},\"endLoc\":{\"col\":3,\"line\":82}},\"Mixed Charts@bar and lines\":{\"startLoc\":{\"col\":7,\"line\":20},\"endLoc\":{\"col\":3,\"line\":50}}};\n  \n  import { storiesOf } from '@storybook/react';\nimport { DateTime } from 'luxon';\nimport React from 'react';\nimport {\n  AreaSeries,\n  Axis,\n  BarSeries,\n  Chart,\n  CurveType,\n  getAxisId,\n  getSpecId,\n  LineSeries,\n  Position,\n  ScaleType,\n  Settings,\n} from '../src/';\nimport { timeFormatter } from '../src/utils/data/formatters';\n\nstoriesOf('Mixed Charts', module).addDecorator(withStorySource(__STORY__, __ADDS_MAP__))\n  .add('bar and lines', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} />\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n        />\n        <LineSeries\n          id={getSpecId('line')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 3 }, { x: 1, y: 2 }, { x: 2, y: 4 }, { x: 3, y: 10 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('lines and areas', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <AreaSeries\n          id={getSpecId('areas')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 2.5 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n        />\n        <LineSeries\n          id={getSpecId('lines')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          stackAccessors={['x']}\n          data={[{ x: 0, y: 2.8 }, { x: 1, y: 2 }, { x: 2, y: 4 }, { x: 3, y: 10 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('areas and bars', () => {\n    return (\n      <Chart renderer=\"canvas\" className={'story-chart'}>\n        <Settings\n          showLegend={true}\n          legendPosition={Position.Right}\n        />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n        <Axis\n          id={getAxisId('top')}\n          position={Position.Top}\n          title={'Top axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('right')}\n          title={'Right axis'}\n          position={Position.Right}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          splitSeriesAccessors={['g']}\n          stackAccessors={['x']}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n          yScaleToDataExtent={false}\n        />\n        <AreaSeries\n          id={getSpecId('areas')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          curve={CurveType.CURVE_MONOTONE_X}\n          data={[{ x: 0, y: 2.5 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n          yScaleToDataExtent={false}\n        />\n      </Chart>\n    );\n  })\n  .add('[test] - bar/lines linear', () => {\n    const data1 = [[1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 4], [7, 3], [8, 2], [9, 1]];\n    const data2 = [[1, 5], [2, 4], [3, 3], [4, 2], [5, 1], [6, 2], [7, 3], [8, 4], [9, 5]];\n\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('data1')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={data1}\n        />\n        <LineSeries\n          id={getSpecId('data2')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={data2}\n        />\n      </Chart>\n    );\n  })\n  .add('[test] - bar/lines time', () => {\n    const start = DateTime.fromISO('2019-01-01T00:00:00.000', { zone: 'utc' });\n    const data1 = [\n      [start.toMillis(), 1, 4],\n      [start.plus({ minute: 1 }).toMillis(), 2, 5],\n      [start.plus({ minute: 2 }).toMillis(), 3, 6],\n      [start.plus({ minute: 3 }).toMillis(), 4, 7],\n      [start.plus({ minute: 4 }).toMillis(), 5, 8],\n      [start.plus({ minute: 5 }).toMillis(), 4, 7],\n      [start.plus({ minute: 6 }).toMillis(), 3, 6],\n      [start.plus({ minute: 7 }).toMillis(), 2, 5],\n      [start.plus({ minute: 8 }).toMillis(), 1, 4],\n    ];\n    const data2 = [\n      [start.toMillis(), 1, 4],\n      [start.plus({ minute: 1 }).toMillis(), 2, 5],\n      [start.plus({ minute: 2 }).toMillis(), 3, 6],\n      [start.plus({ minute: 3 }).toMillis(), 4, 7],\n      [start.plus({ minute: 4 }).toMillis(), 5, 8],\n      [start.plus({ minute: 5 }).toMillis(), 4, 7],\n      [start.plus({ minute: 6 }).toMillis(), 3, 6],\n      [start.plus({ minute: 7 }).toMillis(), 2, 5],\n      [start.plus({ minute: 8 }).toMillis(), 1, 4],\n    ];\n    const dateFormatter = timeFormatter('HH:mm:ss');\n\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n          tickFormat={dateFormatter}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('data1')}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={data1}\n        />\n        <LineSeries\n          id={getSpecId('data2')}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[2]}\n          data={data2}\n        />\n      </Chart>\n    );\n  });\n\n  ","\n  export var withStorySource = require('@storybook/addon-storysource').withStorySource;\n  export var __STORY__ = \"import { array, boolean, select } from '@storybook/addon-knobs';\\nimport { storiesOf } from '@storybook/react';\\nimport React from 'react';\\nimport {\\n  AreaSeries,\\n  Axis,\\n  BarSeries,\\n  Chart,\\n  CurveType,\\n  getAxisId,\\n  getSpecId,\\n  LineSeries,\\n  Position,\\n  ScaleType,\\n  Settings,\\n} from '../src/';\\nimport * as TestDatasets from '../src/lib/series/utils/test_dataset';\\nimport { TSVB_DATASET } from '../src/lib/series/utils/test_dataset_tsvb';\\n\\nstoriesOf('Legend', module)\\n  .add('right', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y1', 'y2']}\\n          splitSeriesAccessors={['g1', 'g2']}\\n          data={TestDatasets.BARCHART_2Y2G}\\n          hideInLegend={false}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('bottom', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Bottom} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y1', 'y2']}\\n          splitSeriesAccessors={['g1', 'g2']}\\n          data={TestDatasets.BARCHART_2Y2G}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('left', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Left} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y1', 'y2']}\\n          splitSeriesAccessors={['g1', 'g2']}\\n          data={TestDatasets.BARCHART_2Y2G}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('top', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Top} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y1', 'y2']}\\n          splitSeriesAccessors={['g1', 'g2']}\\n          data={TestDatasets.BARCHART_2Y2G}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('changing specs', () => {\\n    const splitSeries = boolean('split series', true) ? ['g1', 'g2'] : undefined;\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Top} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y1', 'y2']}\\n          splitSeriesAccessors={splitSeries}\\n          data={TestDatasets.BARCHART_2Y2G}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('hide legend items by series', () => {\\n    const hideBarSeriesInLegend = boolean('hide bar series in legend', false);\\n    const hideLineSeriesInLegend = boolean('hide line series in legend', false);\\n\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n          hideInLegend={hideBarSeriesInLegend}\\n        />\\n        <LineSeries\\n          id={getSpecId('lines')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          stackAccessors={['x']}\\n          splitSeriesAccessors={['g']}\\n          data={[{ x: 0, y: 3 }, { x: 1, y: 2 }, { x: 2, y: 4 }, { x: 3, y: 10 }]}\\n          hideInLegend={hideLineSeriesInLegend}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('display values in legend elements', () => {\\n    const showLegendDisplayValue = boolean('show display value in legend', true);\\n    const legendPosition = select(\\n      'legendPosition',\\n      {\\n        right: Position.Right,\\n        bottom: Position.Bottom,\\n        left: Position.Left,\\n        top: Position.Top,\\n      },\\n      Position.Right\\n    );\\n\\n    const tsvbSeries = TSVB_DATASET.series;\\n\\n    const namesArray = array('series names (in sort order)', ['jpg', 'php', 'png', 'css', 'gif']);\\n\\n    const seriesComponents = tsvbSeries.map((series: any) => {\\n      const nameIndex = namesArray.findIndex((name: string) => name === series.label);\\n      const sortIndex = nameIndex > -1 ? nameIndex : undefined;\\n\\n      return (\\n        <AreaSeries\\n          key={`${series.id}-${series.label}`}\\n          id={getSpecId(`${series.id}-${series.label}`)}\\n          name={series.label}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={series.data}\\n          curve={series.lines.steps ? CurveType.CURVE_STEP : CurveType.LINEAR}\\n          sortIndex={sortIndex}\\n        />\\n      );\\n    });\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={legendPosition} showLegendDisplayValue={showLegendDisplayValue} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n        {seriesComponents}\\n      </Chart>\\n    );\\n  });\\n\";\n  export var __ADDS_MAP__ = {\"Legend@display values in legend elements\":{\"startLoc\":{\"col\":7,\"line\":181},\"endLoc\":{\"col\":3,\"line\":230}},\"Legend@hide legend items by series\":{\"startLoc\":{\"col\":7,\"line\":143},\"endLoc\":{\"col\":3,\"line\":180}},\"Legend@changing specs\":{\"startLoc\":{\"col\":7,\"line\":118},\"endLoc\":{\"col\":3,\"line\":142}},\"Legend@top\":{\"startLoc\":{\"col\":7,\"line\":94},\"endLoc\":{\"col\":3,\"line\":117}},\"Legend@left\":{\"startLoc\":{\"col\":7,\"line\":70},\"endLoc\":{\"col\":3,\"line\":93}},\"Legend@bottom\":{\"startLoc\":{\"col\":7,\"line\":46},\"endLoc\":{\"col\":3,\"line\":69}},\"Legend@right\":{\"startLoc\":{\"col\":7,\"line\":21},\"endLoc\":{\"col\":3,\"line\":45}}};\n  \n  import { array, boolean, select } from '@storybook/addon-knobs';\nimport { storiesOf } from '@storybook/react';\nimport React from 'react';\nimport {\n  AreaSeries,\n  Axis,\n  BarSeries,\n  Chart,\n  CurveType,\n  getAxisId,\n  getSpecId,\n  LineSeries,\n  Position,\n  ScaleType,\n  Settings,\n} from '../src/';\nimport * as TestDatasets from '../src/lib/series/utils/test_dataset';\nimport { TSVB_DATASET } from '../src/lib/series/utils/test_dataset_tsvb';\n\nstoriesOf('Legend', module).addDecorator(withStorySource(__STORY__, __ADDS_MAP__))\n  .add('right', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y1', 'y2']}\n          splitSeriesAccessors={['g1', 'g2']}\n          data={TestDatasets.BARCHART_2Y2G}\n          hideInLegend={false}\n        />\n      </Chart>\n    );\n  })\n  .add('bottom', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Bottom} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y1', 'y2']}\n          splitSeriesAccessors={['g1', 'g2']}\n          data={TestDatasets.BARCHART_2Y2G}\n        />\n      </Chart>\n    );\n  })\n  .add('left', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Left} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y1', 'y2']}\n          splitSeriesAccessors={['g1', 'g2']}\n          data={TestDatasets.BARCHART_2Y2G}\n        />\n      </Chart>\n    );\n  })\n  .add('top', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Top} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y1', 'y2']}\n          splitSeriesAccessors={['g1', 'g2']}\n          data={TestDatasets.BARCHART_2Y2G}\n        />\n      </Chart>\n    );\n  })\n  .add('changing specs', () => {\n    const splitSeries = boolean('split series', true) ? ['g1', 'g2'] : undefined;\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Top} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y1', 'y2']}\n          splitSeriesAccessors={splitSeries}\n          data={TestDatasets.BARCHART_2Y2G}\n        />\n      </Chart>\n    );\n  })\n  .add('hide legend items by series', () => {\n    const hideBarSeriesInLegend = boolean('hide bar series in legend', false);\n    const hideLineSeriesInLegend = boolean('hide line series in legend', false);\n\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n          hideInLegend={hideBarSeriesInLegend}\n        />\n        <LineSeries\n          id={getSpecId('lines')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          stackAccessors={['x']}\n          splitSeriesAccessors={['g']}\n          data={[{ x: 0, y: 3 }, { x: 1, y: 2 }, { x: 2, y: 4 }, { x: 3, y: 10 }]}\n          hideInLegend={hideLineSeriesInLegend}\n        />\n      </Chart>\n    );\n  })\n  .add('display values in legend elements', () => {\n    const showLegendDisplayValue = boolean('show display value in legend', true);\n    const legendPosition = select(\n      'legendPosition',\n      {\n        right: Position.Right,\n        bottom: Position.Bottom,\n        left: Position.Left,\n        top: Position.Top,\n      },\n      Position.Right,\n    );\n\n    const tsvbSeries = TSVB_DATASET.series;\n\n    const namesArray = array('series names (in sort order)', ['jpg', 'php', 'png', 'css', 'gif']);\n\n    const seriesComponents = tsvbSeries.map((series: any) => {\n      const nameIndex = namesArray.findIndex((name: string) => name === series.label);\n      const sortIndex = nameIndex > -1 ? nameIndex : undefined;\n\n      return (\n        <AreaSeries\n          key={`${series.id}-${series.label}`}\n          id={getSpecId(`${series.id}-${series.label}`)}\n          name={series.label}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={series.data}\n          curve={series.lines.steps ? CurveType.CURVE_STEP : CurveType.LINEAR}\n          sortIndex={sortIndex}\n        />\n      );\n    });\n    return (\n      <Chart className={'story-chart'}>\n        <Settings\n          showLegend={true}\n          legendPosition={legendPosition}\n          showLegendDisplayValue={showLegendDisplayValue}\n        />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n        {seriesComponents}\n      </Chart>\n    );\n  });\n\n  ","\n  export var withStorySource = require('@storybook/addon-storysource').withStorySource;\n  export var __STORY__ = \"import { action } from '@storybook/addon-actions';\\nimport { storiesOf } from '@storybook/react';\\nimport React from 'react';\\nimport {\\n  AreaSeries,\\n  Axis,\\n  BarSeries,\\n  Chart,\\n  CurveType,\\n  DARK_THEME,\\n  getAxisId,\\n  getSpecId,\\n  LIGHT_THEME,\\n  LineSeries,\\n  niceTimeFormatByDay,\\n  niceTimeFormatter,\\n  Position,\\n  Rotation,\\n  ScaleType,\\n  Settings,\\n  timeFormatter,\\n  TooltipType,\\n} from '../src/';\\n\\nimport { array, boolean, number, select } from '@storybook/addon-knobs';\\nimport { DateTime } from 'luxon';\\nimport { switchTheme } from '../.storybook/theme_service';\\nimport { BARCHART_2Y2G } from '../src/lib/series/utils/test_dataset';\\nimport { KIBANA_METRICS } from '../src/lib/series/utils/test_dataset_kibana';\\n\\nconst onElementListeners = {\\n  onElementClick: action('onElementClick'),\\n  onElementOver: action('onElementOver'),\\n  onElementOut: action('onElementOut'),\\n};\\n\\nconst onLegendItemListeners = {\\n  onLegendItemOver: action('onLegendItemOver'),\\n  onLegendItemOut: action('onLegendItemOut'),\\n  onLegendItemClick: action('onLegendItemClick'),\\n  onLegendItemPlusClick: action('onLegendItemPlusClick'),\\n  onLegendItemMinusClick: action('onLegendItemMinusClick'),\\n};\\n\\nstoriesOf('Interactions', module)\\n  .add('bar clicks and hovers', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} {...onElementListeners} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('area point clicks and hovers', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} {...onElementListeners} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <AreaSeries\\n          id={getSpecId('area')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('line point clicks and hovers', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} {...onElementListeners} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <LineSeries\\n          id={getSpecId('line')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('line area bar point clicks and hovers', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} {...onElementListeners} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          splitSeriesAccessors={['g']}\\n          data={[{ x: 0, y: 2.3 }, { x: 1, y: 2 }, { x: 2, y: 4 }, { x: 3, y: 8 }]}\\n        />\\n        <LineSeries\\n          id={getSpecId('line')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n        />\\n        <AreaSeries\\n          id={getSpecId('area')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 2.3 }, { x: 1, y: 7.3 }, { x: 2, y: 6 }, { x: 3, y: 2 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('click/hovers on legend items [bar chart]', () => {\\n    const notSpecChange = 'not spec change';\\n    const specChange = 'spec change';\\n\\n    const xDomain = {\\n      min: number('xDomain min', 0, {}, notSpecChange),\\n      max: number('xDomain max', 6, {}, notSpecChange),\\n    };\\n\\n    const yDomain = {\\n      min: number('yDomain min', 0, {}, notSpecChange),\\n      max: number('yDomain max', 10, {}, notSpecChange),\\n    };\\n\\n    const yScaleTypeOptions: { [key: string]: ScaleType.Linear | ScaleType.Log } = {\\n      linear: ScaleType.Linear,\\n      log: ScaleType.Log,\\n    };\\n    const yScaleType = select('yScaleType', yScaleTypeOptions, ScaleType.Linear, specChange);\\n\\n    const xAccessorOptions = { x: 'x', y1: 'y1', y2: 'y2' };\\n    const xAccessor = select('xAccessor', xAccessorOptions, 'x', notSpecChange);\\n\\n    const yScaleToDataExtent = boolean('yScaleDataToExtent', false, specChange);\\n\\n    const splitSeriesAccessors = array('split series accessors', ['g1', 'g2'], ',', specChange);\\n\\n    const hasY2 = boolean('has y2 yAccessor', true, specChange);\\n    const yAccessors = hasY2 ? ['y1', 'y2'] : ['y1'];\\n\\n    const additionalG1Value = { x: 4, g1: '$$$$$$$$', g2: 'indirect-cdn', y1: 7, y2: 3 };\\n    const hasAdditionalG1Value = boolean('has additional g1 value', false, specChange);\\n\\n    const seriesData = BARCHART_2Y2G;\\n\\n    const data = hasAdditionalG1Value ? [...seriesData, additionalG1Value] : seriesData;\\n\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} {...onLegendItemListeners} xDomain={xDomain} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n          domain={yDomain}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={yScaleType}\\n          xAccessor={xAccessor}\\n          yAccessors={yAccessors}\\n          splitSeriesAccessors={splitSeriesAccessors}\\n          data={data}\\n          yScaleToDataExtent={yScaleToDataExtent}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('click/hovers on legend items [area chart]', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <AreaSeries\\n          id={getSpecId('lines')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          stackAccessors={['x']}\\n          splitSeriesAccessors={['g']}\\n          data={[\\n            { x: 0, y: 2, g: 'a' },\\n            { x: 1, y: 7, g: 'a' },\\n            { x: 2, y: 3, g: 'a' },\\n            { x: 3, y: 6, g: 'a' },\\n            { x: 0, y: 4, g: 'b' },\\n            { x: 1, y: 5, g: 'b' },\\n            { x: 2, y: 8, g: 'b' },\\n            { x: 3, y: 2, g: 'b' },\\n          ]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('click/hovers on legend items [line chart]', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <LineSeries\\n          id={getSpecId('lines1')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          curve={CurveType.CURVE_MONOTONE_X}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n        />\\n        <LineSeries\\n          id={getSpecId('lines2')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          curve={CurveType.CURVE_BASIS}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n        />\\n        <LineSeries\\n          id={getSpecId('lines3')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          curve={CurveType.CURVE_CARDINAL}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n        />\\n        <LineSeries\\n          id={getSpecId('lines4')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          curve={CurveType.CURVE_CATMULL_ROM}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n        />\\n        <LineSeries\\n          id={getSpecId('lines5')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          curve={CurveType.CURVE_NATURAL}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n        />\\n        <LineSeries\\n          id={getSpecId('lines6')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          curve={CurveType.LINEAR}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('click/hovers on legend items [mixed chart]', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n        />\\n        <LineSeries\\n          id={getSpecId('lines')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          stackAccessors={['x']}\\n          splitSeriesAccessors={['g']}\\n          data={[{ x: 0, y: 3 }, { x: 1, y: 2 }, { x: 2, y: 4 }, { x: 3, y: 10 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('brush selection tool on linear', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings onBrushEnd={action('onBrushEnd')} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'bottom'} showOverlappingTicks={true} />\\n        <Axis id={getAxisId('left')} title={'left'} position={Position.Left} tickFormat={d => Number(d).toFixed(2)} />\\n        <Axis id={getAxisId('top')} position={Position.Top} title={'top'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('right')}\\n          title={'right'}\\n          position={Position.Right}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <AreaSeries\\n          id={getSpecId('lines')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('brush selection tool on bar chart linear', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings onBrushEnd={action('onBrushEnd')} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'bottom'} showOverlappingTicks={true} />\\n        <Axis id={getAxisId('left')} title={'left'} position={Position.Left} tickFormat={d => Number(d).toFixed(2)} />\\n        <Axis id={getAxisId('top')} position={Position.Top} title={'top'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('right')}\\n          title={'right'}\\n          position={Position.Right}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('lines')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 1, y: 2 }, { x: 2, y: 7 }, { x: 3, y: 3 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('brush selection tool on time charts', () => {\\n    const now = DateTime.fromISO('2019-01-11T00:00:00.000Z').toMillis();\\n    const oneDay = 1000 * 60 * 60 * 24;\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings debug={boolean('debug', false)} onBrushEnd={action('onBrushEnd')} />\\n        <Axis\\n          id={getAxisId('bottom')}\\n          position={Position.Bottom}\\n          title={'bottom'}\\n          showOverlappingTicks={true}\\n          tickFormat={niceTimeFormatter([now, now + oneDay * 5])}\\n        />\\n        <Axis id={getAxisId('left')} title={'left'} position={Position.Left} tickFormat={d => Number(d).toFixed(2)} />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[\\n            { x: now, y: 2 },\\n            { x: now + oneDay, y: 7 },\\n            { x: now + oneDay * 2, y: 3 },\\n            { x: now + oneDay * 5, y: 6 },\\n          ]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('brush disabled on ordinal x axis', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings onBrushEnd={action('onBrushEnd')} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'bottom'} showOverlappingTicks={true} />\\n        <Axis id={getAxisId('left')} title={'left'} position={Position.Left} />\\n        <LineSeries\\n          id={getSpecId('lines')}\\n          xScaleType={ScaleType.Ordinal}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 'a', y: 2 }, { x: 'b', y: 7 }, { x: 'c', y: 3 }, { x: 'd', y: 6 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('crosshair with time axis', () => {\\n    const hideBars = boolean('hideBars', false);\\n    const formatter = timeFormatter(niceTimeFormatByDay(1));\\n    const darkmode = boolean('darkmode', false);\\n    const className = darkmode ? 'story-chart-dark' : 'story-chart';\\n    const defaultTheme = darkmode ? DARK_THEME : LIGHT_THEME;\\n    switchTheme(darkmode ? 'dark' : 'light');\\n    const chartRotation = select<Rotation>('rotation', { '90': 90, '0': 0, '-90': -90, '180': 180 }, 0);\\n    const numberFormatter = (d: any) => Number(d).toFixed(2);\\n\\n    return (\\n      <Chart className={className}>\\n        <Settings\\n          debug={boolean('debug', false)}\\n          tooltipType={select(\\n            'tooltipType',\\n            {\\n              cross: TooltipType.Crosshairs,\\n              vertical: TooltipType.VerticalCursor,\\n              follow: TooltipType.Follow,\\n              none: TooltipType.None,\\n            },\\n            TooltipType.Crosshairs\\n          )}\\n          theme={defaultTheme}\\n          tooltipSnap={boolean('tooltip snap to grid', true)}\\n          rotation={chartRotation}\\n        />\\n        <Axis\\n          id={getAxisId('bottom')}\\n          position={Position.Bottom}\\n          title={'Bottom axis'}\\n          tickFormat={[0, 180].includes(chartRotation) ? formatter : numberFormatter}\\n        />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={[0, 180].includes(chartRotation) ? numberFormatter : formatter}\\n        />\\n        {!hideBars && (\\n          <BarSeries\\n            id={getSpecId('data 1')}\\n            xScaleType={ScaleType.Time}\\n            yScaleType={ScaleType.Linear}\\n            xAccessor={0}\\n            yAccessors={[1]}\\n            stackAccessors={[0]}\\n            data={KIBANA_METRICS.metrics.kibana_os_load[0].data.slice(0, 20)}\\n          />\\n        )}\\n        {!hideBars && (\\n          <BarSeries\\n            id={getSpecId('data 2')}\\n            xScaleType={ScaleType.Time}\\n            yScaleType={ScaleType.Linear}\\n            xAccessor={0}\\n            yAccessors={[1]}\\n            stackAccessors={[0]}\\n            data={KIBANA_METRICS.metrics.kibana_os_load[1].data.slice(0, 20)}\\n          />\\n        )}\\n        <LineSeries\\n          id={getSpecId('data 3')}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[2].data.slice(0, 20)}\\n          yScaleToDataExtent={hideBars}\\n        />\\n      </Chart>\\n    );\\n  });\\n\";\n  export var __ADDS_MAP__ = {\"Interactions@crosshair with time axis\":{\"startLoc\":{\"col\":7,\"line\":451},\"endLoc\":{\"col\":3,\"line\":524}},\"Interactions@brush disabled on ordinal x axis\":{\"startLoc\":{\"col\":7,\"line\":434},\"endLoc\":{\"col\":3,\"line\":450}},\"Interactions@brush selection tool on time charts\":{\"startLoc\":{\"col\":7,\"line\":403},\"endLoc\":{\"col\":3,\"line\":433}},\"Interactions@brush selection tool on bar chart linear\":{\"startLoc\":{\"col\":7,\"line\":378},\"endLoc\":{\"col\":3,\"line\":402}},\"Interactions@brush selection tool on linear\":{\"startLoc\":{\"col\":7,\"line\":353},\"endLoc\":{\"col\":3,\"line\":377}},\"Interactions@click/hovers on legend items [mixed chart]\":{\"startLoc\":{\"col\":7,\"line\":320},\"endLoc\":{\"col\":3,\"line\":352}},\"Interactions@click/hovers on legend items [line chart]\":{\"startLoc\":{\"col\":7,\"line\":251},\"endLoc\":{\"col\":3,\"line\":319}},\"Interactions@click/hovers on legend items [area chart]\":{\"startLoc\":{\"col\":7,\"line\":217},\"endLoc\":{\"col\":3,\"line\":250}},\"Interactions@click/hovers on legend items [bar chart]\":{\"startLoc\":{\"col\":7,\"line\":155},\"endLoc\":{\"col\":3,\"line\":216}},\"Interactions@line area bar point clicks and hovers\":{\"startLoc\":{\"col\":7,\"line\":115},\"endLoc\":{\"col\":3,\"line\":154}},\"Interactions@line point clicks and hovers\":{\"startLoc\":{\"col\":7,\"line\":92},\"endLoc\":{\"col\":3,\"line\":114}},\"Interactions@area point clicks and hovers\":{\"startLoc\":{\"col\":7,\"line\":69},\"endLoc\":{\"col\":3,\"line\":91}},\"Interactions@bar clicks and hovers\":{\"startLoc\":{\"col\":7,\"line\":46},\"endLoc\":{\"col\":3,\"line\":68}}};\n  \n  import { action } from '@storybook/addon-actions';\nimport { storiesOf } from '@storybook/react';\nimport React from 'react';\nimport {\n  AreaSeries,\n  Axis,\n  BarSeries,\n  Chart,\n  CurveType,\n  DARK_THEME,\n  getAxisId,\n  getSpecId,\n  LIGHT_THEME,\n  LineSeries,\n  niceTimeFormatByDay,\n  niceTimeFormatter,\n  Position,\n  Rotation,\n  ScaleType,\n  Settings,\n  timeFormatter,\n  TooltipType,\n} from '../src/';\n\nimport { array, boolean, number, select } from '@storybook/addon-knobs';\nimport { DateTime } from 'luxon';\nimport { switchTheme } from '../.storybook/theme_service';\nimport { BARCHART_2Y2G } from '../src/lib/series/utils/test_dataset';\nimport { KIBANA_METRICS } from '../src/lib/series/utils/test_dataset_kibana';\n\nconst onElementListeners = {\n  onElementClick: action('onElementClick'),\n  onElementOver: action('onElementOver'),\n  onElementOut: action('onElementOut'),\n};\n\nconst onLegendItemListeners = {\n  onLegendItemOver: action('onLegendItemOver'),\n  onLegendItemOut: action('onLegendItemOut'),\n  onLegendItemClick: action('onLegendItemClick'),\n  onLegendItemPlusClick: action('onLegendItemPlusClick'),\n  onLegendItemMinusClick: action('onLegendItemMinusClick'),\n};\n\nstoriesOf('Interactions', module).addDecorator(withStorySource(__STORY__, __ADDS_MAP__))\n  .add('bar clicks and hovers', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} {...onElementListeners} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('area point clicks and hovers', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} {...onElementListeners} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <AreaSeries\n          id={getSpecId('area')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('line point clicks and hovers', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} {...onElementListeners} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <LineSeries\n          id={getSpecId('line')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('line area bar point clicks and hovers', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} {...onElementListeners} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          splitSeriesAccessors={['g']}\n          data={[{ x: 0, y: 2.3 }, { x: 1, y: 2 }, { x: 2, y: 4 }, { x: 3, y: 8 }]}\n        />\n        <LineSeries\n          id={getSpecId('line')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n        />\n        <AreaSeries\n          id={getSpecId('area')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 2.3 }, { x: 1, y: 7.3 }, { x: 2, y: 6 }, { x: 3, y: 2 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('click/hovers on legend items [bar chart]', () => {\n    const notSpecChange = 'not spec change';\n    const specChange = 'spec change';\n\n    const xDomain = {\n      min: number('xDomain min', 0, {}, notSpecChange),\n      max: number('xDomain max', 6, {}, notSpecChange),\n    };\n\n    const yDomain = {\n      min: number('yDomain min', 0, {}, notSpecChange),\n      max: number('yDomain max', 10, {}, notSpecChange),\n    };\n\n    const yScaleTypeOptions: { [key: string]: ScaleType.Linear | ScaleType.Log } = {\n      linear: ScaleType.Linear,\n      log: ScaleType.Log,\n    };\n    const yScaleType = select('yScaleType', yScaleTypeOptions, ScaleType.Linear, specChange);\n\n    const xAccessorOptions = { x: 'x', y1: 'y1', y2: 'y2' };\n    const xAccessor = select('xAccessor', xAccessorOptions, 'x', notSpecChange);\n\n    const yScaleToDataExtent = boolean('yScaleDataToExtent', false, specChange);\n\n    const splitSeriesAccessors = array('split series accessors', ['g1', 'g2'], ',', specChange);\n\n    const hasY2 = boolean('has y2 yAccessor', true, specChange);\n    const yAccessors = hasY2 ? ['y1', 'y2'] : ['y1'];\n\n    const additionalG1Value = { x: 4, g1: '$$$$$$$$', g2: 'indirect-cdn', y1: 7, y2: 3 };\n    const hasAdditionalG1Value = boolean('has additional g1 value', false, specChange);\n\n    const seriesData = BARCHART_2Y2G;\n\n    const data = hasAdditionalG1Value ? [...seriesData, additionalG1Value] : seriesData;\n\n    return (\n      <Chart className={'story-chart'}>\n        <Settings\n          showLegend={true}\n          legendPosition={Position.Right}\n          {...onLegendItemListeners}\n          xDomain={xDomain}\n        />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n          domain={yDomain}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={yScaleType}\n          xAccessor={xAccessor}\n          yAccessors={yAccessors}\n          splitSeriesAccessors={splitSeriesAccessors}\n          data={data}\n          yScaleToDataExtent={yScaleToDataExtent}\n        />\n      </Chart>\n    );\n  })\n  .add('click/hovers on legend items [area chart]', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <AreaSeries\n          id={getSpecId('lines')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          stackAccessors={['x']}\n          splitSeriesAccessors={['g']}\n          data={[\n            { x: 0, y: 2, g: 'a' },\n            { x: 1, y: 7, g: 'a' },\n            { x: 2, y: 3, g: 'a' },\n            { x: 3, y: 6, g: 'a' },\n            { x: 0, y: 4, g: 'b' },\n            { x: 1, y: 5, g: 'b' },\n            { x: 2, y: 8, g: 'b' },\n            { x: 3, y: 2, g: 'b' },\n          ]}\n        />\n      </Chart>\n    );\n  })\n  .add('click/hovers on legend items [line chart]', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <LineSeries\n          id={getSpecId('lines1')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          curve={CurveType.CURVE_MONOTONE_X}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n        />\n        <LineSeries\n          id={getSpecId('lines2')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          curve={CurveType.CURVE_BASIS}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n        />\n        <LineSeries\n          id={getSpecId('lines3')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          curve={CurveType.CURVE_CARDINAL}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n        />\n        <LineSeries\n          id={getSpecId('lines4')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          curve={CurveType.CURVE_CATMULL_ROM}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n        />\n        <LineSeries\n          id={getSpecId('lines5')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          curve={CurveType.CURVE_NATURAL}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n        />\n        <LineSeries\n          id={getSpecId('lines6')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          curve={CurveType.LINEAR}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('click/hovers on legend items [mixed chart]', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n        />\n        <LineSeries\n          id={getSpecId('lines')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          stackAccessors={['x']}\n          splitSeriesAccessors={['g']}\n          data={[{ x: 0, y: 3 }, { x: 1, y: 2 }, { x: 2, y: 4 }, { x: 3, y: 10 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('brush selection tool on linear', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings onBrushEnd={action('onBrushEnd')} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'bottom'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left')}\n          title={'left'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n        <Axis\n          id={getAxisId('top')}\n          position={Position.Top}\n          title={'top'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('right')}\n          title={'right'}\n          position={Position.Right}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <AreaSeries\n          id={getSpecId('lines')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('brush selection tool on bar chart linear', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings onBrushEnd={action('onBrushEnd')} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'bottom'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left')}\n          title={'left'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n        <Axis\n          id={getAxisId('top')}\n          position={Position.Top}\n          title={'top'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('right')}\n          title={'right'}\n          position={Position.Right}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('lines')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 1, y: 2 }, { x: 2, y: 7 }, { x: 3, y: 3 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('brush selection tool on time charts', () => {\n    const now = DateTime.fromISO('2019-01-11T00:00:00.000Z').toMillis();\n    const oneDay = 1000 * 60 * 60 * 24;\n    return (\n      <Chart className={'story-chart'}>\n        <Settings debug={boolean('debug', false)} onBrushEnd={action('onBrushEnd')} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'bottom'}\n          showOverlappingTicks={true}\n          tickFormat={niceTimeFormatter([now, now + oneDay * 5])}\n        />\n        <Axis\n          id={getAxisId('left')}\n          title={'left'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[\n            { x: now, y: 2 },\n            { x: now + oneDay, y: 7 },\n            { x: now + oneDay * 2, y: 3 },\n            { x: now + oneDay * 5, y: 6 },\n          ]}\n        />\n      </Chart>\n    );\n  })\n  .add('brush disabled on ordinal x axis', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings onBrushEnd={action('onBrushEnd')} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'bottom'}\n          showOverlappingTicks={true}\n        />\n        <Axis id={getAxisId('left')} title={'left'} position={Position.Left} />\n        <LineSeries\n          id={getSpecId('lines')}\n          xScaleType={ScaleType.Ordinal}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 'a', y: 2 }, { x: 'b', y: 7 }, { x: 'c', y: 3 }, { x: 'd', y: 6 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('crosshair with time axis', () => {\n    const hideBars = boolean('hideBars', false);\n    const formatter = timeFormatter(niceTimeFormatByDay(1));\n    const darkmode = boolean('darkmode', false);\n    const className = darkmode ? 'story-chart-dark' : 'story-chart';\n    const defaultTheme = darkmode ? DARK_THEME : LIGHT_THEME;\n    switchTheme(darkmode ? 'dark' : 'light');\n    const chartRotation = select<Rotation>(\n      'rotation',\n      { '90': 90, '0': 0, '-90': -90, '180': 180 },\n      0,\n    );\n    const numberFormatter = (d: any) => Number(d).toFixed(2);\n\n    return (\n      <Chart className={className}>\n        <Settings\n          debug={boolean('debug', false)}\n          tooltipType={select(\n            'tooltipType',\n            {\n              cross: TooltipType.Crosshairs,\n              vertical: TooltipType.VerticalCursor,\n              follow: TooltipType.Follow,\n              none: TooltipType.None,\n            },\n            TooltipType.Crosshairs,\n          )}\n          theme={defaultTheme}\n          tooltipSnap={boolean('tooltip snap to grid', true)}\n          rotation={chartRotation}\n        />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          tickFormat={[0, 180].includes(chartRotation) ? formatter : numberFormatter}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={[0, 180].includes(chartRotation) ? numberFormatter : formatter}\n        />\n        {!hideBars && (\n          <BarSeries\n            id={getSpecId('data 1')}\n            xScaleType={ScaleType.Time}\n            yScaleType={ScaleType.Linear}\n            xAccessor={0}\n            yAccessors={[1]}\n            stackAccessors={[0]}\n            data={KIBANA_METRICS.metrics.kibana_os_load[0].data.slice(0, 20)}\n          />\n        )}\n        {!hideBars && (\n          <BarSeries\n            id={getSpecId('data 2')}\n            xScaleType={ScaleType.Time}\n            yScaleType={ScaleType.Linear}\n            xAccessor={0}\n            yAccessors={[1]}\n            stackAccessors={[0]}\n            data={KIBANA_METRICS.metrics.kibana_os_load[1].data.slice(0, 20)}\n          />\n        )}\n        <LineSeries\n          id={getSpecId('data 3')}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[2].data.slice(0, 20)}\n          yScaleToDataExtent={hideBars}\n        />\n      </Chart>\n    );\n  });\n\n  ","export const KIBANA_METRICS = {\n  metrics: {\n    kibana_os_load: [\n      {\n        bucket_size: '30 seconds',\n        timeRange: { min: 1551438000000, max: 1551441600000 },\n        metric: {\n          app: 'kibana',\n          field: 'kibana_stats.os.load.1m',\n          metricAgg: 'max',\n          label: '1m',\n          title: 'System Load',\n          description: 'Load average over the last minute.',\n          units: '',\n          format: '0,0.[00]',\n          hasCalculation: false,\n          isDerivative: false,\n        },\n        data: [\n          [1551438000000, 8.3203125],\n          [1551438030000, 7.9140625],\n          [1551438060000, 7.8671875],\n          [1551438090000, 7.125],\n          [1551438120000, 8.765625],\n          [1551438150000, 11.546875],\n          [1551438180000, 12.984375],\n          [1551438210000, 13.546875],\n          [1551438240000, 13.390625],\n          [1551438270000, 11.5625],\n          [1551438300000, 11.5859375],\n          [1551438330000, 10.0546875],\n          [1551438360000, 9.921875],\n          [1551438390000, 9.4921875],\n          [1551438420000, 9.78125],\n          [1551438450000, 10.046875],\n          [1551438480000, 14.0546875],\n          [1551438510000, 10.640625],\n          [1551438540000, 8.2421875],\n          [1551438570000, 8.5],\n          [1551438600000, 7.2578125],\n          [1551438630000, 8.515625],\n          [1551438660000, 10.796875],\n          [1551438690000, 11.125],\n          [1551438720000, 21.40625],\n          [1551438750000, 17.921875],\n          [1551438780000, 26.640625],\n          [1551438810000, 31.390625],\n          [1551438840000, 23.953125],\n          [1551438870000, 16],\n          [1551438900000, 11.9765625],\n          [1551438930000, 9.1640625],\n          [1551438960000, 7.98046875],\n          [1551438990000, 7.1640625],\n          [1551439020000, 7.39453125],\n          [1551439050000, 5.68359375],\n          [1551439080000, 4.95703125],\n          [1551439110000, 4.26171875],\n          [1551439140000, 11.1171875],\n          [1551439170000, 10.8515625],\n          [1551439200000, 12.6171875],\n          [1551439230000, 11.1171875],\n          [1551439260000, 11.6640625],\n          [1551439290000, 11.109375],\n          [1551439320000, 10.6015625],\n          [1551439350000, 11.21875],\n          [1551439380000, 13.53125],\n          [1551439410000, 15.4609375],\n          [1551439440000, 15.1796875],\n          [1551439470000, 11.984375],\n          [1551439500000, 24.8125],\n          [1551439530000, 21.46875],\n          [1551439560000, 14.484375],\n          [1551439590000, 9.9609375],\n          [1551439620000, 10.8515625],\n          [1551439650000, 12.1171875],\n          [1551439680000, 19.375],\n          [1551439710000, 20.609375],\n          [1551439740000, 16.484375],\n          [1551439770000, 15.515625],\n          [1551439800000, 14.9140625],\n          [1551439830000, 10.8828125],\n          [1551439860000, 9.7578125],\n          [1551439890000, 8.625],\n          [1551439920000, 9.21875],\n          [1551439950000, 8.5390625],\n          [1551439980000, 8.40625],\n          [1551440010000, 6.671875],\n          [1551440040000, 7.24609375],\n          [1551440070000, 7.1015625],\n          [1551440100000, 7.09375],\n          [1551440130000, 10.8125],\n          [1551440160000, 10.90625],\n          [1551440190000, 12.453125],\n          [1551440220000, 11.8984375],\n          [1551440250000, 10.875],\n          [1551440280000, 12.4140625],\n          [1551440310000, 12.78125],\n          [1551440340000, 34.28125],\n          [1551440370000, 29.84375],\n          [1551440400000, 22.40625],\n          [1551440430000, 16.046875],\n          [1551440460000, 12.6328125],\n          [1551440490000, 8.8125],\n          [1551440520000, 6.93359375],\n          [1551440550000, 6.12890625],\n          [1551440580000, 5.69921875],\n          [1551440610000, 5.48828125],\n          [1551440640000, 12.0234375],\n          [1551440670000, 14.484375],\n          [1551440700000, 12.890625],\n          [1551440730000, 11.578125],\n          [1551440760000, 10.7578125],\n          [1551440790000, 9.921875],\n          [1551440820000, 10.5078125],\n          [1551440850000, 11.375],\n          [1551440880000, 15.890625],\n          [1551440910000, 14.1953125],\n          [1551440940000, 11.625],\n          [1551440970000, 11.734375],\n          [1551441000000, 10.1640625],\n          [1551441030000, 9.296875],\n          [1551441060000, 7.5546875],\n          [1551441090000, 7.17578125],\n          [1551441120000, 5.8671875],\n          [1551441150000, 6.828125],\n          [1551441180000, 10.578125],\n          [1551441210000, 16.140625],\n          [1551441240000, 15.640625],\n          [1551441270000, 13.1484375],\n          [1551441300000, 11.9140625],\n          [1551441330000, 10.0625],\n          [1551441360000, 7.66015625],\n          [1551441390000, 9.0078125],\n          [1551441420000, 8.78125],\n          [1551441450000, 8.0390625],\n          [1551441480000, 25.515625],\n          [1551441510000, 18.640625],\n          [1551441540000, 13.1953125],\n          [1551441570000, 10.1953125],\n        ],\n      },\n      {\n        bucket_size: '30 seconds',\n        timeRange: { min: 1551438000000, max: 1551441600000 },\n        metric: {\n          app: 'kibana',\n          field: 'kibana_stats.os.load.5m',\n          metricAgg: 'max',\n          label: '5m',\n          title: 'System Load',\n          description: 'Load average over the last 5 minutes.',\n          units: '',\n          format: '0,0.[00]',\n          hasCalculation: false,\n          isDerivative: false,\n        },\n        data: [\n          [1551438000000, 9.984375],\n          [1551438030000, 9.71875],\n          [1551438060000, 9.28125],\n          [1551438090000, 9.078125],\n          [1551438120000, 8.9921875],\n          [1551438150000, 9.640625],\n          [1551438180000, 10.171875],\n          [1551438210000, 10.421875],\n          [1551438240000, 10.625],\n          [1551438270000, 10.390625],\n          [1551438300000, 10.4296875],\n          [1551438330000, 10.1328125],\n          [1551438360000, 9.984375],\n          [1551438390000, 9.8203125],\n          [1551438420000, 9.8125],\n          [1551438450000, 9.78125],\n          [1551438480000, 10.625],\n          [1551438510000, 10.09375],\n          [1551438540000, 9.5546875],\n          [1551438570000, 9.390625],\n          [1551438600000, 9.015625],\n          [1551438630000, 8.8828125],\n          [1551438660000, 9.359375],\n          [1551438690000, 9.53125],\n          [1551438720000, 11.9453125],\n          [1551438750000, 11.828125],\n          [1551438780000, 14.4609375],\n          [1551438810000, 16.421875],\n          [1551438840000, 15.6875],\n          [1551438870000, 14.5625],\n          [1551438900000, 13.75],\n          [1551438930000, 12.8359375],\n          [1551438960000, 12.2109375],\n          [1551438990000, 11.6328125],\n          [1551439020000, 11.015625],\n          [1551439050000, 10.3828125],\n          [1551439080000, 9.7421875],\n          [1551439110000, 9.046875],\n          [1551439140000, 9.921875],\n          [1551439170000, 9.890625],\n          [1551439200000, 10.34375],\n          [1551439230000, 10.140625],\n          [1551439260000, 10.3515625],\n          [1551439290000, 10.28125],\n          [1551439320000, 10.203125],\n          [1551439350000, 10.296875],\n          [1551439380000, 10.875],\n          [1551439410000, 11.4765625],\n          [1551439440000, 11.484375],\n          [1551439470000, 11.046875],\n          [1551439500000, 13.53125],\n          [1551439530000, 13.1875],\n          [1551439560000, 12.3046875],\n          [1551439590000, 11.3984375],\n          [1551439620000, 11.1328125],\n          [1551439650000, 11.390625],\n          [1551439680000, 13.3046875],\n          [1551439710000, 13.71875],\n          [1551439740000, 13.3671875],\n          [1551439770000, 13.4296875],\n          [1551439800000, 13.3359375],\n          [1551439830000, 12.4765625],\n          [1551439860000, 12.09375],\n          [1551439890000, 11.4765625],\n          [1551439920000, 11.328125],\n          [1551439950000, 10.8984375],\n          [1551439980000, 10.7109375],\n          [1551440010000, 10.0546875],\n          [1551440040000, 9.6328125],\n          [1551440070000, 9.34375],\n          [1551440100000, 9.1953125],\n          [1551440130000, 9.6328125],\n          [1551440160000, 9.7109375],\n          [1551440190000, 10.1171875],\n          [1551440220000, 10.171875],\n          [1551440250000, 10.0546875],\n          [1551440280000, 10.4140625],\n          [1551440310000, 10.5234375],\n          [1551440340000, 15.140625],\n          [1551440370000, 14.90625],\n          [1551440400000, 14.4921875],\n          [1551440430000, 13.65625],\n          [1551440460000, 13.0390625],\n          [1551440490000, 12.09375],\n          [1551440520000, 11.3125],\n          [1551440550000, 10.7265625],\n          [1551440580000, 10.1640625],\n          [1551440610000, 9.4453125],\n          [1551440640000, 10.546875],\n          [1551440670000, 11.1328125],\n          [1551440700000, 10.96875],\n          [1551440730000, 10.875],\n          [1551440760000, 10.7109375],\n          [1551440790000, 10.453125],\n          [1551440820000, 10.546875],\n          [1551440850000, 10.671875],\n          [1551440880000, 11.78125],\n          [1551440910000, 11.5703125],\n          [1551440940000, 11.1640625],\n          [1551440970000, 11.1875],\n          [1551441000000, 10.8671875],\n          [1551441030000, 10.5390625],\n          [1551441060000, 10.03125],\n          [1551441090000, 9.6640625],\n          [1551441120000, 9.0859375],\n          [1551441150000, 8.90625],\n          [1551441180000, 9.453125],\n          [1551441210000, 10.7109375],\n          [1551441240000, 10.734375],\n          [1551441270000, 10.6484375],\n          [1551441300000, 10.5234375],\n          [1551441330000, 10.1796875],\n          [1551441360000, 9.546875],\n          [1551441390000, 9.5390625],\n          [1551441420000, 9.3984375],\n          [1551441450000, 9.21875],\n          [1551441480000, 12.671875],\n          [1551441510000, 12.0859375],\n          [1551441540000, 11.375],\n          [1551441570000, 10.84375],\n        ],\n      },\n      {\n        bucket_size: '30 seconds',\n        timeRange: { min: 1551438000000, max: 1551441600000 },\n        metric: {\n          app: 'kibana',\n          field: 'kibana_stats.os.load.15m',\n          metricAgg: 'max',\n          label: '15m',\n          title: 'System Load',\n          description: 'Load average over the last 15 minutes.',\n          units: '',\n          format: '0,0.[00]',\n          hasCalculation: false,\n          isDerivative: false,\n        },\n        data: [\n          [1551438000000, 10.3359375],\n          [1551438030000, 10.234375],\n          [1551438060000, 10.046875],\n          [1551438090000, 9.9765625],\n          [1551438120000, 9.8828125],\n          [1551438150000, 10.078125],\n          [1551438180000, 10.234375],\n          [1551438210000, 10.3125],\n          [1551438240000, 10.3828125],\n          [1551438270000, 10.3046875],\n          [1551438300000, 10.3203125],\n          [1551438330000, 10.21875],\n          [1551438360000, 10.15625],\n          [1551438390000, 10.09375],\n          [1551438420000, 10.0859375],\n          [1551438450000, 10.0546875],\n          [1551438480000, 10.328125],\n          [1551438510000, 10.15625],\n          [1551438540000, 9.9765625],\n          [1551438570000, 9.8984375],\n          [1551438600000, 9.7578125],\n          [1551438630000, 9.65625],\n          [1551438660000, 9.796875],\n          [1551438690000, 9.84375],\n          [1551438720000, 10.640625],\n          [1551438750000, 10.6328125],\n          [1551438780000, 11.578125],\n          [1551438810000, 12.265625],\n          [1551438840000, 12.109375],\n          [1551438870000, 11.84375],\n          [1551438900000, 11.6640625],\n          [1551438930000, 11.421875],\n          [1551438960000, 11.2578125],\n          [1551438990000, 11.1015625],\n          [1551439020000, 10.90625],\n          [1551439050000, 10.703125],\n          [1551439080000, 10.4765625],\n          [1551439110000, 10.21875],\n          [1551439140000, 10.4375],\n          [1551439170000, 10.421875],\n          [1551439200000, 10.5390625],\n          [1551439230000, 10.4609375],\n          [1551439260000, 10.5234375],\n          [1551439290000, 10.5],\n          [1551439320000, 10.4609375],\n          [1551439350000, 10.4765625],\n          [1551439380000, 10.65625],\n          [1551439410000, 10.859375],\n          [1551439440000, 10.8671875],\n          [1551439470000, 10.734375],\n          [1551439500000, 11.5390625],\n          [1551439530000, 11.4453125],\n          [1551439560000, 11.203125],\n          [1551439590000, 10.9375],\n          [1551439620000, 10.859375],\n          [1551439650000, 10.9453125],\n          [1551439680000, 11.609375],\n          [1551439710000, 11.7578125],\n          [1551439740000, 11.703125],\n          [1551439770000, 11.8046875],\n          [1551439800000, 11.78125],\n          [1551439830000, 11.546875],\n          [1551439860000, 11.453125],\n          [1551439890000, 11.265625],\n          [1551439920000, 11.21875],\n          [1551439950000, 11.078125],\n          [1551439980000, 11.0078125],\n          [1551440010000, 10.78125],\n          [1551440040000, 10.6171875],\n          [1551440070000, 10.4921875],\n          [1551440100000, 10.3984375],\n          [1551440130000, 10.4765625],\n          [1551440160000, 10.4765625],\n          [1551440190000, 10.5859375],\n          [1551440220000, 10.5859375],\n          [1551440250000, 10.5390625],\n          [1551440280000, 10.625],\n          [1551440310000, 10.65625],\n          [1551440340000, 12.1328125],\n          [1551440370000, 12.125],\n          [1551440400000, 12.0390625],\n          [1551440430000, 11.8359375],\n          [1551440460000, 11.6875],\n          [1551440490000, 11.4140625],\n          [1551440520000, 11.1796875],\n          [1551440550000, 10.984375],\n          [1551440580000, 10.7890625],\n          [1551440610000, 10.53125],\n          [1551440640000, 10.8359375],\n          [1551440670000, 11.0234375],\n          [1551440700000, 10.96875],\n          [1551440730000, 10.9296875],\n          [1551440760000, 10.875],\n          [1551440790000, 10.7890625],\n          [1551440820000, 10.8046875],\n          [1551440850000, 10.828125],\n          [1551440880000, 11.1875],\n          [1551440910000, 11.125],\n          [1551440940000, 11],\n          [1551440970000, 11.015625],\n          [1551441000000, 10.9140625],\n          [1551441030000, 10.796875],\n          [1551441060000, 10.625],\n          [1551441090000, 10.4765625],\n          [1551441120000, 10.2578125],\n          [1551441150000, 10.1640625],\n          [1551441180000, 10.265625],\n          [1551441210000, 10.6484375],\n          [1551441240000, 10.65625],\n          [1551441270000, 10.625],\n          [1551441300000, 10.5859375],\n          [1551441330000, 10.46875],\n          [1551441360000, 10.2421875],\n          [1551441390000, 10.203125],\n          [1551441420000, 10.140625],\n          [1551441450000, 10.0625],\n          [1551441480000, 11.140625],\n          [1551441510000, 10.9921875],\n          [1551441540000, 10.7890625],\n          [1551441570000, 10.625],\n        ],\n      },\n    ],\n    kibana_average_concurrent_connections: [\n      {\n        bucket_size: '30 seconds',\n        timeRange: { min: 1551438000000, max: 1551441600000 },\n        metric: {\n          app: 'kibana',\n          field: 'kibana_stats.concurrent_connections',\n          metricAgg: 'max',\n          label: 'HTTP Connections',\n          description: 'Total number of open socket connections to the Kibana instance.',\n          units: '',\n          format: '0.[00]',\n          hasCalculation: false,\n          isDerivative: false,\n        },\n        data: [\n          [1551438000000, 20],\n          [1551438030000, 18],\n          [1551438060000, 21],\n          [1551438090000, 21],\n          [1551438120000, 20],\n          [1551438150000, 19],\n          [1551438180000, 19],\n          [1551438210000, 19],\n          [1551438240000, 21],\n          [1551438270000, 21],\n          [1551438300000, 19],\n          [1551438330000, 21],\n          [1551438360000, 18],\n          [1551438390000, 18],\n          [1551438420000, 19],\n          [1551438450000, 19],\n          [1551438480000, 19],\n          [1551438510000, 19],\n          [1551438540000, 20],\n          [1551438570000, 23],\n          [1551438600000, 19],\n          [1551438630000, 21],\n          [1551438660000, 20],\n          [1551438690000, 19],\n          [1551438720000, 24],\n          [1551438750000, 20],\n          [1551438780000, 20],\n          [1551438810000, 19],\n          [1551438840000, 20],\n          [1551438870000, 21],\n          [1551438900000, 20],\n          [1551438930000, 19],\n          [1551438960000, 21],\n          [1551438990000, 20],\n          [1551439020000, 23],\n          [1551439050000, 18],\n          [1551439080000, 18],\n          [1551439110000, 18],\n          [1551439140000, 18],\n          [1551439170000, 17],\n          [1551439200000, 18],\n          [1551439230000, 19],\n          [1551439260000, 20],\n          [1551439290000, 20],\n          [1551439320000, 18],\n          [1551439350000, 20],\n          [1551439380000, 18],\n          [1551439410000, 20],\n          [1551439440000, 18],\n          [1551439470000, 19],\n          [1551439500000, 17],\n          [1551439530000, 17],\n          [1551439560000, 16],\n          [1551439590000, 15],\n          [1551439620000, 17],\n          [1551439650000, 18],\n          [1551439680000, 19],\n          [1551439710000, 20],\n          [1551439740000, 18],\n          [1551439770000, 21],\n          [1551439800000, 19],\n          [1551439830000, 20],\n          [1551439860000, 19],\n          [1551439890000, 18],\n          [1551439920000, 19],\n          [1551439950000, 19],\n          [1551439980000, 20],\n          [1551440010000, 19],\n          [1551440040000, 19],\n          [1551440070000, 19],\n          [1551440100000, 19],\n          [1551440130000, 17],\n          [1551440160000, 18],\n          [1551440190000, 18],\n          [1551440220000, 21],\n          [1551440250000, 18],\n          [1551440280000, 20],\n          [1551440310000, 17],\n          [1551440340000, 19],\n          [1551440370000, 20],\n          [1551440400000, 20],\n          [1551440430000, 20],\n          [1551440460000, 18],\n          [1551440490000, 16],\n          [1551440520000, 16],\n          [1551440550000, 17],\n          [1551440580000, 18],\n          [1551440610000, 16],\n          [1551440640000, 25],\n          [1551440670000, 16],\n          [1551440700000, 18],\n          [1551440730000, 17],\n          [1551440760000, 19],\n          [1551440790000, 17],\n          [1551440820000, 22],\n          [1551440850000, 20],\n          [1551440880000, 22],\n          [1551440910000, 31],\n          [1551440940000, 18],\n          [1551440970000, 17],\n          [1551441000000, 16],\n          [1551441030000, 17],\n          [1551441060000, 18],\n          [1551441090000, 16],\n          [1551441120000, 14],\n          [1551441150000, 14],\n          [1551441180000, 15],\n          [1551441210000, 19],\n          [1551441240000, 16],\n          [1551441270000, 17],\n          [1551441300000, 16],\n          [1551441330000, 16],\n          [1551441360000, 17],\n          [1551441390000, 18],\n          [1551441420000, 18],\n          [1551441450000, 17],\n          [1551441480000, 17],\n          [1551441510000, 16],\n          [1551441540000, 16],\n          [1551441570000, 17],\n        ],\n      },\n    ],\n    kibana_process_delay: [\n      {\n        bucket_size: '30 seconds',\n        timeRange: { min: 1551438000000, max: 1551441600000 },\n        metric: {\n          app: 'kibana',\n          field: 'kibana_stats.process.event_loop_delay',\n          metricAgg: 'max',\n          label: 'Event Loop Delay',\n          description: 'Delay in Kibana server event loops.',\n          units: 'ms',\n          format: '0.[00]',\n          hasCalculation: false,\n          isDerivative: false,\n        },\n        data: [\n          [1551438000000, 1.917205810546875],\n          [1551438030000, 1.7739791870117188],\n          [1551438060000, 2.943075180053711],\n          [1551438090000, 5.207357406616211],\n          [1551438120000, 1.6650104522705078],\n          [1551438150000, 2.154033660888672],\n          [1551438180000, 2.118760108947754],\n          [1551438210000, 3.37868595123291],\n          [1551438240000, 2.1819963455200195],\n          [1551438270000, 2.568490982055664],\n          [1551438300000, 353.22412109375],\n          [1551438330000, 4.138860702514648],\n          [1551438360000, 1.835433006286621],\n          [1551438390000, 1.8117866516113281],\n          [1551438420000, 1.7387809753417969],\n          [1551438450000, 2.006241798400879],\n          [1551438480000, 1.8574104309082031],\n          [1551438510000, 2.101459503173828],\n          [1551438540000, 2.2292041778564453],\n          [1551438570000, 1.8641471862792969],\n          [1551438600000, 2.124319076538086],\n          [1551438630000, 2.1186132431030273],\n          [1551438660000, 1.7360162734985352],\n          [1551438690000, 2.1855764389038086],\n          [1551438720000, 3.210604667663574],\n          [1551438750000, 2.510148048400879],\n          [1551438780000, 1.6755142211914062],\n          [1551438810000, 1.9307565689086914],\n          [1551438840000, 9.354450225830078],\n          [1551438870000, 1.9756240844726562],\n          [1551438900000, 2.2764291763305664],\n          [1551438930000, 346.5954284667969],\n          [1551438960000, 4.56385612487793],\n          [1551438990000, 2.3435449600219727],\n          [1551439020000, 3.8228683471679688],\n          [1551439050000, 2.6483001708984375],\n          [1551439080000, 1.8082962036132812],\n          [1551439110000, 1.6172676086425781],\n          [1551439140000, 1.8350811004638672],\n          [1551439170000, 1.659804344177246],\n          [1551439200000, 2.4164390563964844],\n          [1551439230000, 1.999464988708496],\n          [1551439260000, 1.9630374908447266],\n          [1551439290000, 2.0218467712402344],\n          [1551439320000, 2.076573371887207],\n          [1551439350000, 2.4036598205566406],\n          [1551439380000, 2.602895736694336],\n          [1551439410000, 2.5561323165893555],\n          [1551439440000, 2.3957443237304688],\n          [1551439470000, 2.3182430267333984],\n          [1551439500000, 2.0863637924194336],\n          [1551439530000, 1.9851713180541992],\n          [1551439560000, 1.9189224243164062],\n          [1551439590000, 1.937936782836914],\n          [1551439620000, 3.844411849975586],\n          [1551439650000, 5.052459716796875],\n          [1551439680000, 2.012505531311035],\n          [1551439710000, 2.27213191986084],\n          [1551439740000, 1.951359748840332],\n          [1551439770000, 2.6224374771118164],\n          [1551439800000, 2.6582508087158203],\n          [1551439830000, 2.607870101928711],\n          [1551439860000, 2.4416723251342773],\n          [1551439890000, 2.369551658630371],\n          [1551439920000, 2.0154476165771484],\n          [1551439950000, 2.096695899963379],\n          [1551439980000, 1.9279394149780273],\n          [1551440010000, 3.023202896118164],\n          [1551440040000, 3.772576332092285],\n          [1551440070000, 2.4855575561523438],\n          [1551440100000, 4.25732421875],\n          [1551440130000, 2.0820703506469727],\n          [1551440160000, 2.489288330078125],\n          [1551440190000, 2.602682113647461],\n          [1551440220000, 4.733266830444336],\n          [1551440250000, 1.8897781372070312],\n          [1551440280000, 2.365001678466797],\n          [1551440310000, 2.295949935913086],\n          [1551440340000, 3.2801055908203125],\n          [1551440370000, 1.8901805877685547],\n          [1551440400000, 2.0735225677490234],\n          [1551440430000, 1.8940362930297852],\n          [1551440460000, 3.0348567962646484],\n          [1551440490000, 2.0472803115844727],\n          [1551440520000, 2.2077903747558594],\n          [1551440550000, 5.1581220626831055],\n          [1551440580000, 2.039125442504883],\n          [1551440610000, 1.6546344757080078],\n          [1551440640000, 3.1943721771240234],\n          [1551440670000, 2.0258655548095703],\n          [1551440700000, 2.2764244079589844],\n          [1551440730000, 1.8293533325195312],\n          [1551440760000, 2.745746612548828],\n          [1551440790000, 2.426107406616211],\n          [1551440820000, 2.497190475463867],\n          [1551440850000, 2.6376562118530273],\n          [1551440880000, 6.415732383728027],\n          [1551440910000, 22.362375259399414],\n          [1551440940000, 1.8069639205932617],\n          [1551440970000, 2.2364587783813477],\n          [1551441000000, 2.1819095611572266],\n          [1551441030000, 2.6490097045898438],\n          [1551441060000, 3.7438411712646484],\n          [1551441090000, 2.2370100021362305],\n          [1551441120000, 2.1098766326904297],\n          [1551441150000, 3.0454416275024414],\n          [1551441180000, 2.211244583129883],\n          [1551441210000, 2.860243797302246],\n          [1551441240000, 2.255979537963867],\n          [1551441270000, 2.0102500915527344],\n          [1551441300000, 2.06740665435791],\n          [1551441330000, 1.9841184616088867],\n          [1551441360000, 2.046261787414551],\n          [1551441390000, 5.3361921310424805],\n          [1551441420000, 3.9412336349487305],\n          [1551441450000, 2.885173797607422],\n          [1551441480000, 3.661712646484375],\n          [1551441510000, 1.8046932220458984],\n          [1551441540000, 1.9574308395385742],\n          [1551441570000, 1.9149093627929688],\n        ],\n      },\n    ],\n    kibana_memory: [\n      {\n        bucket_size: '30 seconds',\n        timeRange: { min: 1551438000000, max: 1551441600000 },\n        metric: {\n          app: 'kibana',\n          field: 'kibana_stats.process.memory.heap.size_limit',\n          metricAgg: 'max',\n          label: 'Heap Size Limit',\n          title: 'Memory Size',\n          description: 'Limit of memory usage before garbage collection.',\n          units: 'B',\n          format: '0,0.0 b',\n          hasCalculation: false,\n          isDerivative: false,\n        },\n        data: [\n          [1551438000000, 1501560832],\n          [1551438030000, 1501560832],\n          [1551438060000, 1501560832],\n          [1551438090000, 1501560832],\n          [1551438120000, 1501560832],\n          [1551438150000, 1501560832],\n          [1551438180000, 1501560832],\n          [1551438210000, 1501560832],\n          [1551438240000, 1501560832],\n          [1551438270000, 1501560832],\n          [1551438300000, 1501560832],\n          [1551438330000, 1501560832],\n          [1551438360000, 1501560832],\n          [1551438390000, 1501560832],\n          [1551438420000, 1501560832],\n          [1551438450000, 1501560832],\n          [1551438480000, 1501560832],\n          [1551438510000, 1501560832],\n          [1551438540000, 1501560832],\n          [1551438570000, 1501560832],\n          [1551438600000, 1501560832],\n          [1551438630000, 1501560832],\n          [1551438660000, 1501560832],\n          [1551438690000, 1501560832],\n          [1551438720000, 1501560832],\n          [1551438750000, 1501560832],\n          [1551438780000, 1501560832],\n          [1551438810000, 1501560832],\n          [1551438840000, 1501560832],\n          [1551438870000, 1501560832],\n          [1551438900000, 1501560832],\n          [1551438930000, 1501560832],\n          [1551438960000, 1501560832],\n          [1551438990000, 1501560832],\n          [1551439020000, 1501560832],\n          [1551439050000, 1501560832],\n          [1551439080000, 1501560832],\n          [1551439110000, 1501560832],\n          [1551439140000, 1501560832],\n          [1551439170000, 1501560832],\n          [1551439200000, 1501560832],\n          [1551439230000, 1501560832],\n          [1551439260000, 1501560832],\n          [1551439290000, 1501560832],\n          [1551439320000, 1501560832],\n          [1551439350000, 1501560832],\n          [1551439380000, 1501560832],\n          [1551439410000, 1501560832],\n          [1551439440000, 1501560832],\n          [1551439470000, 1501560832],\n          [1551439500000, 1501560832],\n          [1551439530000, 1501560832],\n          [1551439560000, 1501560832],\n          [1551439590000, 1501560832],\n          [1551439620000, 1501560832],\n          [1551439650000, 1501560832],\n          [1551439680000, 1501560832],\n          [1551439710000, 1501560832],\n          [1551439740000, 1501560832],\n          [1551439770000, 1501560832],\n          [1551439800000, 1501560832],\n          [1551439830000, 1501560832],\n          [1551439860000, 1501560832],\n          [1551439890000, 1501560832],\n          [1551439920000, 1501560832],\n          [1551439950000, 1501560832],\n          [1551439980000, 1501560832],\n          [1551440010000, 1501560832],\n          [1551440040000, 1501560832],\n          [1551440070000, 1501560832],\n          [1551440100000, 1501560832],\n          [1551440130000, 1501560832],\n          [1551440160000, 1501560832],\n          [1551440190000, 1501560832],\n          [1551440220000, 1501560832],\n          [1551440250000, 1501560832],\n          [1551440280000, 1501560832],\n          [1551440310000, 1501560832],\n          [1551440340000, 1501560832],\n          [1551440370000, 1501560832],\n          [1551440400000, 1501560832],\n          [1551440430000, 1501560832],\n          [1551440460000, 1501560832],\n          [1551440490000, 1501560832],\n          [1551440520000, 1501560832],\n          [1551440550000, 1501560832],\n          [1551440580000, 1501560832],\n          [1551440610000, 1501560832],\n          [1551440640000, 1501560832],\n          [1551440670000, 1501560832],\n          [1551440700000, 1501560832],\n          [1551440730000, 1501560832],\n          [1551440760000, 1501560832],\n          [1551440790000, 1501560832],\n          [1551440820000, 1501560832],\n          [1551440850000, 1501560832],\n          [1551440880000, 1501560832],\n          [1551440910000, 1501560832],\n          [1551440940000, 1501560832],\n          [1551440970000, 1501560832],\n          [1551441000000, 1501560832],\n          [1551441030000, 1501560832],\n          [1551441060000, 1501560832],\n          [1551441090000, 1501560832],\n          [1551441120000, 1501560832],\n          [1551441150000, 1501560832],\n          [1551441180000, 1501560832],\n          [1551441210000, 1501560832],\n          [1551441240000, 1501560832],\n          [1551441270000, 1501560832],\n          [1551441300000, 1501560832],\n          [1551441330000, 1501560832],\n          [1551441360000, 1501560832],\n          [1551441390000, 1501560832],\n          [1551441420000, 1501560832],\n          [1551441450000, 1501560832],\n          [1551441480000, 1501560832],\n          [1551441510000, 1501560832],\n          [1551441540000, 1501560832],\n          [1551441570000, 1501560832],\n        ],\n      },\n      {\n        bucket_size: '30 seconds',\n        timeRange: { min: 1551438000000, max: 1551441600000 },\n        metric: {\n          app: 'kibana',\n          field: 'kibana_stats.process.memory.resident_set_size_in_bytes',\n          metricAgg: 'max',\n          label: 'Memory Size',\n          title: 'Memory Size',\n          description: 'Total heap used by Kibana running in Node.js.',\n          units: 'B',\n          format: '0,0.0 b',\n          hasCalculation: false,\n          isDerivative: false,\n        },\n        data: [\n          [1551438000000, 645689344],\n          [1551438030000, 642293760],\n          [1551438060000, 649953280],\n          [1551438090000, 637751296],\n          [1551438120000, 643112960],\n          [1551438150000, 642781184],\n          [1551438180000, 642899968],\n          [1551438210000, 646262784],\n          [1551438240000, 643276800],\n          [1551438270000, 663547904],\n          [1551438300000, 654954496],\n          [1551438330000, 644222976],\n          [1551438360000, 645672960],\n          [1551438390000, 649728000],\n          [1551438420000, 646631424],\n          [1551438450000, 647000064],\n          [1551438480000, 647114752],\n          [1551438510000, 648630272],\n          [1551438540000, 647720960],\n          [1551438570000, 646979584],\n          [1551438600000, 651296768],\n          [1551438630000, 642248704],\n          [1551438660000, 645177344],\n          [1551438690000, 648171520],\n          [1551438720000, 670048256],\n          [1551438750000, 653139968],\n          [1551438780000, 644583424],\n          [1551438810000, 648630272],\n          [1551438840000, 647925760],\n          [1551438870000, 648986624],\n          [1551438900000, 644399104],\n          [1551438930000, 636719104],\n          [1551438960000, 650260480],\n          [1551438990000, 666669056],\n          [1551439020000, 661057536],\n          [1551439050000, 649957376],\n          [1551439080000, 655093760],\n          [1551439110000, 647913472],\n          [1551439140000, 642232320],\n          [1551439170000, 642490368],\n          [1551439200000, 643133440],\n          [1551439230000, 640008192],\n          [1551439260000, 648654848],\n          [1551439290000, 643506176],\n          [1551439320000, 647127040],\n          [1551439350000, 662966272],\n          [1551439380000, 646635520],\n          [1551439410000, 641519616],\n          [1551439440000, 658214912],\n          [1551439470000, 666677248],\n          [1551439500000, 651583488],\n          [1551439530000, 652963840],\n          [1551439560000, 662065152],\n          [1551439590000, 662417408],\n          [1551439620000, 665919488],\n          [1551439650000, 646316032],\n          [1551439680000, 643153920],\n          [1551439710000, 658288640],\n          [1551439740000, 662052864],\n          [1551439770000, 660353024],\n          [1551439800000, 649293824],\n          [1551439830000, 661753856],\n          [1551439860000, 663977984],\n          [1551439890000, 658100224],\n          [1551439920000, 657711104],\n          [1551439950000, 645820416],\n          [1551439980000, 648531968],\n          [1551440010000, 644272128],\n          [1551440040000, 649019392],\n          [1551440070000, 656228352],\n          [1551440100000, 643280896],\n          [1551440130000, 645763072],\n          [1551440160000, 649703424],\n          [1551440190000, 653647872],\n          [1551440220000, 647307264],\n          [1551440250000, 685629440],\n          [1551440280000, 711311360],\n          [1551440310000, 648220672],\n          [1551440340000, 645439488],\n          [1551440370000, 646225920],\n          [1551440400000, 650481664],\n          [1551440430000, 650178560],\n          [1551440460000, 651149312],\n          [1551440490000, 653852672],\n          [1551440520000, 651427840],\n          [1551440550000, 652050432],\n          [1551440580000, 646492160],\n          [1551440610000, 650129408],\n          [1551440640000, 659320832],\n          [1551440670000, 653029376],\n          [1551440700000, 661946368],\n          [1551440730000, 652808192],\n          [1551440760000, 656105472],\n          [1551440790000, 654086144],\n          [1551440820000, 649216000],\n          [1551440850000, 660570112],\n          [1551440880000, 663560192],\n          [1551440910000, 663306240],\n          [1551440940000, 750891008],\n          [1551440970000, 802795520],\n          [1551441000000, 682393600],\n          [1551441030000, 646311936],\n          [1551441060000, 648204288],\n          [1551441090000, 650903552],\n          [1551441120000, 648257536],\n          [1551441150000, 649920512],\n          [1551441180000, 643801088],\n          [1551441210000, 653606912],\n          [1551441240000, 654901248],\n          [1551441270000, 644833280],\n          [1551441300000, 658534400],\n          [1551441330000, 655249408],\n          [1551441360000, 647827456],\n          [1551441390000, 655147008],\n          [1551441420000, 652087296],\n          [1551441450000, 655159296],\n          [1551441480000, 655753216],\n          [1551441510000, 666820608],\n          [1551441540000, 662138880],\n          [1551441570000, 651341824],\n        ],\n      },\n    ],\n    kibana_response_times: [\n      {\n        bucket_size: '30 seconds',\n        timeRange: { min: 1551438000000, max: 1551441600000 },\n        metric: {\n          app: 'kibana',\n          field: 'kibana_stats.response_times.max',\n          metricAgg: 'max',\n          label: 'Max',\n          title: 'Client Response Time',\n          description: 'Maximum response time for client requests to the Kibana instance.',\n          units: 'ms',\n          format: '0.[00]',\n          hasCalculation: false,\n          isDerivative: false,\n        },\n        data: [\n          [1551438000000, 11637],\n          [1551438030000, 12188],\n          [1551438060000, 11802],\n          [1551438090000, 11907],\n          [1551438120000, 11875],\n          [1551438150000, 11835],\n          [1551438180000, 12077],\n          [1551438210000, 11827],\n          [1551438240000, 11870],\n          [1551438270000, 11897],\n          [1551438300000, 12085],\n          [1551438330000, 11829],\n          [1551438360000, 11804],\n          [1551438390000, 12040],\n          [1551438420000, 11906],\n          [1551438450000, 11967],\n          [1551438480000, 11798],\n          [1551438510000, 11587],\n          [1551438540000, 11766],\n          [1551438570000, 11763],\n          [1551438600000, 11848],\n          [1551438630000, 12061],\n          [1551438660000, 11922],\n          [1551438690000, 11805],\n          [1551438720000, 12194],\n          [1551438750000, 11784],\n          [1551438780000, 12097],\n          [1551438810000, 11984],\n          [1551438840000, 11955],\n          [1551438870000, 11378],\n          [1551438900000, 12047],\n          [1551438930000, 11989],\n          [1551438960000, 11925],\n          [1551438990000, 12009],\n          [1551439020000, 11806],\n          [1551439050000, 11761],\n          [1551439080000, 11808],\n          [1551439110000, 11979],\n          [1551439140000, 11945],\n          [1551439170000, 11769],\n          [1551439200000, 12010],\n          [1551439230000, 11746],\n          [1551439260000, 12176],\n          [1551439290000, 12253],\n          [1551439320000, 12093],\n          [1551439350000, 12034],\n          [1551439380000, 12114],\n          [1551439410000, 12135],\n          [1551439440000, 12193],\n          [1551439470000, 12138],\n          [1551439500000, 12116],\n          [1551439530000, 11849],\n          [1551439560000, 12335],\n          [1551439590000, 11988],\n          [1551439620000, 12077],\n          [1551439650000, 11841],\n          [1551439680000, 11956],\n          [1551439710000, 11798],\n          [1551439740000, 11939],\n          [1551439770000, 11929],\n          [1551439800000, 11894],\n          [1551439830000, 11962],\n          [1551439860000, 12348],\n          [1551439890000, 11939],\n          [1551439920000, 12005],\n          [1551439950000, 12550],\n          [1551439980000, 11935],\n          [1551440010000, 11931],\n          [1551440040000, 11814],\n          [1551440070000, 11703],\n          [1551440100000, 11990],\n          [1551440130000, 12050],\n          [1551440160000, 11971],\n          [1551440190000, 11720],\n          [1551440220000, 12085],\n          [1551440250000, 11919],\n          [1551440280000, 12551],\n          [1551440310000, 11873],\n          [1551440340000, 11599],\n          [1551440370000, 11977],\n          [1551440400000, 12002],\n          [1551440430000, 11757],\n          [1551440460000, 11657],\n          [1551440490000, 11291],\n          [1551440520000, 11943],\n          [1551440550000, 12223],\n          [1551440580000, 1482],\n          [1551440610000, 12060],\n          [1551440640000, 12016],\n          [1551440670000, 12318],\n          [1551440700000, 11969],\n          [1551440730000, 11974],\n          [1551440760000, 11779],\n          [1551440790000, 11868],\n          [1551440820000, 12295],\n          [1551440850000, 12077],\n          [1551440880000, 12127],\n          [1551440910000, 12075],\n          [1551440940000, 12472],\n          [1551440970000, 11715],\n          [1551441000000, 12036],\n          [1551441030000, 12020],\n          [1551441060000, 12816],\n          [1551441090000, 12644],\n          [1551441120000, 11907],\n          [1551441150000, 11945],\n          [1551441180000, 12083],\n          [1551441210000, 11998],\n          [1551441240000, 12259],\n          [1551441270000, 11516],\n          [1551441300000, 11969],\n          [1551441330000, 12053],\n          [1551441360000, 12002],\n          [1551441390000, 12016],\n          [1551441420000, 12146],\n          [1551441450000, 11904],\n          [1551441480000, 11942],\n          [1551441510000, 12139],\n          [1551441540000, 11966],\n          [1551441570000, 12051],\n        ],\n      },\n      {\n        bucket_size: '30 seconds',\n        timeRange: { min: 1551438000000, max: 1551441600000 },\n        metric: {\n          app: 'kibana',\n          field: 'kibana_stats.response_times.average',\n          metricAgg: 'max',\n          label: 'Average',\n          title: 'Client Response Time',\n          description: 'Average response time for client requests to the Kibana instance.',\n          units: 'ms',\n          format: '0.[00]',\n          hasCalculation: false,\n          isDerivative: false,\n        },\n        data: [\n          [1551438000000, 237.5],\n          [1551438030000, 606.875],\n          [1551438060000, 514.413818359375],\n          [1551438090000, 722.0555419921875],\n          [1551438120000, 512],\n          [1551438150000, 294.32073974609375],\n          [1551438180000, 538.6333618164062],\n          [1551438210000, 720.8333129882812],\n          [1551438240000, 468.56097412109375],\n          [1551438270000, 559.5184936523438],\n          [1551438300000, 549.888916015625],\n          [1551438330000, 636.6190185546875],\n          [1551438360000, 626.6818237304688],\n          [1551438390000, 578.8846435546875],\n          [1551438420000, 562.4615478515625],\n          [1551438450000, 582.75],\n          [1551438480000, 491.0967712402344],\n          [1551438510000, 527.5357055664062],\n          [1551438540000, 436.25714111328125],\n          [1551438570000, 504.17242431640625],\n          [1551438600000, 527.8928833007812],\n          [1551438630000, 419.20513916015625],\n          [1551438660000, 494.258056640625],\n          [1551438690000, 529.5184936523438],\n          [1551438720000, 511.2257995605469],\n          [1551438750000, 297.3492126464844],\n          [1551438780000, 622.3666381835938],\n          [1551438810000, 284.5199890136719],\n          [1551438840000, 805.5555419921875],\n          [1551438870000, 519.2857055664062],\n          [1551438900000, 609.4583129882812],\n          [1551438930000, 278.6333312988281],\n          [1551438960000, 537.3461303710938],\n          [1551438990000, 522.0344848632812],\n          [1551439020000, 440.8571472167969],\n          [1551439050000, 518],\n          [1551439080000, 232.17808532714844],\n          [1551439110000, 494.0322570800781],\n          [1551439140000, 597],\n          [1551439170000, 297.7321472167969],\n          [1551439200000, 552.2857055664062],\n          [1551439230000, 270.17742919921875],\n          [1551439260000, 563.3076782226562],\n          [1551439290000, 591.375],\n          [1551439320000, 613.0370483398438],\n          [1551439350000, 557.1142578125],\n          [1551439380000, 474.875],\n          [1551439410000, 282.0428466796875],\n          [1551439440000, 285.3492126464844],\n          [1551439470000, 466.2894592285156],\n          [1551439500000, 452.3714294433594],\n          [1551439530000, 445.9459533691406],\n          [1551439560000, 410.5],\n          [1551439590000, 434.6486511230469],\n          [1551439620000, 243.028564453125],\n          [1551439650000, 477.125],\n          [1551439680000, 245.6666717529297],\n          [1551439710000, 266.63934326171875],\n          [1551439740000, 398.4285583496094],\n          [1551439770000, 395.9761962890625],\n          [1551439800000, 233.9545440673828],\n          [1551439830000, 427.76922607421875],\n          [1551439860000, 366.05999755859375],\n          [1551439890000, 514],\n          [1551439920000, 421.452392578125],\n          [1551439950000, 445.5128173828125],\n          [1551439980000, 279.76812744140625],\n          [1551440010000, 225.01123046875],\n          [1551440040000, 520.6551513671875],\n          [1551440070000, 525],\n          [1551440100000, 317.6000061035156],\n          [1551440130000, 432.9756164550781],\n          [1551440160000, 454.4210510253906],\n          [1551440190000, 507.625],\n          [1551440220000, 300.015869140625],\n          [1551440250000, 512.625],\n          [1551440280000, 476.7250061035156],\n          [1551440310000, 485.8484802246094],\n          [1551440340000, 446.97222900390625],\n          [1551440370000, 519.2142944335938],\n          [1551440400000, 461.941162109375],\n          [1551440430000, 534.74072265625],\n          [1551440460000, 498.258056640625],\n          [1551440490000, 515.6666870117188],\n          [1551440520000, 564.137939453125],\n          [1551440550000, 515.933349609375],\n          [1551440580000, 148.50877380371094],\n          [1551440610000, 445.6388854980469],\n          [1551440640000, 569.923095703125],\n          [1551440670000, 328.4313659667969],\n          [1551440700000, 386.47369384765625],\n          [1551440730000, 514.6785888671875],\n          [1551440760000, 667.6818237304688],\n          [1551440790000, 589.6153564453125],\n          [1551440820000, 337.5918273925781],\n          [1551440850000, 435.868408203125],\n          [1551440880000, 569.774169921875],\n          [1551440910000, 532.0714111328125],\n          [1551440940000, 365.9818115234375],\n          [1551440970000, 616.0833129882812],\n          [1551441000000, 521.8965454101562],\n          [1551441030000, 557.1851806640625],\n          [1551441060000, 540.3793334960938],\n          [1551441090000, 588.076904296875],\n          [1551441120000, 610.2000122070312],\n          [1551441150000, 621.3333129882812],\n          [1551441180000, 534],\n          [1551441210000, 533.8571166992188],\n          [1551441240000, 459.8611145019531],\n          [1551441270000, 508.96429443359375],\n          [1551441300000, 556.8148193359375],\n          [1551441330000, 614.8695678710938],\n          [1551441360000, 469.8285827636719],\n          [1551441390000, 484.18182373046875],\n          [1551441420000, 644.09521484375],\n          [1551441450000, 524],\n          [1551441480000, 719.5789184570312],\n          [1551441510000, 564.4000244140625],\n          [1551441540000, 561.0740966796875],\n          [1551441570000, 329.6833190917969],\n        ],\n      },\n    ],\n    kibana_requests: [\n      {\n        bucket_size: '30 seconds',\n        timeRange: { min: 1551438000000, max: 1551441600000 },\n        metric: {\n          app: 'kibana',\n          field: 'kibana_stats.requests.total',\n          metricAgg: 'max',\n          label: 'Client Requests',\n          description: 'Total number of client requests received by the Kibana instance.',\n          units: '',\n          format: '0.[00]',\n          hasCalculation: false,\n          isDerivative: false,\n        },\n        data: [\n          [1551438000000, 62],\n          [1551438030000, 43],\n          [1551438060000, 64],\n          [1551438090000, 60],\n          [1551438120000, 44],\n          [1551438150000, 56],\n          [1551438180000, 32],\n          [1551438210000, 36],\n          [1551438240000, 56],\n          [1551438270000, 83],\n          [1551438300000, 59],\n          [1551438330000, 62],\n          [1551438360000, 34],\n          [1551438390000, 35],\n          [1551438420000, 30],\n          [1551438450000, 30],\n          [1551438480000, 32],\n          [1551438510000, 30],\n          [1551438540000, 62],\n          [1551438570000, 37],\n          [1551438600000, 33],\n          [1551438630000, 56],\n          [1551438660000, 36],\n          [1551438690000, 31],\n          [1551438720000, 85],\n          [1551438750000, 75],\n          [1551438780000, 53],\n          [1551438810000, 48],\n          [1551438840000, 39],\n          [1551438870000, 57],\n          [1551438900000, 37],\n          [1551438930000, 58],\n          [1551438960000, 91],\n          [1551438990000, 65],\n          [1551439020000, 43],\n          [1551439050000, 35],\n          [1551439080000, 71],\n          [1551439110000, 62],\n          [1551439140000, 34],\n          [1551439170000, 55],\n          [1551439200000, 61],\n          [1551439230000, 74],\n          [1551439260000, 62],\n          [1551439290000, 53],\n          [1551439320000, 97],\n          [1551439350000, 92],\n          [1551439380000, 37],\n          [1551439410000, 71],\n          [1551439440000, 64],\n          [1551439470000, 39],\n          [1551439500000, 60],\n          [1551439530000, 56],\n          [1551439560000, 39],\n          [1551439590000, 36],\n          [1551439620000, 70],\n          [1551439650000, 47],\n          [1551439680000, 66],\n          [1551439710000, 124],\n          [1551439740000, 52],\n          [1551439770000, 98],\n          [1551439800000, 86],\n          [1551439830000, 97],\n          [1551439860000, 50],\n          [1551439890000, 36],\n          [1551439920000, 42],\n          [1551439950000, 41],\n          [1551439980000, 72],\n          [1551440010000, 93],\n          [1551440040000, 53],\n          [1551440070000, 33],\n          [1551440100000, 66],\n          [1551440130000, 43],\n          [1551440160000, 44],\n          [1551440190000, 34],\n          [1551440220000, 104],\n          [1551440250000, 50],\n          [1551440280000, 38],\n          [1551440310000, 35],\n          [1551440340000, 37],\n          [1551440370000, 37],\n          [1551440400000, 40],\n          [1551440430000, 33],\n          [1551440460000, 34],\n          [1551440490000, 31],\n          [1551440520000, 35],\n          [1551440550000, 41],\n          [1551440580000, 59],\n          [1551440610000, 36],\n          [1551440640000, 80],\n          [1551440670000, 41],\n          [1551440700000, 53],\n          [1551440730000, 106],\n          [1551440760000, 62],\n          [1551440790000, 90],\n          [1551440820000, 67],\n          [1551440850000, 107],\n          [1551440880000, 83],\n          [1551440910000, 74],\n          [1551440940000, 91],\n          [1551440970000, 57],\n          [1551441000000, 36],\n          [1551441030000, 33],\n          [1551441060000, 55],\n          [1551441090000, 41],\n          [1551441120000, 32],\n          [1551441150000, 38],\n          [1551441180000, 57],\n          [1551441210000, 57],\n          [1551441240000, 43],\n          [1551441270000, 41],\n          [1551441300000, 34],\n          [1551441330000, 59],\n          [1551441360000, 36],\n          [1551441390000, 71],\n          [1551441420000, 55],\n          [1551441450000, 43],\n          [1551441480000, 67],\n          [1551441510000, 81],\n          [1551441540000, 58],\n          [1551441570000, 97],\n        ],\n      },\n    ],\n  },\n  kibanaSummary: {\n    uuid: '38cd1f5c-fc29-492e-b5b6-34777df7bdf6',\n    name: 'demo.elastic.co',\n    index: '.kibana',\n    host: '0.0.0.0',\n    transport_address: '0.0.0.0:5601',\n    version: '6.5.4',\n    snapshot: false,\n    status: 'green',\n    availability: true,\n    os_memory_free: 74041475072,\n    uptime: 243193903,\n  },\n};\n","\n  export var withStorySource = require('@storybook/addon-storysource').withStorySource;\n  export var __STORY__ = \"import { boolean, select } from '@storybook/addon-knobs';\\nimport { storiesOf } from '@storybook/react';\\nimport React from 'react';\\nimport { Axis, BarSeries, Chart, getAxisId, getSpecId, Position, ScaleType, Settings } from '../src/';\\n\\nstoriesOf('Rotations', module)\\n  .add('with ordinal axis', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings\\n          debug={boolean('Debug', true)}\\n          showLegend={boolean('Legend', true)}\\n          legendPosition={select(\\n            'Legend position',\\n            {\\n              Left: Position.Left,\\n              Right: Position.Right,\\n              Top: Position.Top,\\n              Bottom: Position.Bottom,\\n            },\\n            Position.Right\\n          )}\\n          rotation={select(\\n            'Rotation degree',\\n            {\\n              '0 deg(default)': 0,\\n              '90 deg': 90,\\n              '-90 deg': -90,\\n              '180 deg': 180,\\n            },\\n            0\\n          )}\\n        />\\n        <Axis\\n          id={getAxisId('bottom')}\\n          position={Position.Bottom}\\n          title={'Bottom axis'}\\n          showOverlappingTicks={true}\\n          showOverlappingLabels={boolean('bottom show overlapping labels', false)}\\n        />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          showOverlappingTicks={true}\\n          showOverlappingLabels={boolean('left show overlapping labels', false)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Ordinal}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 'a', y: 1 }, { x: 'b', y: 2 }, { x: 'c', y: 3 }, { x: 'd', y: 4 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('-90 deg ordinal', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} rotation={-90} />\\n        <Axis id={getAxisId('y top')} position={Position.Top} title={'y top axis'} />\\n        <Axis id={getAxisId('x right')} title={'x right axis'} position={Position.Right} />\\n        <Axis id={getAxisId('y bottom')} position={Position.Bottom} title={'y bottom axis'} />\\n        <Axis id={getAxisId('x left')} title={'x left axis'} position={Position.Left} />\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Ordinal}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 'a', y: 1 }, { x: 'b', y: 2 }, { x: 'c', y: 3 }, { x: 'd', y: 4 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('0 deg ordinal', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} rotation={0} />\\n        <Axis id={getAxisId('x top')} position={Position.Top} title={'x top axis'} />\\n        <Axis id={getAxisId('y right')} title={'y right axis'} position={Position.Right} />\\n        <Axis id={getAxisId('x bottom')} position={Position.Bottom} title={'x bottom axis'} />\\n        <Axis id={getAxisId('y left')} title={'y left axis'} position={Position.Left} />\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Ordinal}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 'a', y: 1 }, { x: 'b', y: 2 }, { x: 'c', y: 3 }, { x: 'd', y: 4 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('90 deg ordinal', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} rotation={90} />\\n        <Axis id={getAxisId('y top')} position={Position.Top} title={'y top axis'} />\\n        <Axis id={getAxisId('x right')} title={'x right axis'} position={Position.Right} />\\n        <Axis id={getAxisId('y bottom')} position={Position.Bottom} title={'y bottom axis'} />\\n        <Axis id={getAxisId('x left')} title={'x left axis'} position={Position.Left} />\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Ordinal}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 'a', y: 1 }, { x: 'b', y: 2 }, { x: 'c', y: 3 }, { x: 'd', y: 4 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('180 deg ordinal', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} rotation={180} />\\n        <Axis id={getAxisId('x top')} position={Position.Top} title={'x top axis'} />\\n        <Axis id={getAxisId('y right')} title={'y right axis'} position={Position.Right} />\\n        <Axis id={getAxisId('x bottom')} position={Position.Bottom} title={'x bottom axis'} />\\n        <Axis id={getAxisId('y left')} title={'y left axis'} position={Position.Left} />\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Ordinal}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 'a', y: 1 }, { x: 'b', y: 2 }, { x: 'c', y: 3 }, { x: 'd', y: 4 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('-90 deg linear', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} rotation={-90} />\\n        <Axis id={getAxisId('y top')} position={Position.Top} title={'y top axis'} />\\n        <Axis id={getAxisId('x right')} title={'x right axis'} position={Position.Right} />\\n        <Axis id={getAxisId('y bottom')} position={Position.Bottom} title={'y bottom axis'} />\\n        <Axis id={getAxisId('x left')} title={'x left axis'} position={Position.Left} />\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 1 }, { x: 1, y: 2 }, { x: 2, y: 3 }, { x: 3, y: 4 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('0 deg linear', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} rotation={0} />\\n        <Axis id={getAxisId('x top')} position={Position.Top} title={'x top axis'} />\\n        <Axis id={getAxisId('y right')} title={'y right axis'} position={Position.Right} />\\n        <Axis id={getAxisId('x bottom')} position={Position.Bottom} title={'x bottom axis'} />\\n        <Axis id={getAxisId('y left')} title={'y left axis'} position={Position.Left} />\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 1 }, { x: 1, y: 2 }, { x: 2, y: 3 }, { x: 3, y: 4 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('90 deg linear', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} rotation={90} />\\n        <Axis id={getAxisId('y top')} position={Position.Top} title={'y top axis'} />\\n        <Axis id={getAxisId('x right')} title={'x right axis'} position={Position.Right} />\\n        <Axis id={getAxisId('y bottom')} position={Position.Bottom} title={'y bottom axis'} />\\n        <Axis id={getAxisId('x left')} title={'x left axis'} position={Position.Left} />\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 1 }, { x: 1, y: 2 }, { x: 2, y: 3 }, { x: 3, y: 4 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('180 deg linear', () => {\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} rotation={180} />\\n        <Axis id={getAxisId('x top')} position={Position.Top} title={'x top axis'} />\\n        <Axis id={getAxisId('y right')} title={'y right axis'} position={Position.Right} />\\n        <Axis id={getAxisId('x bottom')} position={Position.Bottom} title={'x bottom axis'} />\\n        <Axis id={getAxisId('y left')} title={'y left axis'} position={Position.Left} />\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 1 }, { x: 1, y: 2 }, { x: 2, y: 3 }, { x: 3, y: 4 }]}\\n        />\\n      </Chart>\\n    );\\n  });\\n\";\n  export var __ADDS_MAP__ = {\"Rotations@180 deg linear\":{\"startLoc\":{\"col\":7,\"line\":193},\"endLoc\":{\"col\":3,\"line\":211}},\"Rotations@90 deg linear\":{\"startLoc\":{\"col\":7,\"line\":174},\"endLoc\":{\"col\":3,\"line\":192}},\"Rotations@0 deg linear\":{\"startLoc\":{\"col\":7,\"line\":155},\"endLoc\":{\"col\":3,\"line\":173}},\"Rotations@-90 deg linear\":{\"startLoc\":{\"col\":7,\"line\":136},\"endLoc\":{\"col\":3,\"line\":154}},\"Rotations@180 deg ordinal\":{\"startLoc\":{\"col\":7,\"line\":117},\"endLoc\":{\"col\":3,\"line\":135}},\"Rotations@90 deg ordinal\":{\"startLoc\":{\"col\":7,\"line\":98},\"endLoc\":{\"col\":3,\"line\":116}},\"Rotations@0 deg ordinal\":{\"startLoc\":{\"col\":7,\"line\":79},\"endLoc\":{\"col\":3,\"line\":97}},\"Rotations@-90 deg ordinal\":{\"startLoc\":{\"col\":7,\"line\":60},\"endLoc\":{\"col\":3,\"line\":78}},\"Rotations@with ordinal axis\":{\"startLoc\":{\"col\":7,\"line\":7},\"endLoc\":{\"col\":3,\"line\":59}}};\n  \n  import { boolean, select } from '@storybook/addon-knobs';\nimport { storiesOf } from '@storybook/react';\nimport React from 'react';\nimport {\n  Axis,\n  BarSeries,\n  Chart,\n  getAxisId,\n  getSpecId,\n  Position,\n  ScaleType,\n  Settings,\n} from '../src/';\n\nstoriesOf('Rotations', module).addDecorator(withStorySource(__STORY__, __ADDS_MAP__))\n  .add('with ordinal axis', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings\n          debug={boolean('Debug', true)}\n          showLegend={boolean('Legend', true)}\n          legendPosition={select(\n            'Legend position',\n            {\n              Left: Position.Left,\n              Right: Position.Right,\n              Top: Position.Top,\n              Bottom: Position.Bottom,\n            },\n            Position.Right,\n          )}\n          rotation={select(\n            'Rotation degree',\n            {\n              '0 deg(default)': 0,\n              '90 deg': 90,\n              '-90 deg': -90,\n              '180 deg': 180,\n            },\n            0,\n          )}\n        />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n          showOverlappingLabels={boolean('bottom show overlapping labels', false)}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          showOverlappingTicks={true}\n          showOverlappingLabels={boolean('left show overlapping labels', false)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Ordinal}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 'a', y: 1 }, { x: 'b', y: 2 }, { x: 'c', y: 3 }, { x: 'd', y: 4 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('-90 deg ordinal', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} rotation={-90} />\n        <Axis id={getAxisId('y top')} position={Position.Top} title={'y top axis'} />\n        <Axis id={getAxisId('x right')} title={'x right axis'} position={Position.Right} />\n        <Axis id={getAxisId('y bottom')} position={Position.Bottom} title={'y bottom axis'} />\n        <Axis id={getAxisId('x left')} title={'x left axis'} position={Position.Left} />\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Ordinal}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 'a', y: 1 }, { x: 'b', y: 2 }, { x: 'c', y: 3 }, { x: 'd', y: 4 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('0 deg ordinal', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} rotation={0} />\n        <Axis id={getAxisId('x top')} position={Position.Top} title={'x top axis'} />\n        <Axis id={getAxisId('y right')} title={'y right axis'} position={Position.Right} />\n        <Axis id={getAxisId('x bottom')} position={Position.Bottom} title={'x bottom axis'} />\n        <Axis id={getAxisId('y left')} title={'y left axis'} position={Position.Left} />\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Ordinal}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 'a', y: 1 }, { x: 'b', y: 2 }, { x: 'c', y: 3 }, { x: 'd', y: 4 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('90 deg ordinal', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} rotation={90} />\n        <Axis id={getAxisId('y top')} position={Position.Top} title={'y top axis'} />\n        <Axis id={getAxisId('x right')} title={'x right axis'} position={Position.Right} />\n        <Axis id={getAxisId('y bottom')} position={Position.Bottom} title={'y bottom axis'} />\n        <Axis id={getAxisId('x left')} title={'x left axis'} position={Position.Left} />\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Ordinal}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 'a', y: 1 }, { x: 'b', y: 2 }, { x: 'c', y: 3 }, { x: 'd', y: 4 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('180 deg ordinal', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} rotation={180} />\n        <Axis id={getAxisId('x top')} position={Position.Top} title={'x top axis'} />\n        <Axis id={getAxisId('y right')} title={'y right axis'} position={Position.Right} />\n        <Axis id={getAxisId('x bottom')} position={Position.Bottom} title={'x bottom axis'} />\n        <Axis id={getAxisId('y left')} title={'y left axis'} position={Position.Left} />\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Ordinal}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 'a', y: 1 }, { x: 'b', y: 2 }, { x: 'c', y: 3 }, { x: 'd', y: 4 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('-90 deg linear', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} rotation={-90} />\n        <Axis id={getAxisId('y top')} position={Position.Top} title={'y top axis'} />\n        <Axis id={getAxisId('x right')} title={'x right axis'} position={Position.Right} />\n        <Axis id={getAxisId('y bottom')} position={Position.Bottom} title={'y bottom axis'} />\n        <Axis id={getAxisId('x left')} title={'x left axis'} position={Position.Left} />\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 1 }, { x: 1, y: 2 }, { x: 2, y: 3 }, { x: 3, y: 4 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('0 deg linear', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} rotation={0} />\n        <Axis id={getAxisId('x top')} position={Position.Top} title={'x top axis'} />\n        <Axis id={getAxisId('y right')} title={'y right axis'} position={Position.Right} />\n        <Axis id={getAxisId('x bottom')} position={Position.Bottom} title={'x bottom axis'} />\n        <Axis id={getAxisId('y left')} title={'y left axis'} position={Position.Left} />\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 1 }, { x: 1, y: 2 }, { x: 2, y: 3 }, { x: 3, y: 4 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('90 deg linear', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} rotation={90} />\n        <Axis id={getAxisId('y top')} position={Position.Top} title={'y top axis'} />\n        <Axis id={getAxisId('x right')} title={'x right axis'} position={Position.Right} />\n        <Axis id={getAxisId('y bottom')} position={Position.Bottom} title={'y bottom axis'} />\n        <Axis id={getAxisId('x left')} title={'x left axis'} position={Position.Left} />\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 1 }, { x: 1, y: 2 }, { x: 2, y: 3 }, { x: 3, y: 4 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('180 deg linear', () => {\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} rotation={180} />\n        <Axis id={getAxisId('x top')} position={Position.Top} title={'x top axis'} />\n        <Axis id={getAxisId('y right')} title={'y right axis'} position={Position.Right} />\n        <Axis id={getAxisId('x bottom')} position={Position.Bottom} title={'x bottom axis'} />\n        <Axis id={getAxisId('y left')} title={'y left axis'} position={Position.Left} />\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 1 }, { x: 1, y: 2 }, { x: 2, y: 3 }, { x: 3, y: 4 }]}\n        />\n      </Chart>\n    );\n  });\n\n  ","\n  export var withStorySource = require('@storybook/addon-storysource').withStorySource;\n  export var __STORY__ = \"import { palettes } from '@elastic/eui';\\nimport { boolean, color, number, select } from '@storybook/addon-knobs';\\nimport { storiesOf } from '@storybook/react';\\nimport React from 'react';\\nimport { switchTheme } from '../.storybook/theme_service';\\nimport {\\n  AreaSeries,\\n  Axis,\\n  BarSeries,\\n  Chart,\\n  CurveType,\\n  CustomSeriesColorsMap,\\n  DARK_THEME,\\n  DataGenerator,\\n  DataSeriesColorsValues,\\n  DEFAULT_MISSING_COLOR,\\n  getAxisId,\\n  getSpecId,\\n  LIGHT_THEME,\\n  LineSeries,\\n  mergeWithDefaultTheme,\\n  PartialTheme,\\n  Position,\\n  ScaleType,\\n  Settings,\\n} from '../src/';\\nimport * as TestDatasets from '../src/lib/series/utils/test_dataset';\\n\\nfunction range(title: string, min: number, max: number, value: number, groupId?: string, step: number = 1) {\\n  return number(\\n    title,\\n    value,\\n    {\\n      range: true,\\n      min,\\n      max,\\n      step,\\n    },\\n    groupId\\n  );\\n}\\n\\nfunction generateLineSeriesStyleKnobs(groupName: string) {\\n  return {\\n    line: {\\n      stroke: DEFAULT_MISSING_COLOR,\\n      strokeWidth: range(`line.strokeWidth (${groupName})`, 0, 10, 1, groupName),\\n      visible: boolean(`line.visible (${groupName})`, true, groupName),\\n      opacity: range(`line.opacity (${groupName})`, 0, 1, 1, groupName, 0.01),\\n    },\\n    border: {\\n      stroke: 'gray',\\n      strokeWidth: 2,\\n      visible: false,\\n    },\\n    point: {\\n      visible: boolean(`point.visible (${groupName})`, true, groupName),\\n      radius: range(`point.radius (${groupName})`, 0, 20, 1, groupName, 0.5),\\n      opacity: range(`point.opacity (${groupName})`, 0, 1, 1, groupName, 0.01),\\n      stroke: '',\\n      strokeWidth: 0.5,\\n    },\\n  };\\n}\\n\\nfunction generateAreaSeriesStyleKnobs(groupName: string) {\\n  return {\\n    ...generateLineSeriesStyleKnobs(groupName),\\n    area: {\\n      fill: DEFAULT_MISSING_COLOR,\\n      visible: boolean(`area.visible (${groupName})`, true, groupName),\\n      opacity: range(`area.opacity ${groupName}`, 0, 1, 1, groupName, 0.01),\\n    },\\n  };\\n}\\n\\nconst dg = new DataGenerator();\\nconst data1 = dg.generateGroupedSeries(40, 4);\\nconst data2 = dg.generateSimpleSeries(40);\\nconst data3 = dg.generateSimpleSeries(40);\\n\\nstoriesOf('Stylings', module)\\n  .add('margins and paddings', () => {\\n    const theme: PartialTheme = {\\n      chartMargins: {\\n        left: range('margin left', 0, 50, 10),\\n        right: range('margin right', 0, 50, 10),\\n        top: range('margin top', 0, 50, 10),\\n        bottom: range('margin bottom', 0, 50, 10),\\n      },\\n      chartPaddings: {\\n        left: range('padding left', 0, 50, 10),\\n        right: range('padding right', 0, 50, 10),\\n        top: range('padding top', 0, 50, 10),\\n        bottom: range('padding bottom', 0, 50, 10),\\n      },\\n      scales: {\\n        barsPadding: range('bar padding', 0, 1, 0.1, undefined, 0.01),\\n      },\\n    };\\n    const customTheme = mergeWithDefaultTheme(theme, LIGHT_THEME);\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings\\n          theme={customTheme}\\n          debug={boolean('debug', true)}\\n          showLegend={true}\\n          legendPosition={Position.Right}\\n        />\\n        <Axis\\n          id={getAxisId('bottom')}\\n          position={Position.Bottom}\\n          title={'Bottom axis'}\\n          showOverlappingTicks={true}\\n          showGridLines={boolean('show bottom axis grid lines', false)}\\n        />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n          showGridLines={boolean('show left axis grid lines', false)}\\n        />\\n        <Axis\\n          id={getAxisId('top')}\\n          position={Position.Top}\\n          title={'Top axis'}\\n          showOverlappingTicks={true}\\n          showGridLines={boolean('show top axis grid lines', false)}\\n        />\\n        <Axis\\n          id={getAxisId('right')}\\n          title={'Right axis'}\\n          position={Position.Right}\\n          tickFormat={d => Number(d).toFixed(2)}\\n          showGridLines={boolean('show right axis grid lines', false)}\\n        />\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('axis', () => {\\n    const theme: PartialTheme = {\\n      axes: {\\n        axisTitleStyle: {\\n          fill: color('titleFill', '#333', 'Axis Title'),\\n          fontSize: range('titleFontSize', 0, 40, 12, 'Axis Title'),\\n          fontStyle: 'bold',\\n          fontFamily: `'Open Sans', Helvetica, Arial, sans-serif`,\\n          padding: range('titlePadding', 0, 40, 5, 'Axis Title'),\\n        },\\n        axisLineStyle: {\\n          stroke: color('axisLinecolor', '#333', 'Axis Line'),\\n          strokeWidth: range('axisLineWidth', 0, 5, 1, 'Axis Line'),\\n        },\\n        tickLabelStyle: {\\n          fill: color('tickFill', '#333', 'Tick Label'),\\n          fontSize: range('tickFontSize', 0, 40, 10, 'Tick Label'),\\n          fontFamily: `'Open Sans', Helvetica, Arial, sans-serif`,\\n          fontStyle: 'normal',\\n          padding: 0,\\n        },\\n        tickLineStyle: {\\n          stroke: color('tickLineColor', '#333', 'Tick Line'),\\n          strokeWidth: range('tickLineWidth', 0, 5, 1, 'Tick Line'),\\n        },\\n      },\\n    };\\n    const customTheme = mergeWithDefaultTheme(theme, LIGHT_THEME);\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings\\n          theme={customTheme}\\n          debug={boolean('debug', true)}\\n          rotation={select('rotation', { '0': 0, '90': 90, '-90': -90, '180': 180 }, 0)}\\n        />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('theme/style', () => {\\n    const theme: PartialTheme = {\\n      chartMargins: {\\n        left: range('margin left', 0, 50, 10, 'Margins'),\\n        right: range('margin right', 0, 50, 10, 'Margins'),\\n        top: range('margin top', 0, 50, 10, 'Margins'),\\n        bottom: range('margin bottom', 0, 50, 10, 'Margins'),\\n      },\\n      chartPaddings: {\\n        left: range('padding left', 0, 50, 10, 'Paddings'),\\n        right: range('padding right', 0, 50, 10, 'Paddings'),\\n        top: range('padding top', 0, 50, 10, 'Paddings'),\\n        bottom: range('padding bottom', 0, 50, 10, 'Paddings'),\\n      },\\n      lineSeriesStyle: {\\n        line: {\\n          stroke: DEFAULT_MISSING_COLOR,\\n          strokeWidth: range('lineStrokeWidth', 0, 10, 1, 'line'),\\n          visible: boolean('lineVisible', true, 'line'),\\n        },\\n        border: {\\n          stroke: 'gray',\\n          strokeWidth: 2,\\n          visible: false,\\n          // not already customizeable\\n          // stroke: color('lBorderStroke', 'gray', 'line'),\\n          // strokeWidth: range('lBorderStrokeWidth', 0, 10, 2, 'line'),\\n          // visible: boolean('lBorderVisible', false, 'line'),\\n        },\\n        point: {\\n          visible: boolean('linePointVisible', true, 'line'),\\n          radius: range('linePointRadius', 0, 20, 1, 'line', 0.5),\\n          // not customizable\\n          stroke: 'red',\\n          strokeWidth: range('linePointStrokeWidth', 0, 20, 0.5, 'line'),\\n          opacity: range('linePointOpacity', 0, 1, 1, 'line', 0.01),\\n        },\\n      },\\n      areaSeriesStyle: {\\n        area: {\\n          // not already customizeable\\n          fill: DEFAULT_MISSING_COLOR,\\n          visible: boolean('aAreaVisible', true, 'area'),\\n          opacity: range('aAreaOpacity', 0, 1, 1, 'area'),\\n        },\\n        line: {\\n          // not already customizeable\\n          stroke: DEFAULT_MISSING_COLOR,\\n          strokeWidth: range('aStrokeWidth', 0, 10, 1, 'area'),\\n          visible: boolean('aLineVisible', true, 'area'),\\n        },\\n        border: {\\n          stroke: 'gray',\\n          strokeWidth: 2,\\n          visible: false,\\n          // not already customizeable\\n          // stroke: color('aBorderStroke', 'gray', 'area'),\\n          // strokeWidth: range('aBorderStrokeWidth', 0, 10, 2, 'area'),\\n          // visible: boolean('aBorderVisible', false, 'area'),\\n        },\\n        point: {\\n          visible: boolean('aPointVisible', true, 'area'),\\n          radius: range('aPointRadius', 0, 20, 1, 'area'),\\n          stroke: color('aPointStroke', 'white', 'area'),\\n          strokeWidth: range('aPointStrokeWidth', 0, 20, 0.5, 'area'),\\n          opacity: range('aPointOpacity', 0, 1, 0.01, 'area'),\\n        },\\n      },\\n      barSeriesStyle: {\\n        border: {\\n          stroke: color('bBorderStroke', 'white', 'bar'),\\n          strokeWidth: range('bStrokeWidth', 0, 10, 1, 'bar'),\\n          visible: boolean('bBorderVisible', true, 'bar'),\\n        },\\n      },\\n      sharedStyle: {\\n        default: {\\n          opacity: range('sOpacity', 0, 1, 1, 'Shared', 0.05),\\n        },\\n        highlighted: {\\n          opacity: range('sHighlighted', 0, 1, 1, 'Shared', 0.05),\\n        },\\n        unhighlighted: {\\n          opacity: range('sUnhighlighted', 0, 1, 0.25, 'Shared', 0.05),\\n        },\\n      },\\n      colors: {\\n        vizColors: select(\\n          'vizColors',\\n          {\\n            colorBlind: palettes.euiPaletteColorBlind.colors,\\n            darkBackground: palettes.euiPaletteForDarkBackground.colors,\\n            lightBackground: palettes.euiPaletteForLightBackground.colors,\\n            forStatus: palettes.euiPaletteForStatus.colors,\\n          },\\n          palettes.euiPaletteColorBlind.colors,\\n          'Colors'\\n        ),\\n        defaultVizColor: DEFAULT_MISSING_COLOR,\\n      },\\n    };\\n\\n    const darkmode = boolean('darkmode', false, 'Colors');\\n    const className = darkmode ? 'story-chart-dark' : 'story-chart';\\n    const defaultTheme = darkmode ? DARK_THEME : LIGHT_THEME;\\n    const customTheme = mergeWithDefaultTheme(theme, defaultTheme);\\n    switchTheme(darkmode ? 'dark' : 'light');\\n\\n    return (\\n      <Chart className={className}>\\n        <Settings\\n          theme={customTheme}\\n          debug={boolean('debug', false)}\\n          showLegend={true}\\n          legendPosition={Position.Right}\\n        />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n        <Axis id={getAxisId('top')} position={Position.Top} title={'Top axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('right')}\\n          title={'Right axis'}\\n          position={Position.Right}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          splitSeriesAccessors={['g']}\\n          stackAccessors={['x']}\\n          data={data1}\\n        />\\n        <LineSeries\\n          id={getSpecId('lines')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          curve={CurveType.CURVE_MONOTONE_X}\\n          data={data2}\\n        />\\n        <AreaSeries\\n          id={getSpecId('areas')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          curve={CurveType.CURVE_MONOTONE_X}\\n          data={data3}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('custom series colors through spec props', () => {\\n    const barCustomSeriesColors: CustomSeriesColorsMap = new Map();\\n    const barDataSeriesColorValues: DataSeriesColorsValues = {\\n      colorValues: ['cloudflare.com', 'direct-cdn', 'y2'],\\n      specId: getSpecId('bars'),\\n    };\\n\\n    const lineCustomSeriesColors: CustomSeriesColorsMap = new Map();\\n    const lineDataSeriesColorValues: DataSeriesColorsValues = {\\n      colorValues: [],\\n      specId: getSpecId('lines'),\\n    };\\n\\n    const customBarColorKnob = color('barDataSeriesColor', '#000');\\n    const customLineColorKnob = color('lineDataSeriesColor', '#ff0');\\n    barCustomSeriesColors.set(barDataSeriesColorValues, customBarColorKnob);\\n    lineCustomSeriesColors.set(lineDataSeriesColorValues, customLineColorKnob);\\n\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} />\\n        <Axis\\n          id={getAxisId('bottom')}\\n          position={Position.Bottom}\\n          // title={'Bottom axis'}\\n          showOverlappingTicks={true}\\n        />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y1', 'y2']}\\n          splitSeriesAccessors={['g1', 'g2']}\\n          customSeriesColors={barCustomSeriesColors}\\n          data={TestDatasets.BARCHART_2Y2G}\\n        />\\n        <LineSeries\\n          id={getSpecId('lines')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          customSeriesColors={lineCustomSeriesColors}\\n          data={[{ x: 0, y: 3 }, { x: 1, y: 2 }, { x: 2, y: 4 }, { x: 3, y: 10 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('custom series styles: bars', () => {\\n    const useOnlyChartTheme = boolean('ignore series style (use only chart theme)', false, 'chartTheme');\\n\\n    const barSeriesStyle1 = useOnlyChartTheme\\n      ? undefined\\n      : {\\n          border: {\\n            stroke: color('borderStroke 1', 'white', 'group1'),\\n            strokeWidth: range('strokeWidth 1', 0, 10, 1, 'group1'),\\n            visible: boolean('borderVisible 1', true, 'group1'),\\n          },\\n          opacity: range('opacity 1', 0, 1, 1, 'group1', 0.1),\\n        };\\n\\n    const barSeriesStyle2 = useOnlyChartTheme\\n      ? undefined\\n      : {\\n          border: {\\n            stroke: color('borderStroke 2', 'white', 'group2'),\\n            strokeWidth: range('strokeWidth 2', 0, 10, 1, 'group2'),\\n            visible: boolean('borderVisible 2', true, 'group2'),\\n          },\\n          opacity: range('opacity 2', 0, 1, 1, 'group2', 0.1),\\n        };\\n\\n    const chartTheme = {\\n      ...LIGHT_THEME,\\n      barSeriesStyle: {\\n        border: {\\n          stroke: color('theme borderStroke', 'white', 'chartTheme'),\\n          strokeWidth: range('theme strokeWidth', 0, 10, 1, 'chartTheme'),\\n          visible: boolean('theme borderVisible', true, 'chartTheme'),\\n        },\\n      },\\n    };\\n\\n    const dataset1 = TestDatasets.BARCHART_2Y2G.filter(data => data.g1 === 'cdn.google.com');\\n    const dataset2 = TestDatasets.BARCHART_2Y2G.filter(data => data.g1 === 'cloudflare.com');\\n    const dataset3 = TestDatasets.BARCHART_2Y2G.filter(data => data.g2 === 'indirect-cdn');\\n\\n    return (\\n      <Chart renderer=\\\"canvas\\\" className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} theme={chartTheme} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y1', 'y2']}\\n          splitSeriesAccessors={['g1', 'g2']}\\n          data={dataset1}\\n          yScaleToDataExtent={false}\\n          barSeriesStyle={barSeriesStyle1}\\n          name={'bars 1'}\\n        />\\n        <BarSeries\\n          id={getSpecId('bars2')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y1', 'y2']}\\n          splitSeriesAccessors={['g1', 'g2']}\\n          data={dataset2}\\n          yScaleToDataExtent={false}\\n          barSeriesStyle={barSeriesStyle2}\\n          name={'bars 2'}\\n        />\\n        <BarSeries\\n          id={getSpecId('bars3')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y1', 'y2']}\\n          splitSeriesAccessors={['g1', 'g2']}\\n          data={dataset3}\\n          yScaleToDataExtent={false}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('custom series styles: lines', () => {\\n    const useOnlyChartTheme = boolean('ignore series style (use only chart theme)', false, 'chartTheme');\\n    const lineSeriesStyle1 = useOnlyChartTheme ? undefined : generateLineSeriesStyleKnobs('lines1');\\n    const lineSeriesStyle2 = useOnlyChartTheme ? undefined : generateLineSeriesStyleKnobs('lines2');\\n\\n    const chartTheme = {\\n      ...LIGHT_THEME,\\n      lineSeriesStyle: generateLineSeriesStyleKnobs('chartTheme'),\\n    };\\n\\n    const dataset1 = [{ x: 0, y: 3 }, { x: 1, y: 2 }, { x: 2, y: 4 }, { x: 3, y: 10 }];\\n    const dataset2 = dataset1.map(datum => ({ ...datum, y: datum.y - 1 }));\\n    const dataset3 = dataset1.map(datum => ({ ...datum, y: datum.y - 2 }));\\n\\n    return (\\n      <Chart renderer=\\\"canvas\\\" className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} theme={chartTheme} />\\n        <Axis\\n          id={getAxisId('bottom')}\\n          position={Position.Bottom}\\n          // title={'Bottom axis'}\\n          showOverlappingTicks={true}\\n        />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n        <LineSeries\\n          id={getSpecId('lines1')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={dataset1}\\n          yScaleToDataExtent={false}\\n          lineSeriesStyle={lineSeriesStyle1}\\n        />\\n        <LineSeries\\n          id={getSpecId('lines2')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={dataset2}\\n          yScaleToDataExtent={false}\\n          lineSeriesStyle={lineSeriesStyle2}\\n        />\\n        <LineSeries\\n          id={getSpecId('lines3')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={dataset3}\\n          yScaleToDataExtent={false}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('custom series styles: area', () => {\\n    const chartTheme = {\\n      ...LIGHT_THEME,\\n      areaSeriesStyle: generateAreaSeriesStyleKnobs('chartTheme'),\\n    };\\n\\n    const useOnlyChartTheme = boolean('ignore series style (use only chart theme)', false, 'chartTheme');\\n\\n    const dataset1 = [{ x: 0, y: 3 }, { x: 1, y: 2 }, { x: 2, y: 4 }, { x: 3, y: 10 }];\\n    const dataset2 = dataset1.map(datum => ({ ...datum, y: datum.y - 1 }));\\n    const dataset3 = dataset1.map(datum => ({ ...datum, y: datum.y - 2 }));\\n\\n    const areaStyle1 = useOnlyChartTheme ? undefined : generateAreaSeriesStyleKnobs('area1');\\n    const areaStyle2 = useOnlyChartTheme ? undefined : generateAreaSeriesStyleKnobs('area2');\\n\\n    return (\\n      <Chart renderer=\\\"canvas\\\" className={'story-chart'}>\\n        <Settings showLegend={true} legendPosition={Position.Right} theme={chartTheme} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'Bottom axis'} showOverlappingTicks={true} />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n        />\\n        <AreaSeries\\n          id={getSpecId('area1')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={dataset1}\\n          yScaleToDataExtent={false}\\n          areaSeriesStyle={areaStyle1}\\n        />\\n        <AreaSeries\\n          id={getSpecId('area2')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={dataset2}\\n          yScaleToDataExtent={false}\\n          areaSeriesStyle={areaStyle2}\\n        />\\n        <AreaSeries\\n          id={getSpecId('area3')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={dataset3}\\n          yScaleToDataExtent={false}\\n        />\\n      </Chart>\\n    );\\n  });\\n\";\n  export var __ADDS_MAP__ = {\"Stylings@custom series styles: area\":{\"startLoc\":{\"col\":7,\"line\":569},\"endLoc\":{\"col\":3,\"line\":625}},\"Stylings@custom series styles: lines\":{\"startLoc\":{\"col\":7,\"line\":508},\"endLoc\":{\"col\":3,\"line\":568}},\"Stylings@custom series styles: bars\":{\"startLoc\":{\"col\":7,\"line\":420},\"endLoc\":{\"col\":3,\"line\":507}},\"Stylings@custom series colors through spec props\":{\"startLoc\":{\"col\":7,\"line\":364},\"endLoc\":{\"col\":3,\"line\":419}},\"Stylings@theme/style\":{\"startLoc\":{\"col\":7,\"line\":203},\"endLoc\":{\"col\":3,\"line\":363}},\"Stylings@axis\":{\"startLoc\":{\"col\":7,\"line\":149},\"endLoc\":{\"col\":3,\"line\":202}},\"Stylings@margins and paddings\":{\"startLoc\":{\"col\":7,\"line\":83},\"endLoc\":{\"col\":3,\"line\":148}}};\n  \n  import { palettes } from '@elastic/eui';\nimport { boolean, color, number, select } from '@storybook/addon-knobs';\nimport { storiesOf } from '@storybook/react';\nimport React from 'react';\nimport { switchTheme } from '../.storybook/theme_service';\nimport {\n  AreaSeries,\n  Axis,\n  BarSeries,\n  Chart,\n  CurveType,\n  CustomSeriesColorsMap,\n  DARK_THEME,\n  DataGenerator,\n  DataSeriesColorsValues,\n  DEFAULT_MISSING_COLOR,\n  getAxisId,\n  getSpecId,\n  LIGHT_THEME,\n  LineSeries,\n  mergeWithDefaultTheme,\n  PartialTheme,\n  Position,\n  ScaleType,\n  Settings,\n} from '../src/';\nimport * as TestDatasets from '../src/lib/series/utils/test_dataset';\n\nfunction range(\n  title: string,\n  min: number,\n  max: number,\n  value: number,\n  groupId?: string,\n  step: number = 1,\n) {\n  return number(\n    title,\n    value,\n    {\n      range: true,\n      min,\n      max,\n      step,\n    },\n    groupId,\n  );\n}\n\nfunction generateLineSeriesStyleKnobs(groupName: string) {\n  return {\n    line: {\n      stroke: DEFAULT_MISSING_COLOR,\n      strokeWidth: range(`line.strokeWidth (${groupName})`, 0, 10, 1, groupName),\n      visible: boolean(`line.visible (${groupName})`, true, groupName),\n      opacity: range(`line.opacity (${groupName})`, 0, 1, 1, groupName, 0.01),\n    },\n    border: {\n      stroke: 'gray',\n      strokeWidth: 2,\n      visible: false,\n    },\n    point: {\n      visible: boolean(`point.visible (${groupName})`, true, groupName),\n      radius: range(`point.radius (${groupName})`, 0, 20, 1, groupName, 0.5),\n      opacity: range(`point.opacity (${groupName})`, 0, 1, 1, groupName, 0.01),\n      stroke: '',\n      strokeWidth: 0.5,\n    },\n  };\n}\n\nfunction generateAreaSeriesStyleKnobs(groupName: string) {\n  return {\n    ...generateLineSeriesStyleKnobs(groupName),\n    area: {\n      fill: DEFAULT_MISSING_COLOR,\n      visible: boolean(`area.visible (${groupName})`, true, groupName),\n      opacity: range(`area.opacity ${groupName}`, 0, 1, 1, groupName, 0.01),\n    },\n  };\n}\n\nconst dg = new DataGenerator();\nconst data1 = dg.generateGroupedSeries(40, 4);\nconst data2 = dg.generateSimpleSeries(40);\nconst data3 = dg.generateSimpleSeries(40);\n\nstoriesOf('Stylings', module).addDecorator(withStorySource(__STORY__, __ADDS_MAP__))\n  .add('margins and paddings', () => {\n    const theme: PartialTheme = {\n      chartMargins: {\n        left: range('margin left', 0, 50, 10),\n        right: range('margin right', 0, 50, 10),\n        top: range('margin top', 0, 50, 10),\n        bottom: range('margin bottom', 0, 50, 10),\n      },\n      chartPaddings: {\n        left: range('padding left', 0, 50, 10),\n        right: range('padding right', 0, 50, 10),\n        top: range('padding top', 0, 50, 10),\n        bottom: range('padding bottom', 0, 50, 10),\n      },\n      scales: {\n        barsPadding: range('bar padding', 0, 1, 0.1, undefined, 0.01),\n      },\n    };\n    const customTheme = mergeWithDefaultTheme(theme, LIGHT_THEME);\n    return (\n      <Chart className={'story-chart'}>\n        <Settings\n          theme={customTheme}\n          debug={boolean('debug', true)}\n          showLegend={true}\n          legendPosition={Position.Right}\n        />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n          showGridLines={boolean('show bottom axis grid lines', false)}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n          showGridLines={boolean('show left axis grid lines', false)}\n        />\n        <Axis\n          id={getAxisId('top')}\n          position={Position.Top}\n          title={'Top axis'}\n          showOverlappingTicks={true}\n          showGridLines={boolean('show top axis grid lines', false)}\n        />\n        <Axis\n          id={getAxisId('right')}\n          title={'Right axis'}\n          position={Position.Right}\n          tickFormat={(d) => Number(d).toFixed(2)}\n          showGridLines={boolean('show right axis grid lines', false)}\n        />\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('axis', () => {\n    const theme: PartialTheme = {\n      axes: {\n        axisTitleStyle: {\n          fill: color('titleFill', '#333', 'Axis Title'),\n          fontSize: range('titleFontSize', 0, 40, 12, 'Axis Title'),\n          fontStyle: 'bold',\n          fontFamily: `'Open Sans', Helvetica, Arial, sans-serif`,\n          padding: range('titlePadding', 0, 40, 5, 'Axis Title'),\n        },\n        axisLineStyle: {\n          stroke: color('axisLinecolor', '#333', 'Axis Line'),\n          strokeWidth: range('axisLineWidth', 0, 5, 1, 'Axis Line'),\n        },\n        tickLabelStyle: {\n          fill: color('tickFill', '#333', 'Tick Label'),\n          fontSize: range('tickFontSize', 0, 40, 10, 'Tick Label'),\n          fontFamily: `'Open Sans', Helvetica, Arial, sans-serif`,\n          fontStyle: 'normal',\n          padding: 0,\n        },\n        tickLineStyle: {\n          stroke: color('tickLineColor', '#333', 'Tick Line'),\n          strokeWidth: range('tickLineWidth', 0, 5, 1, 'Tick Line'),\n        },\n      },\n    };\n    const customTheme = mergeWithDefaultTheme(theme, LIGHT_THEME);\n    return (\n      <Chart className={'story-chart'}>\n        <Settings\n          theme={customTheme}\n          debug={boolean('debug', true)}\n          rotation={select('rotation', { '0': 0, '90': 90, '-90': -90, '180': 180 }, 0)}\n        />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('theme/style', () => {\n    const theme: PartialTheme = {\n      chartMargins: {\n        left: range('margin left', 0, 50, 10, 'Margins'),\n        right: range('margin right', 0, 50, 10, 'Margins'),\n        top: range('margin top', 0, 50, 10, 'Margins'),\n        bottom: range('margin bottom', 0, 50, 10, 'Margins'),\n      },\n      chartPaddings: {\n        left: range('padding left', 0, 50, 10, 'Paddings'),\n        right: range('padding right', 0, 50, 10, 'Paddings'),\n        top: range('padding top', 0, 50, 10, 'Paddings'),\n        bottom: range('padding bottom', 0, 50, 10, 'Paddings'),\n      },\n      lineSeriesStyle: {\n        line: {\n          stroke: DEFAULT_MISSING_COLOR,\n          strokeWidth: range('lineStrokeWidth', 0, 10, 1, 'line'),\n          visible: boolean('lineVisible', true, 'line'),\n        },\n        border: {\n          stroke: 'gray',\n          strokeWidth: 2,\n          visible: false,\n          // not already customizeable\n          // stroke: color('lBorderStroke', 'gray', 'line'),\n          // strokeWidth: range('lBorderStrokeWidth', 0, 10, 2, 'line'),\n          // visible: boolean('lBorderVisible', false, 'line'),\n        },\n        point: {\n          visible: boolean('linePointVisible', true, 'line'),\n          radius: range('linePointRadius', 0, 20, 1, 'line', 0.5),\n          // not customizable\n          stroke: 'red',\n          strokeWidth: range('linePointStrokeWidth', 0, 20, 0.5, 'line'),\n          opacity: range('linePointOpacity', 0, 1, 1, 'line', 0.01),\n        },\n      },\n      areaSeriesStyle: {\n        area: {\n          // not already customizeable\n          fill: DEFAULT_MISSING_COLOR,\n          visible: boolean('aAreaVisible', true, 'area'),\n          opacity: range('aAreaOpacity', 0, 1, 1, 'area'),\n        },\n        line: {\n          // not already customizeable\n          stroke: DEFAULT_MISSING_COLOR,\n          strokeWidth: range('aStrokeWidth', 0, 10, 1, 'area'),\n          visible: boolean('aLineVisible', true, 'area'),\n        },\n        border: {\n          stroke: 'gray',\n          strokeWidth: 2,\n          visible: false,\n          // not already customizeable\n          // stroke: color('aBorderStroke', 'gray', 'area'),\n          // strokeWidth: range('aBorderStrokeWidth', 0, 10, 2, 'area'),\n          // visible: boolean('aBorderVisible', false, 'area'),\n        },\n        point: {\n          visible: boolean('aPointVisible', true, 'area'),\n          radius: range('aPointRadius', 0, 20, 1, 'area'),\n          stroke: color('aPointStroke', 'white', 'area'),\n          strokeWidth: range('aPointStrokeWidth', 0, 20, 0.5, 'area'),\n          opacity: range('aPointOpacity', 0, 1, 0.01, 'area'),\n        },\n      },\n      barSeriesStyle: {\n        border: {\n          stroke: color('bBorderStroke', 'white', 'bar'),\n          strokeWidth: range('bStrokeWidth', 0, 10, 1, 'bar'),\n          visible: boolean('bBorderVisible', true, 'bar'),\n        },\n      },\n      sharedStyle: {\n        default: {\n          opacity: range('sOpacity', 0, 1, 1, 'Shared', 0.05),\n        },\n        highlighted: {\n          opacity: range('sHighlighted', 0, 1, 1, 'Shared', 0.05),\n        },\n        unhighlighted: {\n          opacity: range('sUnhighlighted', 0, 1, 0.25, 'Shared', 0.05),\n        },\n      },\n      colors: {\n        vizColors: select(\n          'vizColors',\n          {\n            colorBlind: palettes.euiPaletteColorBlind.colors,\n            darkBackground: palettes.euiPaletteForDarkBackground.colors,\n            lightBackground: palettes.euiPaletteForLightBackground.colors,\n            forStatus: palettes.euiPaletteForStatus.colors,\n          },\n          palettes.euiPaletteColorBlind.colors,\n          'Colors',\n        ),\n        defaultVizColor: DEFAULT_MISSING_COLOR,\n      },\n    };\n\n    const darkmode = boolean('darkmode', false, 'Colors');\n    const className = darkmode ? 'story-chart-dark' : 'story-chart';\n    const defaultTheme = darkmode ? DARK_THEME : LIGHT_THEME;\n    const customTheme = mergeWithDefaultTheme(theme, defaultTheme);\n    switchTheme(darkmode ? 'dark' : 'light');\n\n    return (\n      <Chart className={className}>\n        <Settings\n          theme={customTheme}\n          debug={boolean('debug', false)}\n          showLegend={true}\n          legendPosition={Position.Right}\n        />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n        <Axis\n          id={getAxisId('top')}\n          position={Position.Top}\n          title={'Top axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('right')}\n          title={'Right axis'}\n          position={Position.Right}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          splitSeriesAccessors={['g']}\n          stackAccessors={['x']}\n          data={data1}\n        />\n        <LineSeries\n          id={getSpecId('lines')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          curve={CurveType.CURVE_MONOTONE_X}\n          data={data2}\n        />\n        <AreaSeries\n          id={getSpecId('areas')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          curve={CurveType.CURVE_MONOTONE_X}\n          data={data3}\n        />\n      </Chart>\n    );\n  })\n  .add('custom series colors through spec props', () => {\n    const barCustomSeriesColors: CustomSeriesColorsMap = new Map();\n    const barDataSeriesColorValues: DataSeriesColorsValues = {\n      colorValues: ['cloudflare.com', 'direct-cdn', 'y2'],\n      specId: getSpecId('bars'),\n    };\n\n    const lineCustomSeriesColors: CustomSeriesColorsMap = new Map();\n    const lineDataSeriesColorValues: DataSeriesColorsValues = {\n      colorValues: [],\n      specId: getSpecId('lines'),\n    };\n\n    const customBarColorKnob = color('barDataSeriesColor', '#000');\n    const customLineColorKnob = color('lineDataSeriesColor', '#ff0');\n    barCustomSeriesColors.set(barDataSeriesColorValues, customBarColorKnob);\n    lineCustomSeriesColors.set(lineDataSeriesColorValues, customLineColorKnob);\n\n    return (\n      <Chart className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          // title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y1', 'y2']}\n          splitSeriesAccessors={['g1', 'g2']}\n          customSeriesColors={barCustomSeriesColors}\n          data={TestDatasets.BARCHART_2Y2G}\n        />\n        <LineSeries\n          id={getSpecId('lines')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          customSeriesColors={lineCustomSeriesColors}\n          data={[{ x: 0, y: 3 }, { x: 1, y: 2 }, { x: 2, y: 4 }, { x: 3, y: 10 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('custom series styles: bars', () => {\n    const useOnlyChartTheme = boolean(\n      'ignore series style (use only chart theme)',\n      false,\n      'chartTheme',\n    );\n\n    const barSeriesStyle1 = useOnlyChartTheme\n      ? undefined\n      : {\n          border: {\n            stroke: color('borderStroke 1', 'white', 'group1'),\n            strokeWidth: range('strokeWidth 1', 0, 10, 1, 'group1'),\n            visible: boolean('borderVisible 1', true, 'group1'),\n          },\n          opacity: range('opacity 1', 0, 1, 1, 'group1', 0.1),\n        };\n\n    const barSeriesStyle2 = useOnlyChartTheme\n      ? undefined\n      : {\n          border: {\n            stroke: color('borderStroke 2', 'white', 'group2'),\n            strokeWidth: range('strokeWidth 2', 0, 10, 1, 'group2'),\n            visible: boolean('borderVisible 2', true, 'group2'),\n          },\n          opacity: range('opacity 2', 0, 1, 1, 'group2', 0.1),\n        };\n\n    const chartTheme = {\n      ...LIGHT_THEME,\n      barSeriesStyle: {\n        border: {\n          stroke: color('theme borderStroke', 'white', 'chartTheme'),\n          strokeWidth: range('theme strokeWidth', 0, 10, 1, 'chartTheme'),\n          visible: boolean('theme borderVisible', true, 'chartTheme'),\n        },\n      },\n    };\n\n    const dataset1 = TestDatasets.BARCHART_2Y2G.filter((data) => data.g1 === 'cdn.google.com');\n    const dataset2 = TestDatasets.BARCHART_2Y2G.filter((data) => data.g1 === 'cloudflare.com');\n    const dataset3 = TestDatasets.BARCHART_2Y2G.filter((data) => data.g2 === 'indirect-cdn');\n\n    return (\n      <Chart renderer=\"canvas\" className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} theme={chartTheme} />\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} showOverlappingTicks={true} />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y1', 'y2']}\n          splitSeriesAccessors={['g1', 'g2']}\n          data={dataset1}\n          yScaleToDataExtent={false}\n          barSeriesStyle={barSeriesStyle1}\n          name={'bars 1'}\n        />\n        <BarSeries\n          id={getSpecId('bars2')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y1', 'y2']}\n          splitSeriesAccessors={['g1', 'g2']}\n          data={dataset2}\n          yScaleToDataExtent={false}\n          barSeriesStyle={barSeriesStyle2}\n          name={'bars 2'}\n        />\n        <BarSeries\n          id={getSpecId('bars3')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y1', 'y2']}\n          splitSeriesAccessors={['g1', 'g2']}\n          data={dataset3}\n          yScaleToDataExtent={false}\n        />\n      </Chart>\n    );\n  })\n  .add('custom series styles: lines', () => {\n    const useOnlyChartTheme = boolean(\n      'ignore series style (use only chart theme)',\n      false,\n      'chartTheme',\n    );\n    const lineSeriesStyle1 = useOnlyChartTheme ? undefined : generateLineSeriesStyleKnobs('lines1');\n    const lineSeriesStyle2 = useOnlyChartTheme ? undefined : generateLineSeriesStyleKnobs('lines2');\n\n    const chartTheme = {\n      ...LIGHT_THEME,\n      lineSeriesStyle: generateLineSeriesStyleKnobs('chartTheme'),\n    };\n\n    const dataset1 = [{ x: 0, y: 3 }, { x: 1, y: 2 }, { x: 2, y: 4 }, { x: 3, y: 10 }];\n    const dataset2 = dataset1.map((datum) => ({ ...datum, y: datum.y - 1 }));\n    const dataset3 = dataset1.map((datum) => ({ ...datum, y: datum.y - 2 }));\n\n    return (\n      <Chart renderer=\"canvas\" className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} theme={chartTheme} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          // title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n        <LineSeries\n          id={getSpecId('lines1')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={dataset1}\n          yScaleToDataExtent={false}\n          lineSeriesStyle={lineSeriesStyle1}\n        />\n        <LineSeries\n          id={getSpecId('lines2')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={dataset2}\n          yScaleToDataExtent={false}\n          lineSeriesStyle={lineSeriesStyle2}\n        />\n        <LineSeries\n          id={getSpecId('lines3')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={dataset3}\n          yScaleToDataExtent={false}\n        />\n      </Chart>\n    );\n  })\n  .add('custom series styles: area', () => {\n    const chartTheme = {\n      ...LIGHT_THEME,\n      areaSeriesStyle: generateAreaSeriesStyleKnobs('chartTheme'),\n    };\n\n    const useOnlyChartTheme = boolean(\n      'ignore series style (use only chart theme)',\n      false,\n      'chartTheme',\n    );\n\n    const dataset1 = [{ x: 0, y: 3 }, { x: 1, y: 2 }, { x: 2, y: 4 }, { x: 3, y: 10 }];\n    const dataset2 = dataset1.map((datum) => ({ ...datum, y: datum.y - 1 }));\n    const dataset3 = dataset1.map((datum) => ({ ...datum, y: datum.y - 2 }));\n\n    const areaStyle1 = useOnlyChartTheme ? undefined : generateAreaSeriesStyleKnobs('area1');\n    const areaStyle2 = useOnlyChartTheme ? undefined : generateAreaSeriesStyleKnobs('area2');\n\n    return (\n      <Chart renderer=\"canvas\" className={'story-chart'}>\n        <Settings showLegend={true} legendPosition={Position.Right} theme={chartTheme} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n        />\n        <AreaSeries\n          id={getSpecId('area1')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={dataset1}\n          yScaleToDataExtent={false}\n          areaSeriesStyle={areaStyle1}\n        />\n        <AreaSeries\n          id={getSpecId('area2')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={dataset2}\n          yScaleToDataExtent={false}\n          areaSeriesStyle={areaStyle2}\n        />\n        <AreaSeries\n          id={getSpecId('area3')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={dataset3}\n          yScaleToDataExtent={false}\n        />\n      </Chart>\n    );\n  });\n\n  ","\n  export var withStorySource = require('@storybook/addon-storysource').withStorySource;\n  export var __STORY__ = \"import { boolean, color, number } from '@storybook/addon-knobs';\\nimport { storiesOf } from '@storybook/react';\\nimport React from 'react';\\nimport {\\n  Axis,\\n  BarSeries,\\n  Chart,\\n  getAxisId,\\n  getGroupId,\\n  getSpecId,\\n  GridLineConfig,\\n  LineSeries,\\n  Position,\\n  ScaleType,\\n  Settings,\\n} from '../src/';\\n\\nfunction generateGridLineConfig(group: string): GridLineConfig {\\n  const groupId = `${group} axis`;\\n\\n  return {\\n    stroke: color(`${groupId} grid line stroke color`, 'purple', groupId),\\n    strokeWidth: number(\\n      `${groupId} grid line stroke width`,\\n      1,\\n      {\\n        range: true,\\n        min: 0,\\n        max: 10,\\n        step: 1,\\n      },\\n      groupId\\n    ),\\n    opacity: number(\\n      `${groupId} grid line stroke opacity`,\\n      1,\\n      {\\n        range: true,\\n        min: 0,\\n        max: 1,\\n        step: 0.01,\\n      },\\n      groupId\\n    ),\\n    dash: [\\n      number(\\n        `${groupId} grid line dash length`,\\n        1,\\n        {\\n          range: true,\\n          min: 0,\\n          max: 10,\\n          step: 1,\\n        },\\n        groupId\\n      ),\\n      number(\\n        `${groupId} grid line dash spacing`,\\n        1,\\n        {\\n          range: true,\\n          min: 0,\\n          max: 10,\\n          step: 1,\\n        },\\n        groupId\\n      ),\\n    ],\\n  };\\n}\\n\\nstoriesOf('Grids', module)\\n  .add('basic', () => {\\n    const leftAxisGridLineConfig = generateGridLineConfig(Position.Left);\\n    const rightAxisGridLineConfig = generateGridLineConfig(Position.Right);\\n    const topAxisGridLineConfig = generateGridLineConfig(Position.Top);\\n    const bottomAxisGridLineConfig = generateGridLineConfig(Position.Bottom);\\n\\n    return (\\n      <Chart size={[500, 300]} className={'story-chart'}>\\n        <Settings debug={boolean('debug', false)} />\\n        <Axis\\n          id={getAxisId('bottom')}\\n          position={Position.Bottom}\\n          title={'Bottom axis'}\\n          showOverlappingTicks={true}\\n          showGridLines={boolean('show bottom axis grid lines', false, 'bottom axis')}\\n          gridLineStyle={bottomAxisGridLineConfig}\\n        />\\n        <Axis\\n          id={getAxisId('left1')}\\n          title={'Left axis 1'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n          showGridLines={boolean('show left axis grid lines', false, 'left axis')}\\n          gridLineStyle={leftAxisGridLineConfig}\\n        />\\n        <Axis\\n          id={getAxisId('top')}\\n          position={Position.Top}\\n          title={'Top axis'}\\n          showOverlappingTicks={true}\\n          showGridLines={boolean('show top axis grid lines', false, 'top axis')}\\n          gridLineStyle={topAxisGridLineConfig}\\n        />\\n        <Axis\\n          id={getAxisId('right')}\\n          title={'Right axis'}\\n          position={Position.Right}\\n          tickFormat={d => Number(d).toFixed(2)}\\n          showGridLines={boolean('show right axis grid lines', false, 'right axis')}\\n          gridLineStyle={rightAxisGridLineConfig}\\n        />\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n        />\\n        <LineSeries\\n          id={getSpecId('lines')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          groupId={getGroupId('group2')}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          stackAccessors={['x']}\\n          splitSeriesAccessors={['g']}\\n          data={[{ x: 0, y: 3 }, { x: 1, y: 2 }, { x: 2, y: 4 }, { x: 3, y: 10 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('multiple axes with the same position', () => {\\n    const leftAxisGridLineConfig = generateGridLineConfig(Position.Left);\\n    const leftAxisGridLineConfig2 = generateGridLineConfig(`${Position.Left}2`);\\n\\n    return (\\n      <Chart size={[500, 300]} className={'story-chart'}>\\n        <Settings debug={boolean('debug', false)} />\\n        <Axis\\n          id={getAxisId('left1')}\\n          title={'Left axis 1'}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n          showGridLines={boolean('show left axis grid lines', false, 'left axis')}\\n          gridLineStyle={leftAxisGridLineConfig}\\n        />\\n        <Axis\\n          id={getAxisId('left2')}\\n          title={'Left axis 2'}\\n          groupId={getGroupId('group2')}\\n          position={Position.Left}\\n          tickFormat={d => Number(d).toFixed(2)}\\n          showGridLines={boolean('show left axis 2 grid lines', false, 'left2 axis')}\\n          gridLineStyle={leftAxisGridLineConfig2}\\n        />\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n        />\\n        <LineSeries\\n          id={getSpecId('lines')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          groupId={getGroupId('group2')}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          stackAccessors={['x']}\\n          splitSeriesAccessors={['g']}\\n          data={[{ x: 0, y: 3 }, { x: 1, y: 2 }, { x: 2, y: 4 }, { x: 3, y: 10 }]}\\n        />\\n      </Chart>\\n    );\\n  });\\n\";\n  export var __ADDS_MAP__ = {\"Grids@multiple axes with the same position\":{\"startLoc\":{\"col\":7,\"line\":136},\"endLoc\":{\"col\":3,\"line\":181}},\"Grids@basic\":{\"startLoc\":{\"col\":7,\"line\":73},\"endLoc\":{\"col\":3,\"line\":135}}};\n  \n  import { boolean, color, number } from '@storybook/addon-knobs';\nimport { storiesOf } from '@storybook/react';\nimport React from 'react';\nimport {\n  Axis,\n  BarSeries,\n  Chart,\n  getAxisId,\n  getGroupId,\n  getSpecId,\n  GridLineConfig,\n  LineSeries,\n  Position,\n  ScaleType,\n  Settings,\n} from '../src/';\n\nfunction generateGridLineConfig(group: string): GridLineConfig {\n  const groupId = `${group} axis`;\n\n  return {\n    stroke: color(`${groupId} grid line stroke color`, 'purple', groupId),\n    strokeWidth: number(\n      `${groupId} grid line stroke width`,\n      1,\n      {\n        range: true,\n        min: 0,\n        max: 10,\n        step: 1,\n      },\n      groupId,\n    ),\n    opacity: number(\n      `${groupId} grid line stroke opacity`,\n      1,\n      {\n        range: true,\n        min: 0,\n        max: 1,\n        step: 0.01,\n      },\n      groupId,\n    ),\n    dash: [\n      number(\n        `${groupId} grid line dash length`,\n        1,\n        {\n          range: true,\n          min: 0,\n          max: 10,\n          step: 1,\n        },\n        groupId,\n      ),\n      number(\n        `${groupId} grid line dash spacing`,\n        1,\n        {\n          range: true,\n          min: 0,\n          max: 10,\n          step: 1,\n        },\n        groupId,\n      ),\n    ],\n  };\n}\n\nstoriesOf('Grids', module).addDecorator(withStorySource(__STORY__, __ADDS_MAP__))\n  .add('basic', () => {\n    const leftAxisGridLineConfig = generateGridLineConfig(Position.Left);\n    const rightAxisGridLineConfig = generateGridLineConfig(Position.Right);\n    const topAxisGridLineConfig = generateGridLineConfig(Position.Top);\n    const bottomAxisGridLineConfig = generateGridLineConfig(Position.Bottom);\n\n    return (\n      <Chart size={[500, 300]} className={'story-chart'}>\n        <Settings debug={boolean('debug', false)} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'Bottom axis'}\n          showOverlappingTicks={true}\n          showGridLines={boolean('show bottom axis grid lines', false, 'bottom axis')}\n          gridLineStyle={bottomAxisGridLineConfig}\n        />\n        <Axis\n          id={getAxisId('left1')}\n          title={'Left axis 1'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n          showGridLines={boolean('show left axis grid lines', false, 'left axis')}\n          gridLineStyle={leftAxisGridLineConfig}\n        />\n        <Axis\n          id={getAxisId('top')}\n          position={Position.Top}\n          title={'Top axis'}\n          showOverlappingTicks={true}\n          showGridLines={boolean('show top axis grid lines', false, 'top axis')}\n          gridLineStyle={topAxisGridLineConfig}\n        />\n        <Axis\n          id={getAxisId('right')}\n          title={'Right axis'}\n          position={Position.Right}\n          tickFormat={(d) => Number(d).toFixed(2)}\n          showGridLines={boolean('show right axis grid lines', false, 'right axis')}\n          gridLineStyle={rightAxisGridLineConfig}\n        />\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n        />\n        <LineSeries\n          id={getSpecId('lines')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          groupId={getGroupId('group2')}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          stackAccessors={['x']}\n          splitSeriesAccessors={['g']}\n          data={[{ x: 0, y: 3 }, { x: 1, y: 2 }, { x: 2, y: 4 }, { x: 3, y: 10 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('multiple axes with the same position', () => {\n    const leftAxisGridLineConfig = generateGridLineConfig(Position.Left);\n    const leftAxisGridLineConfig2 = generateGridLineConfig(`${Position.Left}2`);\n\n    return (\n      <Chart size={[500, 300]} className={'story-chart'}>\n        <Settings debug={boolean('debug', false)} />\n        <Axis\n          id={getAxisId('left1')}\n          title={'Left axis 1'}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n          showGridLines={boolean('show left axis grid lines', false, 'left axis')}\n          gridLineStyle={leftAxisGridLineConfig}\n        />\n        <Axis\n          id={getAxisId('left2')}\n          title={'Left axis 2'}\n          groupId={getGroupId('group2')}\n          position={Position.Left}\n          tickFormat={(d) => Number(d).toFixed(2)}\n          showGridLines={boolean('show left axis 2 grid lines', false, 'left2 axis')}\n          gridLineStyle={leftAxisGridLineConfig2}\n        />\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n        />\n        <LineSeries\n          id={getSpecId('lines')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          groupId={getGroupId('group2')}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          stackAccessors={['x']}\n          splitSeriesAccessors={['g']}\n          data={[{ x: 0, y: 3 }, { x: 1, y: 2 }, { x: 2, y: 4 }, { x: 3, y: 10 }]}\n        />\n      </Chart>\n    );\n  });\n\n  ","\n  export var withStorySource = require('@storybook/addon-storysource').withStorySource;\n  export var __STORY__ = \"import { EuiIcon } from '@elastic/eui';\\nimport { array, boolean, color, number, select } from '@storybook/addon-knobs';\\nimport { storiesOf } from '@storybook/react';\\nimport React, { CSSProperties } from 'react';\\nimport {\\n  AnnotationDomainTypes,\\n  Axis,\\n  BarSeries,\\n  Chart,\\n  getAnnotationId,\\n  getAxisId,\\n  getSpecId,\\n  LineAnnotation,\\n  LineAnnotationDatum,\\n  LineSeries,\\n  Position,\\n  RectAnnotation,\\n  Rotation,\\n  ScaleType,\\n  Settings,\\n  timeFormatter,\\n} from '../src';\\nimport { KIBANA_METRICS } from '../src/lib/series/utils/test_dataset_kibana';\\n\\nconst dateFormatter = timeFormatter('HH:mm:ss');\\n\\nfunction generateAnnotationData(values: any[]): LineAnnotationDatum[] {\\n  return values.map((value, index) => ({ dataValue: value, details: `detail-${index}` }));\\n}\\n\\nfunction generateTimeAnnotationData(values: any[]): LineAnnotationDatum[] {\\n  return values.map((value, index) => ({\\n    dataValue: value,\\n    details: `detail-${index}`,\\n    header: dateFormatter(value),\\n  }));\\n}\\n\\nstoriesOf('Annotations', module)\\n  .add('[line] basic xDomain continuous', () => {\\n    const data = array('data values', [2.5, 7.2]);\\n    const dataValues = generateAnnotationData(data);\\n\\n    const style = {\\n      line: {\\n        strokeWidth: 3,\\n        stroke: '#f00',\\n        opacity: 1,\\n      },\\n      details: {\\n        fontSize: 12,\\n        fontFamily: 'Arial',\\n        fontStyle: 'bold',\\n        fill: 'gray',\\n        padding: 0,\\n      },\\n    };\\n\\n    const chartRotation = select<Rotation>(\\n      'chartRotation',\\n      {\\n        '0 deg': 0,\\n        '90 deg': 90,\\n        '-90 deg': -90,\\n        '180 deg': 180,\\n      },\\n      0\\n    );\\n\\n    const isBottom = boolean('x domain axis is bottom', true);\\n    const axisPosition = isBottom ? Position.Bottom : Position.Top;\\n\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings debug={boolean('debug', false)} rotation={chartRotation} />\\n        <LineAnnotation\\n          annotationId={getAnnotationId('anno_1')}\\n          domainType={AnnotationDomainTypes.XDomain}\\n          dataValues={dataValues}\\n          style={style}\\n          marker={<EuiIcon type=\\\"alert\\\" />}\\n        />\\n        <Axis id={getAxisId('horizontal')} position={axisPosition} title={'x-domain axis'} />\\n        <Axis id={getAxisId('vertical')} title={'y-domain axis'} position={Position.Left} />\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 3, y: 6 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('[line] basic xDomain ordinal', () => {\\n    const dataValues = generateAnnotationData(array('annotation values', ['a', 'c']));\\n\\n    const chartRotation = select<Rotation>(\\n      'chartRotation',\\n      {\\n        '0 deg': 0,\\n        '90 deg': 90,\\n        '-90 deg': -90,\\n        '180 deg': 180,\\n      },\\n      0\\n    );\\n\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings debug={boolean('debug', false)} rotation={chartRotation} />\\n        <LineAnnotation\\n          annotationId={getAnnotationId('anno_1')}\\n          domainType={AnnotationDomainTypes.XDomain}\\n          dataValues={dataValues}\\n          marker={<EuiIcon type=\\\"alert\\\" />}\\n        />\\n        <Axis id={getAxisId('top')} position={Position.Top} title={'x-domain axis (top)'} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'x-domain axis (bottom)'} />\\n        <Axis id={getAxisId('left')} title={'y-domain axis'} position={Position.Left} />\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Ordinal}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 'a', y: 2 }, { x: 'b', y: 7 }, { x: 'c', y: 3 }, { x: 'd', y: 6 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('[line] basic yDomain', () => {\\n    const data = array('data values', [1.5, 7.2]);\\n    const dataValues = generateAnnotationData(data);\\n\\n    const chartRotation = select<Rotation>(\\n      'chartRotation',\\n      {\\n        '0 deg': 0,\\n        '90 deg': 90,\\n        '-90 deg': -90,\\n        '180 deg': 180,\\n      },\\n      0\\n    );\\n\\n    const isLeft = boolean('y-domain axis is Position.Left', true);\\n    const axisTitle = isLeft ? 'y-domain axis (left)' : 'y-domain axis (right)';\\n    const axisPosition = isLeft ? Position.Left : Position.Right;\\n\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings debug={boolean('debug', false)} rotation={chartRotation} />\\n        <LineAnnotation\\n          annotationId={getAnnotationId('anno_')}\\n          domainType={AnnotationDomainTypes.YDomain}\\n          dataValues={dataValues}\\n          marker={<EuiIcon type=\\\"alert\\\" />}\\n        />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'x-domain axis'} />\\n        <Axis id={getAxisId('left')} title={axisTitle} position={axisPosition} />\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('[line] time series', () => {\\n    const dataValues = generateTimeAnnotationData([\\n      1551438150000,\\n      1551438180000,\\n      1551438390000,\\n      1551438450000,\\n      1551438480000,\\n    ]);\\n\\n    const chartRotation = select<Rotation>(\\n      'chartRotation',\\n      {\\n        '0 deg': 0,\\n        '90 deg': 90,\\n        '-90 deg': -90,\\n        '180 deg': 180,\\n      },\\n      0\\n    );\\n\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings debug={boolean('debug', false)} rotation={chartRotation} />\\n        <LineAnnotation\\n          annotationId={getAnnotationId('anno_1')}\\n          domainType={AnnotationDomainTypes.XDomain}\\n          dataValues={dataValues}\\n          marker={<EuiIcon type=\\\"alert\\\" />}\\n        />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'x-domain axis'} tickFormat={dateFormatter} />\\n        <Axis id={getAxisId('left')} title={'y-domain axis'} position={Position.Left} />\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data.slice(0, 20)}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('[line] styling', () => {\\n    const data = [2.5, 7.2];\\n    const dataValues = generateAnnotationData(data);\\n\\n    const dashWidth = number('dash line width', 1);\\n    const dashGapWidth = number('dash gap width', 0);\\n\\n    const style = {\\n      line: {\\n        strokeWidth: number('line stroke width', 3),\\n        stroke: color('line & marker color', '#f00'),\\n        dash: [dashWidth, dashGapWidth],\\n        opacity: number('line opacity', 1, {\\n          range: true,\\n          min: 0,\\n          max: 1,\\n          step: 0.1,\\n        }),\\n      },\\n    };\\n\\n    const chartRotation = select<Rotation>(\\n      'chartRotation',\\n      {\\n        '0 deg': 0,\\n        '90 deg': 90,\\n        '-90 deg': -90,\\n        '180 deg': 180,\\n      },\\n      0\\n    );\\n\\n    const axisPosition = Position.Bottom;\\n\\n    const marker = select<'alert' | 'asterisk' | 'questionInCircle'>(\\n      'marker icon (examples from EUI)',\\n      {\\n        alert: 'alert',\\n        asterisk: 'asterisk',\\n        questionInCircle: 'questionInCircle',\\n      },\\n      'alert'\\n    );\\n\\n    const hideLines = boolean('annotation lines hidden', false);\\n    const hideTooltips = boolean('annotation tooltips hidden', false);\\n\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings debug={boolean('debug', false)} rotation={chartRotation} />\\n        <LineAnnotation\\n          annotationId={getAnnotationId('anno_1')}\\n          domainType={AnnotationDomainTypes.XDomain}\\n          dataValues={dataValues}\\n          style={style}\\n          marker={<EuiIcon type={marker} />}\\n          hideLines={hideLines}\\n          hideTooltips={hideTooltips}\\n        />\\n        <Axis id={getAxisId('horizontal')} position={axisPosition} title={'x-domain axis'} />\\n        <Axis id={getAxisId('vertical')} title={'y-domain axis'} position={Position.Left} />\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor=\\\"x\\\"\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 3, y: 6 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('[rect] basic annotation (bar)', () => {\\n    const dataValues = [\\n      {\\n        coordinates: {\\n          x0: 0,\\n          x1: 1,\\n          y0: 0,\\n          y1: 7,\\n        },\\n        details: 'details about this annotation',\\n      },\\n    ];\\n\\n    const chartRotation = select<Rotation>(\\n      'chartRotation',\\n      {\\n        '0 deg': 0,\\n        '90 deg': 90,\\n        '-90 deg': -90,\\n        '180 deg': 180,\\n      },\\n      0\\n    );\\n\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings debug={boolean('debug', false)} rotation={chartRotation} />\\n        <RectAnnotation dataValues={dataValues} annotationId={getAnnotationId('rect')} />\\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'x-domain axis'} />\\n        <Axis id={getAxisId('left')} title={'y-domain axis'} position={Position.Left} />\\n        <BarSeries\\n          id={getSpecId('bars')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={'x'}\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 3, y: 6 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('[rect] basic annotation (line)', () => {\\n    const definedCoordinate = select(\\n      'defined coordinate',\\n      {\\n        x0: 'x0',\\n        x1: 'x1',\\n        y0: 'y0',\\n        y1: 'y1',\\n      },\\n      'x0'\\n    );\\n\\n    const dataValues = [\\n      {\\n        coordinates: {\\n          x0: 1,\\n          x1: 1.25,\\n          y0: 0,\\n          y1: 7,\\n        },\\n        details: 'details about this annotation',\\n      },\\n      {\\n        coordinates: {\\n          x0: 2.0,\\n          x1: 2.1,\\n          y0: 0,\\n          y1: 7,\\n        },\\n        details: 'details about this annotation',\\n      },\\n      {\\n        coordinates: {\\n          x0: definedCoordinate === 'x0' ? 0.25 : null,\\n          x1: definedCoordinate === 'x1' ? 2.75 : null,\\n          y0: definedCoordinate === 'y0' ? 0.25 : null,\\n          y1: definedCoordinate === 'y1' ? 6.75 : null,\\n        },\\n        details: 'can have null values',\\n      },\\n    ];\\n\\n    const chartRotation = select<Rotation>(\\n      'chartRotation',\\n      {\\n        '0 deg': 0,\\n        '90 deg': 90,\\n        '-90 deg': -90,\\n        '180 deg': 180,\\n      },\\n      0\\n    );\\n\\n    const isLeft = boolean('y-domain axis is Position.Left', true);\\n    const yAxisTitle = isLeft ? 'y-domain axis (left)' : 'y-domain axis (right)';\\n    const yAxisPosition = isLeft ? Position.Left : Position.Right;\\n\\n    const isBottom = boolean('x-domain axis is Position.Bottom', true);\\n    const xAxisTitle = isBottom ? 'x-domain axis (botttom)' : 'x-domain axis (top)';\\n    const xAxisPosition = isBottom ? Position.Bottom : Position.Top;\\n\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings debug={boolean('debug', false)} rotation={chartRotation} />\\n        <RectAnnotation dataValues={dataValues} annotationId={getAnnotationId('rect')} />\\n        <Axis id={getAxisId('bottom')} position={xAxisPosition} title={xAxisTitle} />\\n        <Axis id={getAxisId('left')} title={yAxisTitle} position={yAxisPosition} />\\n        <LineSeries\\n          id={getSpecId('lines')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={'x'}\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 3, y: 6 }]}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add('[rect] styling', () => {\\n    const dataValues = [\\n      {\\n        coordinates: {\\n          x0: 0,\\n          x1: 0.25,\\n          y0: 0,\\n          y1: 7,\\n        },\\n        details: 'annotation 1',\\n      },\\n      {\\n        coordinates: {\\n          x0: -0.1,\\n          x1: 0,\\n          y0: 0,\\n          y1: 7,\\n        },\\n        details: 'annotation 2',\\n      },\\n      {\\n        coordinates: {\\n          x0: 1.1,\\n          x1: 1.3,\\n          y0: 0,\\n          y1: 7,\\n        },\\n        details: 'annotation 2',\\n      },\\n      {\\n        coordinates: {\\n          x0: 2.5,\\n          x1: 3,\\n          y0: 0,\\n          y1: 7,\\n        },\\n        details: 'annotation 3',\\n      },\\n    ];\\n\\n    const zIndex = number('annotation zIndex', 0);\\n\\n    const chartRotation = select<Rotation>(\\n      'chartRotation',\\n      {\\n        '0 deg': 0,\\n        '90 deg': 90,\\n        '-90 deg': -90,\\n        '180 deg': 180,\\n      },\\n      0\\n    );\\n\\n    const style = {\\n      strokeWidth: number('rect border stroke width', 1),\\n      stroke: color('rect border stroke color', '#e5e5e5'),\\n      fill: color('fill color', '#e5e5e5'),\\n      opacity: number('annotation opacity', 0.5, {\\n        range: true,\\n        min: 0,\\n        max: 1,\\n        step: 0.1,\\n      }),\\n    };\\n\\n    const hasCustomTooltip = boolean('has custom tooltip render', false);\\n    const tooltipStyle: CSSProperties = {\\n      position: 'absolute',\\n      backgroundColor: '#e76f6f',\\n      color: '#e6e6e6',\\n      overflow: 'hidden',\\n      overflowWrap: 'break-word',\\n      width: '120px',\\n    };\\n    const renderTooltip = hasCustomTooltip\\n      ? (position: { transform: string; top: number; left: number }, details?: string) => (\\n          <div style={{ ...tooltipStyle, ...position }}>\\n            <EuiIcon type=\\\"alert\\\" />\\n            {details}\\n          </div>\\n        )\\n      : undefined;\\n\\n    const isLeft = boolean('y-domain axis is Position.Left', true);\\n    const yAxisTitle = isLeft ? 'y-domain axis (left)' : 'y-domain axis (right)';\\n    const yAxisPosition = isLeft ? Position.Left : Position.Right;\\n\\n    const isBottom = boolean('x-domain axis is Position.Bottom', true);\\n    const xAxisTitle = isBottom ? 'x-domain axis (botttom)' : 'x-domain axis (top)';\\n    const xAxisPosition = isBottom ? Position.Bottom : Position.Top;\\n\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Settings debug={boolean('debug', false)} rotation={chartRotation} />\\n        <RectAnnotation\\n          dataValues={dataValues}\\n          annotationId={getAnnotationId('rect')}\\n          style={style}\\n          renderTooltip={renderTooltip}\\n          zIndex={zIndex}\\n        />\\n        <Axis id={getAxisId('bottom')} position={xAxisPosition} title={xAxisTitle} />\\n        <Axis id={getAxisId('left')} title={yAxisTitle} position={yAxisPosition} />\\n        <LineSeries\\n          id={getSpecId('lines')}\\n          xScaleType={ScaleType.Linear}\\n          yScaleType={ScaleType.Linear}\\n          xAccessor={'x'}\\n          yAccessors={['y']}\\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 3, y: 6 }]}\\n        />\\n      </Chart>\\n    );\\n  });\\n\";\n  export var __ADDS_MAP__ = {\"Annotations@[rect] styling\":{\"startLoc\":{\"col\":7,\"line\":407},\"endLoc\":{\"col\":3,\"line\":520}},\"Annotations@[rect] basic annotation (line)\":{\"startLoc\":{\"col\":7,\"line\":329},\"endLoc\":{\"col\":3,\"line\":406}},\"Annotations@[rect] basic annotation (bar)\":{\"startLoc\":{\"col\":7,\"line\":288},\"endLoc\":{\"col\":3,\"line\":328}},\"Annotations@[line] styling\":{\"startLoc\":{\"col\":7,\"line\":216},\"endLoc\":{\"col\":3,\"line\":287}},\"Annotations@[line] time series\":{\"startLoc\":{\"col\":7,\"line\":174},\"endLoc\":{\"col\":3,\"line\":215}},\"Annotations@[line] basic yDomain\":{\"startLoc\":{\"col\":7,\"line\":133},\"endLoc\":{\"col\":3,\"line\":173}},\"Annotations@[line] basic xDomain ordinal\":{\"startLoc\":{\"col\":7,\"line\":96},\"endLoc\":{\"col\":3,\"line\":132}},\"Annotations@[line] basic xDomain continuous\":{\"startLoc\":{\"col\":7,\"line\":40},\"endLoc\":{\"col\":3,\"line\":95}}};\n  \n  import { EuiIcon } from '@elastic/eui';\nimport { array, boolean, color, number, select } from '@storybook/addon-knobs';\nimport { storiesOf } from '@storybook/react';\nimport React, { CSSProperties } from 'react';\nimport {\n  AnnotationDomainTypes,\n  Axis,\n  BarSeries,\n  Chart,\n  getAnnotationId,\n  getAxisId,\n  getSpecId,\n  LineAnnotation,\n  LineAnnotationDatum,\n  LineSeries,\n  Position,\n  RectAnnotation,\n  Rotation,\n  ScaleType,\n  Settings,\n  timeFormatter,\n} from '../src';\nimport { KIBANA_METRICS } from '../src/lib/series/utils/test_dataset_kibana';\n\nconst dateFormatter = timeFormatter('HH:mm:ss');\n\nfunction generateAnnotationData(values: any[]): LineAnnotationDatum[] {\n  return values.map((value, index) => ({ dataValue: value, details: `detail-${index}` }));\n}\n\nfunction generateTimeAnnotationData(values: any[]): LineAnnotationDatum[] {\n  return values.map((value, index) => ({\n    dataValue: value,\n    details: `detail-${index}`,\n    header: dateFormatter(value),\n  }));\n}\n\nstoriesOf('Annotations', module).addDecorator(withStorySource(__STORY__, __ADDS_MAP__))\n  .add('[line] basic xDomain continuous', () => {\n    const data = array('data values', [2.5, 7.2]);\n    const dataValues = generateAnnotationData(data);\n\n    const style = {\n      line: {\n        strokeWidth: 3,\n        stroke: '#f00',\n        opacity: 1,\n      },\n      details: {\n        fontSize: 12,\n        fontFamily: 'Arial',\n        fontStyle: 'bold',\n        fill: 'gray',\n        padding: 0,\n      },\n    };\n\n    const chartRotation = select<Rotation>(\n      'chartRotation',\n      {\n        '0 deg': 0,\n        '90 deg': 90,\n        '-90 deg': -90,\n        '180 deg': 180,\n      },\n      0,\n    );\n\n    const isBottom = boolean('x domain axis is bottom', true);\n    const axisPosition = isBottom ? Position.Bottom : Position.Top;\n\n    return (\n      <Chart className={'story-chart'}>\n        <Settings debug={boolean('debug', false)} rotation={chartRotation} />\n        <LineAnnotation\n          annotationId={getAnnotationId('anno_1')}\n          domainType={AnnotationDomainTypes.XDomain}\n          dataValues={dataValues}\n          style={style}\n          marker={<EuiIcon type=\"alert\" />}\n        />\n        <Axis id={getAxisId('horizontal')} position={axisPosition} title={'x-domain axis'} />\n        <Axis id={getAxisId('vertical')} title={'y-domain axis'} position={Position.Left} />\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 3, y: 6 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('[line] basic xDomain ordinal', () => {\n    const dataValues = generateAnnotationData(array('annotation values', ['a', 'c']));\n\n    const chartRotation = select<Rotation>(\n      'chartRotation',\n      {\n        '0 deg': 0,\n        '90 deg': 90,\n        '-90 deg': -90,\n        '180 deg': 180,\n      },\n      0,\n    );\n\n    return (\n      <Chart className={'story-chart'}>\n        <Settings debug={boolean('debug', false)} rotation={chartRotation} />\n        <LineAnnotation\n          annotationId={getAnnotationId('anno_1')}\n          domainType={AnnotationDomainTypes.XDomain}\n          dataValues={dataValues}\n          marker={<EuiIcon type=\"alert\" />}\n        />\n        <Axis id={getAxisId('top')} position={Position.Top} title={'x-domain axis (top)'} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'x-domain axis (bottom)'}\n        />\n        <Axis id={getAxisId('left')} title={'y-domain axis'} position={Position.Left} />\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Ordinal}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 'a', y: 2 }, { x: 'b', y: 7 }, { x: 'c', y: 3 }, { x: 'd', y: 6 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('[line] basic yDomain', () => {\n    const data = array('data values', [1.5, 7.2]);\n    const dataValues = generateAnnotationData(data);\n\n    const chartRotation = select<Rotation>(\n      'chartRotation',\n      {\n        '0 deg': 0,\n        '90 deg': 90,\n        '-90 deg': -90,\n        '180 deg': 180,\n      },\n      0,\n    );\n\n    const isLeft = boolean('y-domain axis is Position.Left', true);\n    const axisTitle = isLeft ? 'y-domain axis (left)' : 'y-domain axis (right)';\n    const axisPosition = isLeft ? Position.Left : Position.Right;\n\n    return (\n      <Chart className={'story-chart'}>\n        <Settings debug={boolean('debug', false)} rotation={chartRotation} />\n        <LineAnnotation\n          annotationId={getAnnotationId('anno_')}\n          domainType={AnnotationDomainTypes.YDomain}\n          dataValues={dataValues}\n          marker={<EuiIcon type=\"alert\" />}\n        />\n        <Axis id={getAxisId('bottom')} position={Position.Bottom} title={'x-domain axis'} />\n        <Axis id={getAxisId('left')} title={axisTitle} position={axisPosition} />\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 2, y: 3 }, { x: 3, y: 6 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('[line] time series', () => {\n    const dataValues = generateTimeAnnotationData([\n      1551438150000,\n      1551438180000,\n      1551438390000,\n      1551438450000,\n      1551438480000,\n    ]);\n\n    const chartRotation = select<Rotation>(\n      'chartRotation',\n      {\n        '0 deg': 0,\n        '90 deg': 90,\n        '-90 deg': -90,\n        '180 deg': 180,\n      },\n      0,\n    );\n\n    return (\n      <Chart className={'story-chart'}>\n        <Settings debug={boolean('debug', false)} rotation={chartRotation} />\n        <LineAnnotation\n          annotationId={getAnnotationId('anno_1')}\n          domainType={AnnotationDomainTypes.XDomain}\n          dataValues={dataValues}\n          marker={<EuiIcon type=\"alert\" />}\n        />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'x-domain axis'}\n          tickFormat={dateFormatter}\n        />\n        <Axis id={getAxisId('left')} title={'y-domain axis'} position={Position.Left} />\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={KIBANA_METRICS.metrics.kibana_os_load[0].data.slice(0, 20)}\n        />\n      </Chart>\n    );\n  })\n  .add('[line] styling', () => {\n    const data = [2.5, 7.2];\n    const dataValues = generateAnnotationData(data);\n\n    const dashWidth = number('dash line width', 1);\n    const dashGapWidth = number('dash gap width', 0);\n\n    const style = {\n      line: {\n        strokeWidth: number('line stroke width', 3),\n        stroke: color('line & marker color', '#f00'),\n        dash: [dashWidth, dashGapWidth],\n        opacity: number('line opacity', 1, {\n          range: true,\n          min: 0,\n          max: 1,\n          step: 0.1,\n        }),\n      },\n    };\n\n    const chartRotation = select<Rotation>(\n      'chartRotation',\n      {\n        '0 deg': 0,\n        '90 deg': 90,\n        '-90 deg': -90,\n        '180 deg': 180,\n      },\n      0,\n    );\n\n    const axisPosition = Position.Bottom;\n\n    const marker = select<'alert' | 'asterisk' | 'questionInCircle'>(\n      'marker icon (examples from EUI)',\n      {\n        alert: 'alert',\n        asterisk: 'asterisk',\n        questionInCircle: 'questionInCircle',\n      },\n      'alert',\n    );\n\n    const hideLines = boolean('annotation lines hidden', false);\n    const hideTooltips = boolean('annotation tooltips hidden', false);\n\n    return (\n      <Chart className={'story-chart'}>\n        <Settings debug={boolean('debug', false)} rotation={chartRotation} />\n        <LineAnnotation\n          annotationId={getAnnotationId('anno_1')}\n          domainType={AnnotationDomainTypes.XDomain}\n          dataValues={dataValues}\n          style={style}\n          marker={<EuiIcon type={marker} />}\n          hideLines={hideLines}\n          hideTooltips={hideTooltips}\n        />\n        <Axis id={getAxisId('horizontal')} position={axisPosition} title={'x-domain axis'} />\n        <Axis id={getAxisId('vertical')} title={'y-domain axis'} position={Position.Left} />\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor=\"x\"\n          yAccessors={['y']}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 3, y: 6 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('[rect] basic annotation (bar)', () => {\n    const dataValues = [{\n      coordinates: {\n        x0: 0,\n        x1: 1,\n        y0: 0,\n        y1: 7,\n      },\n      details: 'details about this annotation',\n    }];\n\n    const chartRotation = select<Rotation>(\n      'chartRotation',\n      {\n        '0 deg': 0,\n        '90 deg': 90,\n        '-90 deg': -90,\n        '180 deg': 180,\n      },\n      0,\n    );\n\n    return (\n      <Chart className={'story-chart'}>\n        <Settings debug={boolean('debug', false)} rotation={chartRotation} />\n        <RectAnnotation dataValues={dataValues} annotationId={getAnnotationId('rect')} />\n        <Axis\n          id={getAxisId('bottom')}\n          position={Position.Bottom}\n          title={'x-domain axis'}\n        />\n        <Axis id={getAxisId('left')} title={'y-domain axis'} position={Position.Left} />\n        <BarSeries\n          id={getSpecId('bars')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor={'x'}\n          yAccessors={['y']}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 3, y: 6 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('[rect] basic annotation (line)', () => {\n    const definedCoordinate = select('defined coordinate', {\n      x0: 'x0',\n      x1: 'x1',\n      y0: 'y0',\n      y1: 'y1',\n    }, 'x0');\n\n    const dataValues = [{\n      coordinates: {\n        x0: 1,\n        x1: 1.25,\n        y0: 0,\n        y1: 7,\n      },\n      details: 'details about this annotation',\n    }, {\n      coordinates: {\n        x0: 2.0,\n        x1: 2.1,\n        y0: 0,\n        y1: 7,\n      },\n      details: 'details about this annotation',\n    }, {\n      coordinates: {\n        x0: definedCoordinate === 'x0' ? 0.25 : null,\n        x1: definedCoordinate === 'x1' ? 2.75 : null,\n        y0: definedCoordinate === 'y0' ? 0.25 : null,\n        y1: definedCoordinate === 'y1' ? 6.75 : null,\n      },\n      details: 'can have null values',\n    }];\n\n    const chartRotation = select<Rotation>(\n      'chartRotation',\n      {\n        '0 deg': 0,\n        '90 deg': 90,\n        '-90 deg': -90,\n        '180 deg': 180,\n      },\n      0,\n    );\n\n    const isLeft = boolean('y-domain axis is Position.Left', true);\n    const yAxisTitle = isLeft ? 'y-domain axis (left)' : 'y-domain axis (right)';\n    const yAxisPosition = isLeft ? Position.Left : Position.Right;\n\n    const isBottom = boolean('x-domain axis is Position.Bottom', true);\n    const xAxisTitle = isBottom ? 'x-domain axis (botttom)' : 'x-domain axis (top)';\n    const xAxisPosition = isBottom ? Position.Bottom : Position.Top;\n\n    return (\n      <Chart className={'story-chart'}>\n        <Settings debug={boolean('debug', false)} rotation={chartRotation} />\n        <RectAnnotation\n          dataValues={dataValues}\n          annotationId={getAnnotationId('rect')}\n        />\n        <Axis\n          id={getAxisId('bottom')}\n          position={xAxisPosition}\n          title={xAxisTitle}\n        />\n        <Axis id={getAxisId('left')} title={yAxisTitle} position={yAxisPosition} />\n        <LineSeries\n          id={getSpecId('lines')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor={'x'}\n          yAccessors={['y']}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 3, y: 6 }]}\n        />\n      </Chart>\n    );\n  })\n  .add('[rect] styling', () => {\n    const dataValues = [{\n      coordinates: {\n        x0: 0,\n        x1: 0.25,\n        y0: 0,\n        y1: 7,\n      },\n      details: 'annotation 1',\n    }, {\n      coordinates: {\n        x0: -0.1,\n        x1: 0,\n        y0: 0,\n        y1: 7,\n      },\n      details: 'annotation 2',\n    }, {\n      coordinates: {\n        x0: 1.1,\n        x1: 1.3,\n        y0: 0,\n        y1: 7,\n      },\n      details: 'annotation 2',\n    }, {\n      coordinates: {\n        x0: 2.5,\n        x1: 3,\n        y0: 0,\n        y1: 7,\n      },\n      details: 'annotation 3',\n    }];\n\n    const zIndex = number('annotation zIndex', 0);\n\n    const chartRotation = select<Rotation>(\n      'chartRotation',\n      {\n        '0 deg': 0,\n        '90 deg': 90,\n        '-90 deg': -90,\n        '180 deg': 180,\n      },\n      0,\n    );\n\n    const style = {\n      strokeWidth: number('rect border stroke width', 1),\n      stroke: color('rect border stroke color', '#e5e5e5'),\n      fill: color('fill color', '#e5e5e5'),\n      opacity: number('annotation opacity', 0.5, {\n        range: true,\n        min: 0,\n        max: 1,\n        step: 0.1,\n      }),\n    };\n\n    const hasCustomTooltip = boolean('has custom tooltip render', false);\n    const tooltipStyle: CSSProperties = {\n      position: 'absolute',\n      backgroundColor: '#e76f6f',\n      color: '#e6e6e6',\n      overflow: 'hidden',\n      overflowWrap: 'break-word',\n      width: '120px',\n    };\n    const renderTooltip = hasCustomTooltip ?\n      (position: { transform: string; top: number; left: number; }, details?: string) =>\n        (<div style={{ ...tooltipStyle, ...position }}><EuiIcon type=\"alert\" />{details}</div>)\n      : undefined;\n\n    const isLeft = boolean('y-domain axis is Position.Left', true);\n    const yAxisTitle = isLeft ? 'y-domain axis (left)' : 'y-domain axis (right)';\n    const yAxisPosition = isLeft ? Position.Left : Position.Right;\n\n    const isBottom = boolean('x-domain axis is Position.Bottom', true);\n    const xAxisTitle = isBottom ? 'x-domain axis (botttom)' : 'x-domain axis (top)';\n    const xAxisPosition = isBottom ? Position.Bottom : Position.Top;\n\n    return (\n      <Chart className={'story-chart'}>\n        <Settings debug={boolean('debug', false)} rotation={chartRotation} />\n        <RectAnnotation\n          dataValues={dataValues}\n          annotationId={getAnnotationId('rect')}\n          style={style}\n          renderTooltip={renderTooltip}\n          zIndex={zIndex}\n        />\n        <Axis\n          id={getAxisId('bottom')}\n          position={xAxisPosition}\n          title={xAxisTitle}\n        />\n        <Axis id={getAxisId('left')} title={yAxisTitle} position={yAxisPosition} />\n        <LineSeries\n          id={getSpecId('lines')}\n          xScaleType={ScaleType.Linear}\n          yScaleType={ScaleType.Linear}\n          xAccessor={'x'}\n          yAccessors={['y']}\n          data={[{ x: 0, y: 2 }, { x: 1, y: 7 }, { x: 3, y: 6 }]}\n        />\n      </Chart>\n    );\n  });\n\n  ","\n  export var withStorySource = require('@storybook/addon-storysource').withStorySource;\n  export var __STORY__ = \"import { select } from '@storybook/addon-knobs';\\nimport { storiesOf } from '@storybook/react';\\nimport { DateTime } from 'luxon';\\nimport React from 'react';\\nimport { Axis, Chart, getAxisId, getSpecId, LineSeries, Position, ScaleType } from '../src';\\n\\nconst today = new Date().getTime();\\nconst UTC_DATE = DateTime.fromISO('2019-01-01T00:00:00.000Z').toMillis();\\nconst UTC_PLUS8_DATE = DateTime.fromISO('2019-01-01T00:00:00.000+08:00', {\\n  setZone: true,\\n}).toMillis();\\nconst UTC_MINUS8_DATE = DateTime.fromISO('2019-01-01T00:00:00.000-08:00', {\\n  setZone: true,\\n}).toMillis();\\nconst DAY_INCREMENT_1 = 1000 * 60 * 60 * 24;\\nconst UTC_DATASET = new Array(10).fill(0).map((d, i) => {\\n  return [UTC_DATE + DAY_INCREMENT_1 * i, i % 5];\\n});\\nconst CURRENT_TIMEZONE_DATASET = new Array(10).fill(0).map((d, i) => {\\n  return [today + DAY_INCREMENT_1 * i, i % 5];\\n});\\nconst OTHER_PLUS8_TIMEZONE_DATASET = new Array(10).fill(0).map((d, i) => {\\n  return [UTC_PLUS8_DATE + DAY_INCREMENT_1 * i, i % 5];\\n});\\nconst OTHER_MINUS8_TIMEZONE_DATASET = new Array(10).fill(0).map((d, i) => {\\n  return [UTC_MINUS8_DATE + DAY_INCREMENT_1 * i, i % 5];\\n});\\n\\nstoriesOf('Scales', module)\\n  .add('line chart with different timezones', () => {\\n    const timezones = {\\n      utc: 'utc',\\n      local: 'local',\\n      utcplus8: 'utc+8',\\n      utcminus8: 'utc-8',\\n    };\\n    const datasetSelected = select('dataset', timezones, 'utc');\\n    const tooltipSelected = select('tooltip', timezones, 'utc');\\n\\n    let data;\\n    switch (datasetSelected) {\\n      case 'utc':\\n        data = UTC_DATASET;\\n        break;\\n      case 'local':\\n        data = CURRENT_TIMEZONE_DATASET;\\n        break;\\n      case 'utc+8':\\n        data = OTHER_PLUS8_TIMEZONE_DATASET;\\n        break;\\n      case 'utc-8':\\n        data = OTHER_MINUS8_TIMEZONE_DATASET;\\n        break;\\n    }\\n    let tooltipFn: (d: number) => string;\\n    switch (tooltipSelected) {\\n      case 'local':\\n        tooltipFn = (d: number) => {\\n          return DateTime.fromMillis(d).toFormat('yyyy-MM-dd HH:mm:ss');\\n        };\\n        break;\\n      case 'utc+8':\\n        tooltipFn = (d: number) => {\\n          return DateTime.fromMillis(d, { zone: 'utc+8' }).toFormat('yyyy-MM-dd HH:mm:ss');\\n        };\\n        break;\\n      case 'utc-8':\\n        tooltipFn = (d: number) => {\\n          return DateTime.fromMillis(d, { zone: 'utc-8' }).toFormat('yyyy-MM-dd HH:mm:ss');\\n        };\\n        break;\\n      default:\\n      case 'utc':\\n        tooltipFn = (d: number) => {\\n          return DateTime.fromMillis(d)\\n            .toUTC()\\n            .toFormat('yyyy-MM-dd HH:mm:ss');\\n        };\\n        break;\\n    }\\n    return (\\n      <Chart className={'story-chart'}>\\n        <Axis id={getAxisId('time')} position={Position.Bottom} tickFormat={tooltipFn} />\\n        <Axis id={getAxisId('y')} position={Position.Left} />\\n        <LineSeries\\n          id={getSpecId('lines')}\\n          xScaleType={ScaleType.Time}\\n          yScaleType={ScaleType.Linear}\\n          timeZone={tooltipSelected}\\n          xAccessor={0}\\n          yAccessors={[1]}\\n          data={data}\\n        />\\n      </Chart>\\n    );\\n  })\\n  .add(\\n    'x scale: UTC Time zone - local tooltip',\\n    () => {\\n      return (\\n        <Chart className={'story-chart'}>\\n          <Axis\\n            id={getAxisId('time')}\\n            position={Position.Bottom}\\n            tickFormat={d => {\\n              return DateTime.fromMillis(d).toFormat('yyyy-MM-dd HH:mm:ss');\\n            }}\\n          />\\n          <Axis id={getAxisId('y')} position={Position.Left} />\\n          <LineSeries\\n            id={getSpecId('lines')}\\n            xScaleType={ScaleType.Time}\\n            yScaleType={ScaleType.Linear}\\n            timeZone={'local'}\\n            xAccessor={0}\\n            yAccessors={[1]}\\n            data={UTC_DATASET}\\n          />\\n        </Chart>\\n      );\\n    },\\n    {\\n      info: {\\n        text: `If your data is in UTC timezone, your tooltip and axis labels can\\n        be configured to visualize the time translated to your local timezone. You should\\n        be able to see the first value on \\\\`2019-01-01  01:00:00.000 \\\\``,\\n      },\\n    }\\n  )\\n  .add(\\n    'x scale: UTC Time zone - UTC tooltip',\\n    () => {\\n      return (\\n        <Chart className={'story-chart'}>\\n          <Axis\\n            id={getAxisId('time')}\\n            position={Position.Bottom}\\n            tickFormat={d => {\\n              return DateTime.fromMillis(d)\\n                .toUTC()\\n                .toFormat('yyyy-MM-dd HH:mm:ss');\\n            }}\\n          />\\n          <Axis id={getAxisId('y')} position={Position.Left} />\\n          <LineSeries\\n            id={getSpecId('lines')}\\n            xScaleType={ScaleType.Time}\\n            yScaleType={ScaleType.Linear}\\n            timeZone={'utc'}\\n            xAccessor={0}\\n            yAccessors={[1]}\\n            data={UTC_DATASET}\\n          />\\n        </Chart>\\n      );\\n    },\\n    {\\n      info: {\\n        text: `The default timezone is UTC. If you want to visualize data in UTC,\\n        but you are in a different timezone, remember to format the millis from \\\\`tickFormat\\\\`\\n        to UTC. In this example be able to see the first value on \\\\`2019-01-01  00:00:00.000 \\\\``,\\n      },\\n    }\\n  )\\n  .add(\\n    'x scale year scale: custom timezone - same zone tooltip',\\n    () => {\\n      return (\\n        <Chart className={'story-chart'}>\\n          <Axis\\n            id={getAxisId('time')}\\n            position={Position.Bottom}\\n            tickFormat={d => {\\n              return DateTime.fromMillis(d, { zone: 'utc-6' }).toISO();\\n              // return DateTime.fromMillis(d, { zone: 'utc-6' }).toISO();\\n            }}\\n          />\\n          <Axis id={getAxisId('y')} position={Position.Left} />\\n          <LineSeries\\n            id={getSpecId('lines')}\\n            xScaleType={ScaleType.Time}\\n            yScaleType={ScaleType.Linear}\\n            xAccessor={1}\\n            yAccessors={[2]}\\n            timeZone={'utc-6'}\\n            data={[\\n              ['2014-01-01T00:00:00.000-06:00', 1388556000000, 6206],\\n              ['2015-01-01T00:00:00.000-06:00', 1420092000000, 5674],\\n              ['2016-01-01T00:00:00.000-06:00', 1451628000000, 4148],\\n              ['2017-01-01T00:00:00.000-06:00', 1483250400000, 6206],\\n              ['2018-01-01T00:00:00.000-06:00', 1514786400000, 3698],\\n            ]}\\n          />\\n        </Chart>\\n      );\\n    },\\n    {\\n      info: {\\n        text: `You can visualize data in a different timezone than your local or UTC zones.\\n        Specify the \\\\`timeZone={'utc-6'}\\\\` property with the correct timezone and\\n        remember to apply the same timezone also to each formatted tick in \\\\`tickFormat\\\\` `,\\n      },\\n    }\\n  );\\n\";\n  export var __ADDS_MAP__ = {\"Scales@x scale year scale: custom timezone - same zone tooltip\":{\"startLoc\":{\"col\":4,\"line\":166},\"endLoc\":{\"col\":5,\"line\":203}},\"Scales@x scale: UTC Time zone - UTC tooltip\":{\"startLoc\":{\"col\":4,\"line\":131},\"endLoc\":{\"col\":5,\"line\":163}},\"Scales@x scale: UTC Time zone - local tooltip\":{\"startLoc\":{\"col\":4,\"line\":98},\"endLoc\":{\"col\":5,\"line\":128}},\"Scales@line chart with different timezones\":{\"startLoc\":{\"col\":7,\"line\":30},\"endLoc\":{\"col\":3,\"line\":96}}};\n  \n  import { select } from '@storybook/addon-knobs';\nimport { storiesOf } from '@storybook/react';\nimport { DateTime } from 'luxon';\nimport React from 'react';\nimport { Axis, Chart, getAxisId, getSpecId, LineSeries, Position, ScaleType } from '../src';\n\nconst today = new Date().getTime();\nconst UTC_DATE = DateTime.fromISO('2019-01-01T00:00:00.000Z').toMillis();\nconst UTC_PLUS8_DATE = DateTime.fromISO('2019-01-01T00:00:00.000+08:00', {\n  setZone: true,\n}).toMillis();\nconst UTC_MINUS8_DATE = DateTime.fromISO('2019-01-01T00:00:00.000-08:00', {\n  setZone: true,\n}).toMillis();\nconst DAY_INCREMENT_1 = 1000 * 60 * 60 * 24;\nconst UTC_DATASET = new Array(10).fill(0).map((d, i) => {\n  return [UTC_DATE + DAY_INCREMENT_1 * i, i % 5];\n});\nconst CURRENT_TIMEZONE_DATASET = new Array(10).fill(0).map((d, i) => {\n  return [today + DAY_INCREMENT_1 * i, i % 5];\n});\nconst OTHER_PLUS8_TIMEZONE_DATASET = new Array(10).fill(0).map((d, i) => {\n  return [UTC_PLUS8_DATE + DAY_INCREMENT_1 * i, i % 5];\n});\nconst OTHER_MINUS8_TIMEZONE_DATASET = new Array(10).fill(0).map((d, i) => {\n  return [UTC_MINUS8_DATE + DAY_INCREMENT_1 * i, i % 5];\n});\n\nstoriesOf('Scales', module).addDecorator(withStorySource(__STORY__, __ADDS_MAP__))\n  .add('line chart with different timezones', () => {\n    const timezones = {\n      utc: 'utc',\n      local: 'local',\n      utcplus8: 'utc+8',\n      utcminus8: 'utc-8',\n    };\n    const datasetSelected = select('dataset', timezones, 'utc');\n    const tooltipSelected = select('tooltip', timezones, 'utc');\n\n    let data;\n    switch (datasetSelected) {\n      case 'utc':\n        data = UTC_DATASET;\n        break;\n      case 'local':\n        data = CURRENT_TIMEZONE_DATASET;\n        break;\n      case 'utc+8':\n        data = OTHER_PLUS8_TIMEZONE_DATASET;\n        break;\n      case 'utc-8':\n        data = OTHER_MINUS8_TIMEZONE_DATASET;\n        break;\n    }\n    let tooltipFn: (d: number) => string;\n    switch (tooltipSelected) {\n      case 'local':\n        tooltipFn = (d: number) => {\n          return DateTime.fromMillis(d).toFormat('yyyy-MM-dd HH:mm:ss');\n        };\n        break;\n      case 'utc+8':\n        tooltipFn = (d: number) => {\n          return DateTime.fromMillis(d, { zone: 'utc+8' }).toFormat('yyyy-MM-dd HH:mm:ss');\n        };\n        break;\n      case 'utc-8':\n        tooltipFn = (d: number) => {\n          return DateTime.fromMillis(d, { zone: 'utc-8' }).toFormat('yyyy-MM-dd HH:mm:ss');\n        };\n        break;\n      default:\n      case 'utc':\n        tooltipFn = (d: number) => {\n          return DateTime.fromMillis(d)\n            .toUTC()\n            .toFormat('yyyy-MM-dd HH:mm:ss');\n        };\n        break;\n    }\n    return (\n      <Chart className={'story-chart'}>\n        <Axis id={getAxisId('time')} position={Position.Bottom} tickFormat={tooltipFn} />\n        <Axis id={getAxisId('y')} position={Position.Left} />\n        <LineSeries\n          id={getSpecId('lines')}\n          xScaleType={ScaleType.Time}\n          yScaleType={ScaleType.Linear}\n          timeZone={tooltipSelected}\n          xAccessor={0}\n          yAccessors={[1]}\n          data={data}\n        />\n      </Chart>\n    );\n  })\n  .add(\n    'x scale: UTC Time zone - local tooltip',\n    () => {\n      return (\n        <Chart className={'story-chart'}>\n          <Axis\n            id={getAxisId('time')}\n            position={Position.Bottom}\n            tickFormat={(d) => {\n              return DateTime.fromMillis(d).toFormat('yyyy-MM-dd HH:mm:ss');\n            }}\n          />\n          <Axis id={getAxisId('y')} position={Position.Left} />\n          <LineSeries\n            id={getSpecId('lines')}\n            xScaleType={ScaleType.Time}\n            yScaleType={ScaleType.Linear}\n            timeZone={'local'}\n            xAccessor={0}\n            yAccessors={[1]}\n            data={UTC_DATASET}\n          />\n        </Chart>\n      );\n    },\n    {\n      info: {\n        text: `If your data is in UTC timezone, your tooltip and axis labels can\n        be configured to visualize the time translated to your local timezone. You should\n        be able to see the first value on \\`2019-01-01  01:00:00.000 \\``,\n      },\n    },\n  )\n  .add(\n    'x scale: UTC Time zone - UTC tooltip',\n    () => {\n      return (\n        <Chart className={'story-chart'}>\n          <Axis\n            id={getAxisId('time')}\n            position={Position.Bottom}\n            tickFormat={(d) => {\n              return DateTime.fromMillis(d)\n                .toUTC()\n                .toFormat('yyyy-MM-dd HH:mm:ss');\n            }}\n          />\n          <Axis id={getAxisId('y')} position={Position.Left} />\n          <LineSeries\n            id={getSpecId('lines')}\n            xScaleType={ScaleType.Time}\n            yScaleType={ScaleType.Linear}\n            timeZone={'utc'}\n            xAccessor={0}\n            yAccessors={[1]}\n            data={UTC_DATASET}\n          />\n        </Chart>\n      );\n    },\n    {\n      info: {\n        text: `The default timezone is UTC. If you want to visualize data in UTC,\n        but you are in a different timezone, remember to format the millis from \\`tickFormat\\`\n        to UTC. In this example be able to see the first value on \\`2019-01-01  00:00:00.000 \\``,\n      },\n    },\n  )\n  .add(\n    'x scale year scale: custom timezone - same zone tooltip',\n    () => {\n      return (\n        <Chart className={'story-chart'}>\n          <Axis\n            id={getAxisId('time')}\n            position={Position.Bottom}\n            tickFormat={(d) => {\n              return DateTime.fromMillis(d, { zone: 'utc-6' }).toISO();\n              // return DateTime.fromMillis(d, { zone: 'utc-6' }).toISO();\n            }}\n          />\n          <Axis id={getAxisId('y')} position={Position.Left} />\n          <LineSeries\n            id={getSpecId('lines')}\n            xScaleType={ScaleType.Time}\n            yScaleType={ScaleType.Linear}\n            xAccessor={1}\n            yAccessors={[2]}\n            timeZone={'utc-6'}\n            data={[\n              ['2014-01-01T00:00:00.000-06:00', 1388556000000, 6206],\n              ['2015-01-01T00:00:00.000-06:00', 1420092000000, 5674],\n              ['2016-01-01T00:00:00.000-06:00', 1451628000000, 4148],\n              ['2017-01-01T00:00:00.000-06:00', 1483250400000, 6206],\n              ['2018-01-01T00:00:00.000-06:00', 1514786400000, 3698],\n            ]}\n          />\n        </Chart>\n      );\n    },\n    {\n      info: {\n        text: `You can visualize data in a different timezone than your local or UTC zones.\n        Specify the \\`timeZone={'utc-6'}\\` property with the correct timezone and\n        remember to apply the same timezone also to each formatted tick in \\`tickFormat\\` `,\n      },\n    },\n  );\n\n  ","import { GeometryStyle } from '../series/rendering';\nimport { Margins } from '../utils/dimensions';\nimport { LIGHT_THEME } from './light_theme';\n\ninterface Visible {\n  visible: boolean;\n}\ninterface Radius {\n  radius: number;\n}\nexport interface TextStyle {\n  fontSize: number;\n  fontFamily: string;\n  fontStyle?: string;\n  fill: string;\n  padding: number;\n}\nexport interface GeometryStyle {\n  stroke: string;\n  strokeWidth: number;\n  fill?: string;\n  opacity?: number;\n}\n\nexport interface SharedGeometryStyle {\n  [key: string]: GeometryStyle;\n}\n\nexport interface StrokeStyle {\n  /** The stroke color in hex, rgba, hsl */\n  stroke: string;\n  /** The stroke width in pixel */\n  strokeWidth: number;\n  /** The dash array for dashed strokes */\n  dash?: number[];\n}\nexport interface FillStyle {\n  /** The fill color in hex, rgba, hsl */\n  fill: string;\n}\nexport interface Opacity {\n  /** The opacity value from 0 to 1 */\n  opacity: number;\n}\n\nexport interface AxisConfig {\n  axisTitleStyle: TextStyle;\n  axisLineStyle: StrokeStyle;\n  tickLabelStyle: TextStyle;\n  tickLineStyle: StrokeStyle;\n}\nexport interface GridLineConfig {\n  stroke?: string;\n  strokeWidth?: number;\n  opacity?: number;\n  dash?: number[];\n}\nexport interface ScalesConfig {\n  /**\n   * The proportion of the range that is reserved for blank space between bands.\n   * A value of 0 means no blank space between bands, and a value of 1 means a bandwidth of zero.\n   * A number between 0 and 1.\n   */\n  barsPadding: number;\n}\nexport interface ColorConfig {\n  vizColors: string[];\n  defaultVizColor: string;\n}\nexport interface LegendStyle {\n  verticalWidth: number;\n  horizontalHeight: number;\n}\nexport interface Theme {\n  /**\n   * Space btw parent DOM element and first available element of the chart (axis if exists, else the chart itself)\n   */\n  chartMargins: Margins;\n  /**\n   * Space btw the chart geometries and axis; if no axis, pads space btw chart & container\n   */\n  chartPaddings: Margins;\n  lineSeriesStyle: LineSeriesStyle;\n  areaSeriesStyle: AreaSeriesStyle;\n  barSeriesStyle: BarSeriesStyle;\n  sharedStyle: SharedGeometryStyle;\n  axes: AxisConfig;\n  scales: ScalesConfig;\n  colors: ColorConfig;\n  legend: LegendStyle;\n  crosshair: CrosshairStyle;\n}\n\nexport type DisplayValueStyle = TextStyle & {\n  offsetX?: number;\n  offsetY?: number;\n};\n\nexport interface BarSeriesStyle {\n  border: StrokeStyle & Visible;\n  displayValue?: DisplayValueStyle;\n}\n\nexport type CustomBarSeriesStyle = BarSeriesStyle & Partial<Opacity>;\n\nexport interface LineSeriesStyle {\n  line: LineStyle;\n  border: StrokeStyle & Visible;\n  point: PointStyle;\n}\n\nexport type PointStyle = StrokeStyle & Opacity & Visible & Radius;\nexport type LineStyle = StrokeStyle & Visible & Partial<Opacity>;\nexport type AreaStyle = FillStyle & Opacity & Visible;\n\nexport interface AreaSeriesStyle {\n  area: AreaStyle;\n  line: LineStyle;\n  border: StrokeStyle & Visible;\n  point: PointStyle;\n}\nexport interface CrosshairStyle {\n  band: FillStyle & Visible;\n  line: StrokeStyle & Visible;\n}\n\nexport interface LineAnnotationStyle {\n  line: StrokeStyle & Opacity;\n  details: TextStyle;\n}\n\nexport type RectAnnotationStyle = StrokeStyle & FillStyle & Opacity;\n\nexport interface PartialTheme {\n  chartMargins?: Margins;\n  chartPaddings?: Margins;\n  lineSeriesStyle?: LineSeriesStyle;\n  areaSeriesStyle?: AreaSeriesStyle;\n  barSeriesStyle?: BarSeriesStyle;\n  sharedStyle?: SharedGeometryStyle;\n  axes?: Partial<AxisConfig>;\n  scales?: Partial<ScalesConfig>;\n  colors?: Partial<ColorConfig>;\n  legend?: Partial<LegendStyle>;\n  crosshair?: Partial<CrosshairStyle>;\n}\n\nexport const DEFAULT_GRID_LINE_CONFIG: GridLineConfig = {\n  stroke: 'red',\n  strokeWidth: 1,\n  opacity: 1,\n};\n\nexport const DEFAULT_ANNOTATION_LINE_STYLE: LineAnnotationStyle = {\n  line: {\n    stroke: '#000',\n    strokeWidth: 3,\n    opacity: 1,\n  },\n  details: {\n    fontSize: 10,\n    fontFamily: `'Open Sans', Helvetica, Arial, sans-serif`,\n    fontStyle: 'normal',\n    fill: 'gray',\n    padding: 0,\n  },\n};\n\nexport const DEFAULT_ANNOTATION_RECT_STYLE: RectAnnotationStyle = {\n  stroke: '#e5e5e5',\n  strokeWidth: 1,\n  opacity: 0.5,\n  fill: '#e5e5e5',\n};\n\nexport function mergeWithDefaultGridLineConfig(config: GridLineConfig): GridLineConfig {\n  const strokeWidth =\n    config.strokeWidth != null ? config.strokeWidth : DEFAULT_GRID_LINE_CONFIG.strokeWidth;\n  const opacity = config.opacity != null ? config.opacity : DEFAULT_GRID_LINE_CONFIG.opacity;\n\n  return {\n    stroke: config.stroke || DEFAULT_GRID_LINE_CONFIG.stroke,\n    dash: config.dash || DEFAULT_GRID_LINE_CONFIG.dash,\n    strokeWidth,\n    opacity,\n  };\n}\n\nexport function mergeWithDefaultAnnotationLine(\n  config?: Partial<LineAnnotationStyle>,\n): LineAnnotationStyle {\n  const defaultLine = DEFAULT_ANNOTATION_LINE_STYLE.line;\n  const defaultDetails = DEFAULT_ANNOTATION_LINE_STYLE.details;\n  const mergedConfig: LineAnnotationStyle = { ...DEFAULT_ANNOTATION_LINE_STYLE };\n\n  if (!config) {\n    return mergedConfig;\n  }\n\n  if (config.line) {\n    mergedConfig.line = {\n      ...defaultLine,\n      ...config.line,\n    };\n  }\n\n  if (config.details) {\n    mergedConfig.details = {\n      ...defaultDetails,\n      ...config.details,\n    };\n  }\n\n  return mergedConfig;\n}\n\nexport function mergeWithDefaultAnnotationRect(config?: Partial<RectAnnotationStyle>): RectAnnotationStyle {\n  if (!config) {\n    return DEFAULT_ANNOTATION_RECT_STYLE;\n  }\n\n  return {\n    ...DEFAULT_ANNOTATION_RECT_STYLE,\n    ...config,\n  };\n}\n\nexport function mergeWithDefaultTheme(\n  theme: PartialTheme,\n  defaultTheme: Theme = LIGHT_THEME,\n): Theme {\n  const customTheme: Theme = {\n    ...defaultTheme,\n  };\n  if (theme.chartMargins) {\n    customTheme.chartMargins = {\n      ...defaultTheme.chartMargins,\n      ...theme.chartMargins,\n    };\n  }\n  if (theme.chartPaddings) {\n    customTheme.chartPaddings = {\n      ...defaultTheme.chartPaddings,\n      ...theme.chartPaddings,\n    };\n  }\n  if (theme.areaSeriesStyle) {\n    customTheme.areaSeriesStyle = {\n      ...defaultTheme.areaSeriesStyle,\n      ...theme.areaSeriesStyle,\n    };\n  }\n  if (theme.lineSeriesStyle) {\n    customTheme.lineSeriesStyle = {\n      ...defaultTheme.lineSeriesStyle,\n      ...theme.lineSeriesStyle,\n    };\n  }\n  if (theme.barSeriesStyle) {\n    customTheme.barSeriesStyle = {\n      ...defaultTheme.barSeriesStyle,\n      ...theme.barSeriesStyle,\n    };\n  }\n  if (theme.sharedStyle) {\n    customTheme.sharedStyle = {\n      ...defaultTheme.sharedStyle,\n      ...theme.sharedStyle,\n    };\n  }\n  if (theme.scales) {\n    customTheme.scales = {\n      ...defaultTheme.scales,\n      ...theme.scales,\n    };\n  }\n  if (theme.axes) {\n    customTheme.axes = {\n      ...defaultTheme.axes,\n      ...theme.axes,\n    };\n  }\n  if (theme.colors) {\n    customTheme.colors = {\n      ...defaultTheme.colors,\n      ...theme.colors,\n    };\n  }\n  if (theme.legend) {\n    customTheme.legend = {\n      ...defaultTheme.legend,\n      ...theme.legend,\n    };\n  }\n  if (theme.crosshair) {\n    customTheme.crosshair = {\n      ...defaultTheme.crosshair,\n      ...theme.crosshair,\n    };\n  }\n  return customTheme;\n}\ntry {\n    // @ts-ignore\n    mergeWithDefaultGridLineConfig.displayName = \"mergeWithDefaultGridLineConfig\";\n    // @ts-ignore\n    mergeWithDefaultGridLineConfig.__docgenInfo = { \"description\": \"\", \"displayName\": \"mergeWithDefaultGridLineConfig\", \"props\": { \"stroke\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"stroke\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"strokeWidth\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"strokeWidth\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"opacity\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"opacity\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"dash\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"dash\", \"required\": false, \"type\": { \"name\": \"number[]\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/themes/theme.ts#mergeWithDefaultGridLineConfig\"] = { docgenInfo: mergeWithDefaultGridLineConfig.__docgenInfo, name: \"mergeWithDefaultGridLineConfig\", path: \"src/lib/themes/theme.ts#mergeWithDefaultGridLineConfig\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    mergeWithDefaultAnnotationLine.displayName = \"mergeWithDefaultAnnotationLine\";\n    // @ts-ignore\n    mergeWithDefaultAnnotationLine.__docgenInfo = { \"description\": \"\", \"displayName\": \"mergeWithDefaultAnnotationLine\", \"props\": { \"line\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"line\", \"required\": false, \"type\": { \"name\": \"StrokeStyle & Opacity\" } }, \"details\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"details\", \"required\": false, \"type\": { \"name\": \"TextStyle\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/themes/theme.ts#mergeWithDefaultAnnotationLine\"] = { docgenInfo: mergeWithDefaultAnnotationLine.__docgenInfo, name: \"mergeWithDefaultAnnotationLine\", path: \"src/lib/themes/theme.ts#mergeWithDefaultAnnotationLine\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    mergeWithDefaultAnnotationRect.displayName = \"mergeWithDefaultAnnotationRect\";\n    // @ts-ignore\n    mergeWithDefaultAnnotationRect.__docgenInfo = { \"description\": \"\", \"displayName\": \"mergeWithDefaultAnnotationRect\", \"props\": { \"stroke\": { \"defaultValue\": null, \"description\": \"The stroke color in hex, rgba, hsl\", \"name\": \"stroke\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"strokeWidth\": { \"defaultValue\": null, \"description\": \"The stroke width in pixel\", \"name\": \"strokeWidth\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"dash\": { \"defaultValue\": null, \"description\": \"The dash array for dashed strokes\", \"name\": \"dash\", \"required\": false, \"type\": { \"name\": \"number[]\" } }, \"fill\": { \"defaultValue\": null, \"description\": \"The fill color in hex, rgba, hsl\", \"name\": \"fill\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"opacity\": { \"defaultValue\": null, \"description\": \"The opacity value from 0 to 1\", \"name\": \"opacity\", \"required\": false, \"type\": { \"name\": \"number\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/themes/theme.ts#mergeWithDefaultAnnotationRect\"] = { docgenInfo: mergeWithDefaultAnnotationRect.__docgenInfo, name: \"mergeWithDefaultAnnotationRect\", path: \"src/lib/themes/theme.ts#mergeWithDefaultAnnotationRect\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { palettes } from '@elastic/eui';\nimport { Theme } from './theme';\n\nimport {\n  DEFAULT_CHART_MARGINS,\n  DEFAULT_CHART_PADDING,\n  DEFAULT_GEOMETRY_STYLES,\n  DEFAULT_MISSING_COLOR,\n} from './theme_commons';\n\nexport const LIGHT_THEME: Theme = {\n  chartPaddings: DEFAULT_CHART_PADDING,\n  chartMargins: DEFAULT_CHART_MARGINS,\n  lineSeriesStyle: {\n    line: {\n      stroke: DEFAULT_MISSING_COLOR,\n      strokeWidth: 1,\n      visible: true,\n    },\n    border: {\n      stroke: 'gray',\n      strokeWidth: 2,\n      visible: false,\n    },\n    point: {\n      visible: true,\n      radius: 1,\n      stroke: 'white',\n      strokeWidth: 0.5,\n      opacity: 1,\n    },\n  },\n  areaSeriesStyle: {\n    area: {\n      fill: DEFAULT_MISSING_COLOR,\n      visible: true,\n      opacity: 0.8,\n    },\n    line: {\n      stroke: DEFAULT_MISSING_COLOR,\n      strokeWidth: 1.5,\n      visible: true,\n    },\n    border: {\n      stroke: 'gray',\n      strokeWidth: 2,\n      visible: false,\n    },\n    point: {\n      visible: true,\n      radius: 1,\n      stroke: 'white',\n      strokeWidth: 0.5,\n      opacity: 1,\n    },\n  },\n  barSeriesStyle: {\n    border: {\n      stroke: 'white',\n      strokeWidth: 1,\n      visible: false,\n    },\n    displayValue: {\n      fontSize: 10,\n      fontStyle: 'normal',\n      fontFamily: `'Open Sans', Helvetica, Arial, sans-serif`,\n      padding: 0,\n      fill: 'gray',\n      offsetX: 0,\n      offsetY: 0,\n    },\n  },\n  sharedStyle: DEFAULT_GEOMETRY_STYLES,\n  scales: {\n    barsPadding: 0.25,\n  },\n  axes: {\n    axisTitleStyle: {\n      fontSize: 12,\n      fontStyle: 'bold',\n      fontFamily: `'Open Sans', Helvetica, Arial, sans-serif`,\n      padding: 5,\n      fill: 'gray',\n    },\n    axisLineStyle: {\n      stroke: 'gray',\n      strokeWidth: 1,\n    },\n    tickLabelStyle: {\n      fontSize: 10,\n      fontFamily: `'Open Sans', Helvetica, Arial, sans-serif`,\n      fontStyle: 'normal',\n      fill: 'gray',\n      padding: 0,\n    },\n    tickLineStyle: {\n      stroke: 'gray',\n      strokeWidth: 1,\n    },\n  },\n  colors: {\n    vizColors: palettes.euiPaletteColorBlind.colors,\n    defaultVizColor: DEFAULT_MISSING_COLOR,\n  },\n  legend: {\n    verticalWidth: 160,\n    horizontalHeight: 64,\n  },\n  crosshair: {\n    band: {\n      fill: 'lightgray',\n      visible: true,\n    },\n    line: {\n      stroke: 'gray',\n      strokeWidth: 1,\n      dash: [5, 5],\n      visible: true,\n    },\n  },\n};\n","import {\n  BarGeometry,\n  IndexedGeometry,\n  isBarGeometry,\n  isPointGeometry,\n  PointGeometry,\n} from '../series/rendering';\nimport { Datum, Rotation } from '../series/specs';\nimport { Dimensions } from './dimensions';\n\n/** The type of tooltip to use */\nexport enum TooltipType {\n  /** Vertical cursor parallel to x axis */\n  VerticalCursor = 'vertical',\n  /** Vertical and horizontal cursors */\n  Crosshairs = 'cross',\n  /** Follor the mouse coordinates */\n  Follow = 'follow',\n  /** Hide every tooltip */\n  None = 'none',\n}\nexport interface TooltipValue {\n  name: string;\n  value: any;\n  color: string;\n  isHighlighted: boolean;\n  isXValue: boolean;\n  seriesKey: string;\n}\nexport interface HighlightedElement {\n  position: {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    type: 'rect' | 'circle';\n  };\n  value: Datum;\n}\n/**\n * Get the cursor position depending on the chart rotation\n * @param xPos x position relative to chart\n * @param yPos y position relative to chart\n * @param chartRotation the chart rotation\n * @param chartDimension the chart dimension\n */\nexport function getValidXPosition(\n  xPos: number,\n  yPos: number,\n  chartRotation: Rotation,\n  chartDimension: Dimensions,\n) {\n  switch (chartRotation) {\n    case 0:\n      return xPos;\n    case 180:\n      return chartDimension.width - xPos;\n    case 90:\n      return yPos;\n    case -90:\n      return chartDimension.height - yPos;\n  }\n}\nexport function getValidYPosition(\n  xPos: number,\n  yPos: number,\n  chartRotation: Rotation,\n  chartDimension: Dimensions,\n) {\n  switch (chartRotation) {\n    case 0:\n      return yPos;\n    case 180:\n      return chartDimension.height - yPos;\n    case -90:\n      return xPos;\n    case 90:\n      return chartDimension.width - xPos;\n  }\n}\n\nexport function isCrosshairTooltipType(type: TooltipType) {\n  return type === TooltipType.VerticalCursor || type === TooltipType.Crosshairs;\n}\nexport function isFollowTooltipType(type: TooltipType) {\n  return type === TooltipType.Follow;\n}\n\nexport function areIndexedGeometryArraysEquals(arr1: IndexedGeometry[], arr2: IndexedGeometry[]) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = arr1.length; i--; ) {\n    return areIndexedGeomsEquals(arr1[i], arr2[i]);\n  }\n  return true;\n}\n\nexport function areIndexedGeomsEquals(ig1: IndexedGeometry, ig2: IndexedGeometry) {\n  if (isPointGeometry(ig1) && isPointGeometry(ig2)) {\n    return arePointsEqual(ig1, ig2);\n  }\n  if (isBarGeometry(ig1) && isBarGeometry(ig2)) {\n    return areBarEqual(ig1, ig2);\n  }\n  return false;\n}\n\nexport function arePointsEqual(ig1: PointGeometry, ig2: PointGeometry) {\n  return (\n    ig1.geometryId.specId === ig2.geometryId.specId &&\n    ig1.color === ig2.color &&\n    ig1.x === ig2.x &&\n    ig1.transform.x === ig2.transform.x &&\n    ig1.transform.y === ig2.transform.y &&\n    ig1.y === ig2.y &&\n    ig1.radius === ig2.radius\n  );\n}\nexport function areBarEqual(ig1: BarGeometry, ig2: BarGeometry) {\n  return (\n    ig1.geometryId.specId === ig2.geometryId.specId &&\n    ig1.color === ig2.color &&\n    ig1.x === ig2.x &&\n    ig1.y === ig2.y &&\n    ig1.width === ig2.width &&\n    ig1.height === ig2.height\n  );\n}\ntry {\n    // @ts-ignore\n    getValidXPosition.displayName = \"getValidXPosition\";\n    // @ts-ignore\n    getValidXPosition.__docgenInfo = { \"description\": \"Get the cursor position depending on the chart rotation\\n@param xPos x position relative to chart\\n@param yPos y position relative to chart\\n@param chartRotation the chart rotation\\n@param chartDimension the chart dimension\", \"displayName\": \"getValidXPosition\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/utils/interactions.ts#getValidXPosition\"] = { docgenInfo: getValidXPosition.__docgenInfo, name: \"getValidXPosition\", path: \"src/lib/utils/interactions.ts#getValidXPosition\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    isCrosshairTooltipType.displayName = \"isCrosshairTooltipType\";\n    // @ts-ignore\n    isCrosshairTooltipType.__docgenInfo = { \"description\": \"\", \"displayName\": \"isCrosshairTooltipType\", \"props\": { \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of a string.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"charAt\": { \"defaultValue\": null, \"description\": \"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.\", \"name\": \"charAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => string\" } }, \"charCodeAt\": { \"defaultValue\": null, \"description\": \"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.\", \"name\": \"charCodeAt\", \"required\": true, \"type\": { \"name\": \"(index: number) => number\" } }, \"concat\": { \"defaultValue\": null, \"description\": \"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.\", \"name\": \"concat\", \"required\": true, \"type\": { \"name\": \"(...strings: string[]) => string\" } }, \"indexOf\": { \"defaultValue\": null, \"description\": \"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.\", \"name\": \"indexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"lastIndexOf\": { \"defaultValue\": null, \"description\": \"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.\", \"name\": \"lastIndexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"localeCompare\": { \"defaultValue\": null, \"description\": \"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.\", \"name\": \"localeCompare\", \"required\": true, \"type\": { \"name\": \"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }\" } }, \"match\": { \"defaultValue\": null, \"description\": \"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.\", \"name\": \"match\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }\" } }, \"replace\": { \"defaultValue\": null, \"description\": \"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.\", \"name\": \"replace\", \"required\": true, \"type\": { \"name\": \"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri...\" } }, \"search\": { \"defaultValue\": null, \"description\": \"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.\", \"name\": \"search\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }\" } }, \"slice\": { \"defaultValue\": null, \"description\": \"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\rIf this value is not specified, the substring continues to the end of stringObj.\", \"name\": \"slice\", \"required\": true, \"type\": { \"name\": \"(start?: number, end?: number) => string\" } }, \"split\": { \"defaultValue\": null, \"description\": \"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.\", \"name\": \"split\", \"required\": true, \"type\": { \"name\": \"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }\" } }, \"substring\": { \"defaultValue\": null, \"description\": \"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\rIf end is omitted, the characters from start through the end of the original string are returned.\", \"name\": \"substring\", \"required\": true, \"type\": { \"name\": \"(start: number, end?: number) => string\" } }, \"toLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to lowercase.\", \"name\": \"toLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toUpperCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to uppercase.\", \"name\": \"toUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleUpperCase\": { \"defaultValue\": null, \"description\": \"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trim\": { \"defaultValue\": null, \"description\": \"Removes the leading and trailing white space and line terminator characters from a string.\", \"name\": \"trim\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"length\": { \"defaultValue\": null, \"description\": \"Returns the length of a String object.\", \"name\": \"length\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"substr\": { \"defaultValue\": null, \"description\": \"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.\", \"name\": \"substr\", \"required\": true, \"type\": { \"name\": \"(from: number, length?: number) => string\" } }, \"valueOf\": { \"defaultValue\": null, \"description\": \"Returns the primitive value of the specified object.\", \"name\": \"valueOf\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"codePointAt\": { \"defaultValue\": null, \"description\": \"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\r\\nthe String resulting from converting this object to a String.\\r\\nIf there is no element at that position, the result is undefined.\\r\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\", \"name\": \"codePointAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => number\" } }, \"includes\": { \"defaultValue\": null, \"description\": \"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\r\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.\", \"name\": \"includes\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"endsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nendPosition \\u2013 length(this). Otherwise returns false.\", \"name\": \"endsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, endPosition?: number) => boolean\" } }, \"normalize\": { \"defaultValue\": null, \"description\": \"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\r\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\", \"name\": \"normalize\", \"required\": true, \"type\": { \"name\": \"{ (form: \\\"NFC\\\" | \\\"NFD\\\" | \\\"NFKC\\\" | \\\"NFKD\\\"): string; (form?: string): string; }\" } }, \"repeat\": { \"defaultValue\": null, \"description\": \"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append\", \"name\": \"repeat\", \"required\": true, \"type\": { \"name\": \"(count: number) => string\" } }, \"startsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nposition. Otherwise returns false.\", \"name\": \"startsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"anchor\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name\", \"name\": \"anchor\", \"required\": true, \"type\": { \"name\": \"(name: string) => string\" } }, \"big\": { \"defaultValue\": null, \"description\": \"Returns a <big> HTML element\", \"name\": \"big\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"blink\": { \"defaultValue\": null, \"description\": \"Returns a <blink> HTML element\", \"name\": \"blink\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"bold\": { \"defaultValue\": null, \"description\": \"Returns a <b> HTML element\", \"name\": \"bold\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fixed\": { \"defaultValue\": null, \"description\": \"Returns a <tt> HTML element\", \"name\": \"fixed\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fontcolor\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the color attribute value\", \"name\": \"fontcolor\", \"required\": true, \"type\": { \"name\": \"(color: string) => string\" } }, \"fontsize\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value\", \"name\": \"fontsize\", \"required\": true, \"type\": { \"name\": \"{ (size: number): string; (size: string): string; }\" } }, \"italics\": { \"defaultValue\": null, \"description\": \"Returns an <i> HTML element\", \"name\": \"italics\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"link\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML element and sets the href attribute value\", \"name\": \"link\", \"required\": true, \"type\": { \"name\": \"(url: string) => string\" } }, \"small\": { \"defaultValue\": null, \"description\": \"Returns a <small> HTML element\", \"name\": \"small\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"strike\": { \"defaultValue\": null, \"description\": \"Returns a <strike> HTML element\", \"name\": \"strike\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sub\": { \"defaultValue\": null, \"description\": \"Returns a <sub> HTML element\", \"name\": \"sub\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sup\": { \"defaultValue\": null, \"description\": \"Returns a <sup> HTML element\", \"name\": \"sup\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"__@iterator\": { \"defaultValue\": null, \"description\": \"Iterator\", \"name\": \"__@iterator\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<string>\" } }, \"padStart\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padStart\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"padEnd\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padEnd\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"trimLeft\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the left end of a string.\", \"name\": \"trimLeft\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trimRight\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the right end of a string.\", \"name\": \"trimRight\", \"required\": true, \"type\": { \"name\": \"() => string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/utils/interactions.ts#isCrosshairTooltipType\"] = { docgenInfo: isCrosshairTooltipType.__docgenInfo, name: \"isCrosshairTooltipType\", path: \"src/lib/utils/interactions.ts#isCrosshairTooltipType\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    isFollowTooltipType.displayName = \"isFollowTooltipType\";\n    // @ts-ignore\n    isFollowTooltipType.__docgenInfo = { \"description\": \"\", \"displayName\": \"isFollowTooltipType\", \"props\": { \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of a string.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"charAt\": { \"defaultValue\": null, \"description\": \"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.\", \"name\": \"charAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => string\" } }, \"charCodeAt\": { \"defaultValue\": null, \"description\": \"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.\", \"name\": \"charCodeAt\", \"required\": true, \"type\": { \"name\": \"(index: number) => number\" } }, \"concat\": { \"defaultValue\": null, \"description\": \"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.\", \"name\": \"concat\", \"required\": true, \"type\": { \"name\": \"(...strings: string[]) => string\" } }, \"indexOf\": { \"defaultValue\": null, \"description\": \"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.\", \"name\": \"indexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"lastIndexOf\": { \"defaultValue\": null, \"description\": \"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.\", \"name\": \"lastIndexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"localeCompare\": { \"defaultValue\": null, \"description\": \"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.\", \"name\": \"localeCompare\", \"required\": true, \"type\": { \"name\": \"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }\" } }, \"match\": { \"defaultValue\": null, \"description\": \"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.\", \"name\": \"match\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }\" } }, \"replace\": { \"defaultValue\": null, \"description\": \"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.\", \"name\": \"replace\", \"required\": true, \"type\": { \"name\": \"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri...\" } }, \"search\": { \"defaultValue\": null, \"description\": \"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.\", \"name\": \"search\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }\" } }, \"slice\": { \"defaultValue\": null, \"description\": \"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\rIf this value is not specified, the substring continues to the end of stringObj.\", \"name\": \"slice\", \"required\": true, \"type\": { \"name\": \"(start?: number, end?: number) => string\" } }, \"split\": { \"defaultValue\": null, \"description\": \"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.\", \"name\": \"split\", \"required\": true, \"type\": { \"name\": \"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }\" } }, \"substring\": { \"defaultValue\": null, \"description\": \"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\rIf end is omitted, the characters from start through the end of the original string are returned.\", \"name\": \"substring\", \"required\": true, \"type\": { \"name\": \"(start: number, end?: number) => string\" } }, \"toLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to lowercase.\", \"name\": \"toLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toUpperCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to uppercase.\", \"name\": \"toUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleUpperCase\": { \"defaultValue\": null, \"description\": \"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trim\": { \"defaultValue\": null, \"description\": \"Removes the leading and trailing white space and line terminator characters from a string.\", \"name\": \"trim\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"length\": { \"defaultValue\": null, \"description\": \"Returns the length of a String object.\", \"name\": \"length\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"substr\": { \"defaultValue\": null, \"description\": \"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.\", \"name\": \"substr\", \"required\": true, \"type\": { \"name\": \"(from: number, length?: number) => string\" } }, \"valueOf\": { \"defaultValue\": null, \"description\": \"Returns the primitive value of the specified object.\", \"name\": \"valueOf\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"codePointAt\": { \"defaultValue\": null, \"description\": \"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\r\\nthe String resulting from converting this object to a String.\\r\\nIf there is no element at that position, the result is undefined.\\r\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\", \"name\": \"codePointAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => number\" } }, \"includes\": { \"defaultValue\": null, \"description\": \"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\r\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.\", \"name\": \"includes\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"endsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nendPosition \\u2013 length(this). Otherwise returns false.\", \"name\": \"endsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, endPosition?: number) => boolean\" } }, \"normalize\": { \"defaultValue\": null, \"description\": \"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\r\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\", \"name\": \"normalize\", \"required\": true, \"type\": { \"name\": \"{ (form: \\\"NFC\\\" | \\\"NFD\\\" | \\\"NFKC\\\" | \\\"NFKD\\\"): string; (form?: string): string; }\" } }, \"repeat\": { \"defaultValue\": null, \"description\": \"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append\", \"name\": \"repeat\", \"required\": true, \"type\": { \"name\": \"(count: number) => string\" } }, \"startsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nposition. Otherwise returns false.\", \"name\": \"startsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"anchor\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name\", \"name\": \"anchor\", \"required\": true, \"type\": { \"name\": \"(name: string) => string\" } }, \"big\": { \"defaultValue\": null, \"description\": \"Returns a <big> HTML element\", \"name\": \"big\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"blink\": { \"defaultValue\": null, \"description\": \"Returns a <blink> HTML element\", \"name\": \"blink\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"bold\": { \"defaultValue\": null, \"description\": \"Returns a <b> HTML element\", \"name\": \"bold\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fixed\": { \"defaultValue\": null, \"description\": \"Returns a <tt> HTML element\", \"name\": \"fixed\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fontcolor\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the color attribute value\", \"name\": \"fontcolor\", \"required\": true, \"type\": { \"name\": \"(color: string) => string\" } }, \"fontsize\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value\", \"name\": \"fontsize\", \"required\": true, \"type\": { \"name\": \"{ (size: number): string; (size: string): string; }\" } }, \"italics\": { \"defaultValue\": null, \"description\": \"Returns an <i> HTML element\", \"name\": \"italics\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"link\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML element and sets the href attribute value\", \"name\": \"link\", \"required\": true, \"type\": { \"name\": \"(url: string) => string\" } }, \"small\": { \"defaultValue\": null, \"description\": \"Returns a <small> HTML element\", \"name\": \"small\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"strike\": { \"defaultValue\": null, \"description\": \"Returns a <strike> HTML element\", \"name\": \"strike\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sub\": { \"defaultValue\": null, \"description\": \"Returns a <sub> HTML element\", \"name\": \"sub\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sup\": { \"defaultValue\": null, \"description\": \"Returns a <sup> HTML element\", \"name\": \"sup\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"__@iterator\": { \"defaultValue\": null, \"description\": \"Iterator\", \"name\": \"__@iterator\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<string>\" } }, \"padStart\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padStart\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"padEnd\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padEnd\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"trimLeft\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the left end of a string.\", \"name\": \"trimLeft\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trimRight\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the right end of a string.\", \"name\": \"trimRight\", \"required\": true, \"type\": { \"name\": \"() => string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/utils/interactions.ts#isFollowTooltipType\"] = { docgenInfo: isFollowTooltipType.__docgenInfo, name: \"isFollowTooltipType\", path: \"src/lib/utils/interactions.ts#isFollowTooltipType\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    TooltipType.displayName = \"TooltipType\";\n    // @ts-ignore\n    TooltipType.__docgenInfo = { \"description\": \"The type of tooltip to use\", \"displayName\": \"TooltipType\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/utils/interactions.ts#TooltipType\"] = { docgenInfo: TooltipType.__docgenInfo, name: \"TooltipType\", path: \"src/lib/utils/interactions.ts#TooltipType\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { findDataSeriesByColorValues } from '../../state/utils';\nimport { ColorConfig } from '../themes/theme';\nimport { Accessor } from '../utils/accessor';\nimport { GroupId, SpecId } from '../utils/ids';\nimport { splitSpecsByGroupId, YBasicSeriesSpec } from './domains/y_domain';\nimport { formatNonStackedDataSeriesValues } from './nonstacked_series_utils';\nimport { BasicSeriesSpec, Datum, SeriesAccessors } from './specs';\nimport { formatStackedDataSeriesValues } from './stacked_series_utils';\n\nexport interface RawDataSeriesDatum {\n  /** the x value */\n  x: number | string;\n  /** the main y metric */\n  y1: number | null;\n  /** the optional y0 metric, used for bars or area with a lower bound */\n  y0?: number | null;\n  /** the datum */\n  datum?: any;\n}\n\nexport interface DataSeriesDatum {\n  x: number | string;\n  /** the max y value */\n  y1: number | null;\n  /** the minimum y value */\n  y0: number | null;\n  /** initial y1 value, non stacked */\n  initialY1: number | null;\n  /** initial y0 value, non stacked */\n  initialY0: number | null;\n  /** the datum */\n  datum?: any;\n}\n\nexport interface DataSeries {\n  specId: SpecId;\n  key: any[];\n  seriesColorKey: string;\n  data: DataSeriesDatum[];\n}\nexport interface RawDataSeries {\n  specId: SpecId;\n  key: any[];\n  seriesColorKey: string;\n  data: RawDataSeriesDatum[];\n}\n\nexport interface FormattedDataSeries {\n  groupId: GroupId;\n  dataSeries: DataSeries[];\n  counts: DataSeriesCounts;\n}\n\nexport interface DataSeriesCounts {\n  barSeries: number;\n  lineSeries: number;\n  areaSeries: number;\n}\n\nexport interface DataSeriesColorsValues {\n  specId: SpecId;\n  colorValues: any[];\n  lastValue?: any;\n  specSortIndex?: number;\n}\n\n/**\n * Split a dataset into multiple series, each having a key with the relative\n * series configuration\n */\nexport function splitSeries(\n  data: Datum[],\n  accessors: SeriesAccessors,\n  specId: SpecId,\n): {\n  rawDataSeries: RawDataSeries[];\n  colorsValues: Map<string, any[]>;\n  xValues: Set<any>;\n  splitSeriesLastValues: Map<string, any>;\n} {\n  const { xAccessor, yAccessors, y0Accessors, splitSeriesAccessors = [] } = accessors;\n  const colorAccessors = accessors.colorAccessors ? accessors.colorAccessors : splitSeriesAccessors;\n  const isMultipleY = yAccessors && yAccessors.length > 1;\n  const series = new Map<string, RawDataSeries>();\n  const colorsValues = new Map<string, any[]>();\n  const xValues = new Set<any>();\n  const splitSeriesLastValues = new Map<string, any>();\n\n  data.forEach((datum) => {\n    const seriesKey = getAccessorsValues(datum, splitSeriesAccessors);\n    if (isMultipleY) {\n      yAccessors.forEach((accessor, index) => {\n        const colorValues = getColorValues(datum, colorAccessors, accessor);\n        const colorValuesKey = getColorValuesAsString(colorValues, specId);\n        colorsValues.set(colorValuesKey, colorValues);\n        const cleanedDatum = cleanDatum(\n          datum,\n          xAccessor,\n          accessor,\n          y0Accessors && y0Accessors[index],\n        );\n        splitSeriesLastValues.set(colorValuesKey, cleanedDatum.y1);\n        xValues.add(cleanedDatum.x);\n        updateSeriesMap(series, [...seriesKey, accessor], cleanedDatum, specId, colorValuesKey);\n      }, {});\n    } else {\n      const colorValues = getColorValues(datum, colorAccessors);\n      const colorValuesKey = getColorValuesAsString(colorValues, specId);\n      colorsValues.set(colorValuesKey, colorValues);\n      const cleanedDatum = cleanDatum(\n        datum,\n        xAccessor,\n        yAccessors[0],\n        y0Accessors && y0Accessors[0],\n      );\n      splitSeriesLastValues.set(colorValuesKey, cleanedDatum.y1);\n      xValues.add(cleanedDatum.x);\n      updateSeriesMap(series, [...seriesKey], cleanedDatum, specId, colorValuesKey);\n    }\n  }, {});\n\n  return {\n    rawDataSeries: [...series.values()],\n    colorsValues,\n    xValues,\n    splitSeriesLastValues,\n  };\n}\n\n/**\n * Mutate the passed map adding or updating the DataSeries stored\n * along with the series key\n */\nfunction updateSeriesMap(\n  seriesMap: Map<string, RawDataSeries>,\n  seriesKey: any[],\n  datum: RawDataSeriesDatum,\n  specId: SpecId,\n  seriesColorKey: string,\n): Map<string, RawDataSeries> {\n  const seriesKeyString = seriesKey.join('___');\n  const series = seriesMap.get(seriesKeyString);\n  if (series) {\n    series.data.push(datum);\n  } else {\n    seriesMap.set(seriesKeyString, {\n      specId,\n      seriesColorKey,\n      key: seriesKey,\n      data: [datum],\n    });\n  }\n  return seriesMap;\n}\n\n/**\n * Get the array of values that forms a series key\n */\nfunction getAccessorsValues(datum: Datum, accessors: Accessor[] = []): any[] {\n  return accessors\n    .map((accessor) => {\n      return datum[accessor];\n    })\n    .filter((value) => value !== undefined);\n}\n\n/**\n * Get the array of values that forms a series key\n */\nfunction getColorValues(\n  datum: Datum,\n  colorAccessors: Accessor[] = [],\n  yAccessorValue?: any,\n): any[] {\n  const colorValues = getAccessorsValues(datum, colorAccessors);\n  if (yAccessorValue) {\n    return [...colorValues, yAccessorValue];\n  }\n  return colorValues;\n}\n/**\n * Get the array of values that forms a series key\n */\nexport function getColorValuesAsString(colorValues: any[], specId: SpecId): string {\n  return `specId:{${specId}},colors:{${colorValues}}`;\n}\n\n/**\n * Reformat the datum having only the required x and y property.\n */\nfunction cleanDatum(\n  datum: Datum,\n  xAccessor: Accessor,\n  yAccessor: Accessor,\n  y0Accessor?: Accessor,\n): RawDataSeriesDatum {\n  const x = datum[xAccessor];\n  const y1 = datum[yAccessor];\n  const cleanedDatum: RawDataSeriesDatum = { x, y1, datum, y0: null };\n  if (y0Accessor) {\n    cleanedDatum.y0 = datum[y0Accessor];\n  }\n  return cleanedDatum;\n}\n\nexport function getFormattedDataseries(\n  specs: YBasicSeriesSpec[],\n  dataSeries: Map<SpecId, RawDataSeries[]>,\n): {\n  stacked: FormattedDataSeries[];\n  nonStacked: FormattedDataSeries[];\n} {\n  const specsByGroupIds = splitSpecsByGroupId(specs);\n  const specsByGroupIdsEntries = [...specsByGroupIds.entries()];\n\n  const stackedFormattedDataSeries: Array<{\n    groupId: GroupId;\n    dataSeries: DataSeries[];\n    counts: DataSeriesCounts;\n  }> = [];\n  const nonStackedFormattedDataSeries: Array<{\n    groupId: GroupId;\n    dataSeries: DataSeries[];\n    counts: DataSeriesCounts;\n  }> = [];\n\n  specsByGroupIdsEntries.forEach(([groupId, groupSpecs]) => {\n    // format stacked data series\n    const stackedDataSeries = getRawDataSeries(groupSpecs.stacked, dataSeries);\n    stackedFormattedDataSeries.push({\n      groupId,\n      counts: stackedDataSeries.counts,\n      dataSeries: formatStackedDataSeriesValues(stackedDataSeries.rawDataSeries, false),\n    });\n\n    // format non stacked data series\n    const nonStackedDataSeries = getRawDataSeries(groupSpecs.nonStacked, dataSeries);\n    nonStackedFormattedDataSeries.push({\n      groupId,\n      counts: nonStackedDataSeries.counts,\n      dataSeries: formatNonStackedDataSeriesValues(nonStackedDataSeries.rawDataSeries, false),\n    });\n  });\n  return {\n    stacked: stackedFormattedDataSeries.filter((ds) => ds.dataSeries.length > 0),\n    nonStacked: nonStackedFormattedDataSeries.filter((ds) => ds.dataSeries.length > 0),\n  };\n}\n\nexport function getRawDataSeries(\n  seriesSpecs: YBasicSeriesSpec[],\n  dataSeries: Map<SpecId, RawDataSeries[]>,\n): {\n  rawDataSeries: RawDataSeries[];\n  counts: DataSeriesCounts;\n} {\n  const rawDataSeries: RawDataSeries[] = [];\n  const counts = {\n    barSeries: 0,\n    lineSeries: 0,\n    areaSeries: 0,\n  };\n  const seriesSpecsCount = seriesSpecs.length;\n  let i;\n  for (i = 0; i < seriesSpecsCount; i++) {\n    const spec = seriesSpecs[i];\n    const { id, seriesType } = spec;\n    const ds = dataSeries.get(id);\n    switch (seriesType) {\n      case 'bar':\n        counts.barSeries += ds ? ds.length : 0;\n        break;\n      case 'line':\n        counts.lineSeries += ds ? ds.length : 0;\n        break;\n      case 'area':\n        counts.areaSeries += ds ? ds.length : 0;\n        break;\n    }\n\n    if (ds) {\n      rawDataSeries.push(...ds);\n    }\n  }\n  return {\n    rawDataSeries,\n    counts,\n  };\n}\n\nexport function getSplittedSeries(\n  seriesSpecs: Map<SpecId, BasicSeriesSpec>,\n  deselectedDataSeries?: DataSeriesColorsValues[] | null,\n): {\n  splittedSeries: Map<SpecId, RawDataSeries[]>;\n  seriesColors: Map<string, DataSeriesColorsValues>;\n  xValues: Set<any>;\n} {\n  const splittedSeries = new Map<SpecId, RawDataSeries[]>();\n  const seriesColors = new Map<string, DataSeriesColorsValues>();\n  const xValues: Set<any> = new Set();\n  for (const [specId, spec] of seriesSpecs) {\n    const dataSeries = splitSeries(spec.data, spec, specId);\n    let currentRawDataSeries = dataSeries.rawDataSeries;\n    if (deselectedDataSeries) {\n      currentRawDataSeries = dataSeries.rawDataSeries.filter(\n        (series): boolean => {\n          const seriesValues = {\n            specId,\n            colorValues: series.key,\n          };\n\n          return findDataSeriesByColorValues(deselectedDataSeries, seriesValues) < 0;\n        },\n      );\n    }\n\n    splittedSeries.set(specId, currentRawDataSeries);\n\n    dataSeries.colorsValues.forEach((colorValues, key) => {\n      const lastValue = dataSeries.splitSeriesLastValues.get(key);\n\n      seriesColors.set(key, {\n        specId,\n        specSortIndex: spec.sortIndex,\n        colorValues,\n        lastValue,\n      });\n    });\n\n    for (const xValue of dataSeries.xValues) {\n      xValues.add(xValue);\n    }\n  }\n  return {\n    splittedSeries,\n    seriesColors,\n    xValues,\n  };\n}\n\nexport function getSortedDataSeriesColorsValuesMap(\n  colorValuesMap: Map<string, DataSeriesColorsValues>,\n): Map<string, DataSeriesColorsValues> {\n  const seriesColorsArray = [...colorValuesMap];\n  seriesColorsArray.sort((seriesA, seriesB) => {\n    const [, colorValuesA] = seriesA;\n    const [, colorValuesB] = seriesB;\n\n    const specAIndex =\n      colorValuesA.specSortIndex != null ? colorValuesA.specSortIndex : colorValuesMap.size;\n    const specBIndex =\n      colorValuesB.specSortIndex != null ? colorValuesB.specSortIndex : colorValuesMap.size;\n\n    return specAIndex - specBIndex;\n  });\n\n  return new Map([...seriesColorsArray]);\n}\n\nexport function getSeriesColorMap(\n  seriesColors: Map<string, DataSeriesColorsValues>,\n  chartColors: ColorConfig,\n  customColors: Map<string, string>,\n): Map<string, string> {\n  const seriesColorMap = new Map<string, string>();\n  let counter = 0;\n\n  seriesColors.forEach((value: DataSeriesColorsValues, seriesColorKey: string) => {\n    const customSeriesColor: string | undefined = customColors.get(seriesColorKey);\n    const color =\n      customSeriesColor || chartColors.vizColors[counter % chartColors.vizColors.length];\n\n    seriesColorMap.set(seriesColorKey, color);\n    counter++;\n  });\n  return seriesColorMap;\n}\ntry {\n    // @ts-ignore\n    splitSeries.displayName = \"splitSeries\";\n    // @ts-ignore\n    splitSeries.__docgenInfo = { \"description\": \"Split a dataset into multiple series, each having a key with the relative\\nseries configuration\", \"displayName\": \"splitSeries\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/series/series.ts#splitSeries\"] = { docgenInfo: splitSeries.__docgenInfo, name: \"splitSeries\", path: \"src/lib/series/series.ts#splitSeries\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    getColorValuesAsString.displayName = \"getColorValuesAsString\";\n    // @ts-ignore\n    getColorValuesAsString.__docgenInfo = { \"description\": \"Get the array of values that forms a series key\", \"displayName\": \"getColorValuesAsString\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/series/series.ts#getColorValuesAsString\"] = { docgenInfo: getColorValuesAsString.__docgenInfo, name: \"getColorValuesAsString\", path: \"src/lib/series/series.ts#getColorValuesAsString\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    getSortedDataSeriesColorsValuesMap.displayName = \"getSortedDataSeriesColorsValuesMap\";\n    // @ts-ignore\n    getSortedDataSeriesColorsValuesMap.__docgenInfo = { \"description\": \"\", \"displayName\": \"getSortedDataSeriesColorsValuesMap\", \"props\": { \"clear\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"clear\", \"required\": true, \"type\": { \"name\": \"() => void\" } }, \"delete\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"delete\", \"required\": true, \"type\": { \"name\": \"(key: string) => boolean\" } }, \"forEach\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"forEach\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: DataSeriesColorsValues, key: string, map: Map<string, DataSeriesColorsValues>) => void, thisArg?: any) => void\" } }, \"get\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"get\", \"required\": true, \"type\": { \"name\": \"(key: string) => DataSeriesColorsValues\" } }, \"has\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"has\", \"required\": true, \"type\": { \"name\": \"(key: string) => boolean\" } }, \"set\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"set\", \"required\": true, \"type\": { \"name\": \"(key: string, value: DataSeriesColorsValues) => Map<string, DataSeriesColorsValues>\" } }, \"size\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"size\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"__@iterator\": { \"defaultValue\": null, \"description\": \"Returns an iterable of entries in the map.\", \"name\": \"__@iterator\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<[string, DataSeriesColorsValues]>\" } }, \"entries\": { \"defaultValue\": null, \"description\": \"Returns an iterable of key, value pairs for every entry in the map.\", \"name\": \"entries\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<[string, DataSeriesColorsValues]>\" } }, \"keys\": { \"defaultValue\": null, \"description\": \"Returns an iterable of keys in the map\", \"name\": \"keys\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<string>\" } }, \"values\": { \"defaultValue\": null, \"description\": \"Returns an iterable of values in the map\", \"name\": \"values\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<DataSeriesColorsValues>\" } }, \"__@toStringTag\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"__@toStringTag\", \"required\": true, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/series/series.ts#getSortedDataSeriesColorsValuesMap\"] = { docgenInfo: getSortedDataSeriesColorsValuesMap.__docgenInfo, name: \"getSortedDataSeriesColorsValuesMap\", path: \"src/lib/series/series.ts#getSortedDataSeriesColorsValuesMap\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { GeometryStyle } from '../../../lib/series/rendering';\nimport { Rotation } from '../../../lib/series/specs';\nimport { AreaStyle, DisplayValueStyle, LineStyle, PointStyle } from '../../../lib/themes/theme';\nimport { Dimensions } from '../../../lib/utils/dimensions';\nimport { GlobalKonvaElementProps } from '../globals';\n\nexport interface PointStyleProps {\n  radius: number;\n  strokeWidth: number;\n  strokeEnabled: boolean;\n  fill: string;\n  opacity: number;\n}\n\nexport function buildAreaPointProps({\n  areaIndex,\n  pointIndex,\n  x,\n  y,\n  color,\n  pointStyleProps,\n}: {\n  areaIndex: number;\n  pointIndex: number;\n  x: number;\n  y: number;\n  color: string;\n  pointStyleProps: PointStyleProps;\n}) {\n  return {\n    key: `area-point-${areaIndex}-${pointIndex}`,\n    x,\n    y,\n    stroke: color,\n    ...pointStyleProps,\n    ...GlobalKonvaElementProps,\n  };\n}\n\nexport function buildPointStyleProps({\n  radius,\n  strokeWidth,\n  opacity,\n  seriesPointStyle,\n}: {\n  radius: number;\n  strokeWidth: number;\n  opacity: number;\n  seriesPointStyle?: PointStyle;\n}): PointStyleProps {\n  const pointStrokeWidth = seriesPointStyle ? seriesPointStyle.strokeWidth : strokeWidth;\n  return {\n    radius: seriesPointStyle ? seriesPointStyle.radius : radius,\n    strokeWidth: pointStrokeWidth,\n    strokeEnabled: pointStrokeWidth !== 0,\n    fill: 'white',\n    opacity: seriesPointStyle ? seriesPointStyle.opacity : opacity,\n  };\n}\n\nexport function buildAreaProps({\n  index,\n  areaPath,\n  xTransform,\n  color,\n  opacity,\n  seriesAreaStyle,\n}: {\n  index: number;\n  areaPath: string;\n  xTransform: number;\n  color: string;\n  opacity: number;\n  seriesAreaStyle?: AreaStyle,\n}) {\n  return {\n    key: `area-${index}`,\n    data: areaPath,\n    x: xTransform,\n    fill: color,\n    lineCap: 'round',\n    lineJoin: 'round',\n    opacity: seriesAreaStyle ? seriesAreaStyle.opacity : opacity,\n    ...GlobalKonvaElementProps,\n  };\n}\n\nexport function buildAreaLineProps({\n  areaIndex,\n  lineIndex,\n  xTransform,\n  linePath,\n  color,\n  strokeWidth,\n  geometryStyle,\n  seriesAreaLineStyle,\n}: {\n  areaIndex: number;\n  lineIndex: number;\n  xTransform: number;\n  linePath: string;\n  color: string;\n  strokeWidth: number;\n  geometryStyle: GeometryStyle;\n  seriesAreaLineStyle?: LineStyle;\n}) {\n  return {\n    key: `area-${areaIndex}-line-${lineIndex}`,\n    data: linePath,\n    x: xTransform,\n    stroke: color,\n    strokeWidth: seriesAreaLineStyle ? seriesAreaLineStyle.strokeWidth : strokeWidth,\n    lineCap: 'round',\n    lineJoin: 'round',\n    ...geometryStyle,\n    ...GlobalKonvaElementProps,\n  };\n}\n\nexport function buildBarProps({\n  index,\n  x,\n  y,\n  width,\n  height,\n  fill,\n  stroke,\n  strokeWidth,\n  borderEnabled,\n  geometryStyle,\n}: {\n  index: number;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  fill: string;\n  stroke: string;\n  strokeWidth: number;\n  borderEnabled: boolean;\n  geometryStyle: GeometryStyle;\n}) {\n  return {\n    key: `bar-${index}`,\n    x,\n    y,\n    width,\n    height,\n    fill,\n    strokeWidth,\n    stroke,\n    strokeEnabled: borderEnabled,\n    ...GlobalKonvaElementProps,\n    ...geometryStyle,\n  };\n}\n\nexport function rotateBarValueProps(\n  chartRotation: Rotation,\n  chartDimensions: Dimensions,\n  barDimensions: Dimensions,\n  displayValueDimensions: Dimensions,\n  displayValue: {\n    text: string;\n    width: number;\n    height: number;\n    isValueContainedInElement?: boolean;\n  },\n  props: DisplayValueStyle & {\n    x: number;\n    y: number;\n    align: string;\n    verticalAlign: string;\n    text: string;\n    width: number;\n    height: number;\n  },\n) {\n  const chartWidth = chartDimensions.width;\n  const chartHeight = chartDimensions.height;\n\n  const barWidth = barDimensions.width;\n  const barHeight = barDimensions.height;\n  const x = barDimensions.left;\n  const y = barDimensions.top;\n\n  const displayValueWidth = displayValueDimensions.width;\n  const displayValueHeight = displayValueDimensions.height;\n  const displayValueX = displayValueDimensions.left;\n  const displayValueY = displayValueDimensions.top;\n\n  const rotatedDisplayValueX = displayValueHeight > barWidth ?\n    x - Math.abs(barWidth - displayValueHeight) / 2\n    : x + Math.abs(barWidth - displayValueHeight) / 2;\n\n  switch (chartRotation) {\n    case 0:\n      props.x = displayValueX;\n      props.y = displayValueY;\n      break;\n    case 180:\n      props.x = chartWidth - displayValueX - displayValueWidth;\n      props.y = chartHeight - displayValueY - displayValueHeight;\n      props.verticalAlign = 'bottom';\n      break;\n    case 90:\n      props.x = (barHeight >= displayValueWidth) ?\n        chartWidth - displayValueY - displayValueWidth\n        : chartWidth - displayValueY;\n      props.y = rotatedDisplayValueX;\n      props.verticalAlign = 'middle';\n\n      if (displayValue.isValueContainedInElement) {\n        props.x = chartWidth - y - barHeight;\n        props.y = x;\n        props.width = barHeight >= displayValueWidth ? barHeight : 0;\n        props.height = displayValue.height <= barWidth ? barWidth : 0;\n        props.align = 'right';\n      }\n      break;\n    case -90:\n      props.x = (barHeight >= displayValueWidth) ? displayValueY : displayValueY - displayValueWidth;\n      props.y = chartHeight - rotatedDisplayValueX - displayValueHeight;\n      props.verticalAlign = 'middle';\n\n      if (displayValue.isValueContainedInElement) {\n        props.x = y;\n        props.y = chartHeight - x - barWidth;\n        props.width = barHeight >= displayValueWidth ? barHeight : 0;\n        props.height = displayValue.height <= barWidth ? barWidth : 0;\n        props.align = 'left';\n      }\n      break;\n  }\n\n  return props;\n}\n\nexport function getBarValueClipDimensions(\n  displayValue: { width: number; height: number; isValueContainedInElement?: boolean },\n  computedDimensions: { width: number; height: number; },\n  barHeight: number,\n  chartRotation: Rotation,\n): { width: number; height: number; offsetX: number; offsetY: number; } {\n  const height = displayValue.isValueContainedInElement ? displayValue.height : computedDimensions.height;\n  const width = displayValue.isValueContainedInElement ? displayValue.width : computedDimensions.width;\n\n  const offsetY = chartRotation === 180 ? barHeight - displayValue.height : 0;\n  const offsetX = chartRotation === 90 ? barHeight - displayValue.width : 0;\n\n  return { height, width, offsetX, offsetY };\n}\n\nexport function isBarValueOverflow(\n  chartDimensions: Dimensions,\n  clip: { width: number; height: number; offsetX: number; offsetY: number },\n  valuePosition: { x: number; y: number; offsetX: number; offsetY: number },\n  hideClippedValue?: boolean,\n): boolean {\n  const chartHeight = chartDimensions.height;\n  const chartWidth = chartDimensions.width;\n\n  const isOverflowX = valuePosition.x + clip.width - valuePosition.offsetX > chartWidth\n    || valuePosition.x + clip.offsetX - valuePosition.offsetX < 0;\n  const isOverflowY = valuePosition.y + clip.height - valuePosition.offsetY > chartHeight\n    || valuePosition.y + clip.offsetY - valuePosition.offsetY < 0;\n\n  return !!hideClippedValue && (isOverflowX || isOverflowY);\n}\n\nexport function buildBarValueProps({\n  x,\n  y,\n  barHeight,\n  barWidth,\n  displayValueStyle,\n  displayValue,\n  chartRotation,\n  chartDimensions,\n}: {\n  x: number;\n  y: number;\n  barHeight: number;\n  barWidth: number;\n  displayValueStyle: DisplayValueStyle;\n  displayValue: {\n    text: string;\n    width: number;\n    height: number;\n    hideClippedValue?: boolean;\n    isValueContainedInElement?: boolean;\n  };\n  chartRotation: Rotation;\n  chartDimensions: Dimensions;\n}): DisplayValueStyle & {\n  x: number;\n  y: number;\n  align: string;\n  text: string;\n  width: number;\n  height: number;\n} {\n  const { padding } = displayValueStyle;\n  const elementHeight = displayValue.isValueContainedInElement ? barHeight : displayValue.height;\n\n  const displayValueHeight = elementHeight + padding;\n  const displayValueWidth = displayValue.width + padding;\n\n  const displayValueY = barHeight >= displayValueHeight ? y : y - displayValueHeight;\n  const displayValueX = displayValueWidth > barWidth ?\n    x - Math.abs(barWidth - displayValueWidth) / 2\n    : x + Math.abs(barWidth - displayValueWidth) / 2;\n\n  const displayValueOffsetY = displayValueStyle.offsetY || 0;\n  const displayValueOffsetX = displayValueStyle.offsetX || 0;\n\n  const baseProps = {\n    align: 'center',\n    verticalAlign: 'top',\n    ...displayValueStyle,\n    text: displayValue.text,\n    width: displayValueWidth,\n    height: displayValueHeight,\n    offsetY: displayValueOffsetY,\n    x: displayValueX,\n    y: displayValueY,\n  };\n\n  const barDimensions = {\n    width: barWidth,\n    height: barHeight,\n    left: x,\n    top: y,\n  };\n\n  const displayValueDimensions = {\n    width: displayValueWidth,\n    height: displayValueHeight,\n    left: displayValueX,\n    top: displayValueY,\n  };\n\n  const props = rotateBarValueProps(\n    chartRotation,\n    chartDimensions,\n    barDimensions,\n    displayValueDimensions,\n    displayValue,\n    baseProps,\n  );\n\n  const clip = getBarValueClipDimensions(displayValue, props, barHeight, chartRotation);\n\n  const hideOverflow = isBarValueOverflow(\n    chartDimensions,\n    clip,\n    { x: props.x, y: props.y, offsetX: displayValueOffsetX, offsetY: displayValueOffsetY },\n    displayValue.hideClippedValue,\n  );\n\n  if (hideOverflow) {\n    props.width = 0;\n    props.height = 0;\n  }\n\n  return props;\n}\n\nexport function buildLinePointProps({\n  lineIndex,\n  pointIndex,\n  x,\n  y,\n  color,\n  pointStyleProps,\n}: {\n  lineIndex: number;\n  pointIndex: number;\n  x: number;\n  y: number;\n  color: string;\n  pointStyleProps: PointStyleProps;\n}) {\n  return {\n    key: `line-point-${lineIndex}-${pointIndex}`,\n    x,\n    y,\n    stroke: color,\n    ...pointStyleProps,\n    ...GlobalKonvaElementProps,\n  };\n}\n\nexport function buildLineProps({\n  index,\n  xTransform,\n  linePath,\n  color,\n  strokeWidth,\n  geometryStyle,\n  seriesLineStyle,\n}: {\n  index: number;\n  xTransform: number;\n  linePath: string;\n  color: string;\n  strokeWidth: number;\n  geometryStyle: GeometryStyle;\n  seriesLineStyle?: LineStyle;\n}) {\n  return {\n    key: `line-${index}`,\n    x: xTransform,\n    data: linePath,\n    stroke: color,\n    strokeWidth: seriesLineStyle ? seriesLineStyle.strokeWidth : strokeWidth,\n    lineCap: 'round',\n    lineJoin: 'round',\n    ...geometryStyle,\n    ...GlobalKonvaElementProps,\n  };\n}\ntry {\n    // @ts-ignore\n    buildAreaPointProps.displayName = \"buildAreaPointProps\";\n    // @ts-ignore\n    buildAreaPointProps.__docgenInfo = { \"description\": \"\", \"displayName\": \"buildAreaPointProps\", \"props\": { \"areaIndex\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"areaIndex\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"pointIndex\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"pointIndex\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"x\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"x\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"y\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"y\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"pointStyleProps\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"pointStyleProps\", \"required\": true, \"type\": { \"name\": \"PointStyleProps\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/react_canvas/utils/rendering_props_utils.ts#buildAreaPointProps\"] = { docgenInfo: buildAreaPointProps.__docgenInfo, name: \"buildAreaPointProps\", path: \"src/components/react_canvas/utils/rendering_props_utils.ts#buildAreaPointProps\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    buildPointStyleProps.displayName = \"buildPointStyleProps\";\n    // @ts-ignore\n    buildPointStyleProps.__docgenInfo = { \"description\": \"\", \"displayName\": \"buildPointStyleProps\", \"props\": { \"radius\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"radius\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"strokeWidth\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"strokeWidth\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"opacity\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"opacity\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"seriesPointStyle\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"seriesPointStyle\", \"required\": false, \"type\": { \"name\": \"PointStyle\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/react_canvas/utils/rendering_props_utils.ts#buildPointStyleProps\"] = { docgenInfo: buildPointStyleProps.__docgenInfo, name: \"buildPointStyleProps\", path: \"src/components/react_canvas/utils/rendering_props_utils.ts#buildPointStyleProps\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    buildAreaProps.displayName = \"buildAreaProps\";\n    // @ts-ignore\n    buildAreaProps.__docgenInfo = { \"description\": \"\", \"displayName\": \"buildAreaProps\", \"props\": { \"index\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"index\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"areaPath\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"areaPath\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"xTransform\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"xTransform\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"opacity\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"opacity\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"seriesAreaStyle\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"seriesAreaStyle\", \"required\": false, \"type\": { \"name\": \"AreaStyle\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/react_canvas/utils/rendering_props_utils.ts#buildAreaProps\"] = { docgenInfo: buildAreaProps.__docgenInfo, name: \"buildAreaProps\", path: \"src/components/react_canvas/utils/rendering_props_utils.ts#buildAreaProps\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    buildAreaLineProps.displayName = \"buildAreaLineProps\";\n    // @ts-ignore\n    buildAreaLineProps.__docgenInfo = { \"description\": \"\", \"displayName\": \"buildAreaLineProps\", \"props\": { \"areaIndex\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"areaIndex\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"lineIndex\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"lineIndex\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"xTransform\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"xTransform\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"linePath\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"linePath\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"strokeWidth\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"strokeWidth\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"geometryStyle\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"geometryStyle\", \"required\": true, \"type\": { \"name\": \"GeometryStyle\" } }, \"seriesAreaLineStyle\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"seriesAreaLineStyle\", \"required\": false, \"type\": { \"name\": \"LineStyle\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/react_canvas/utils/rendering_props_utils.ts#buildAreaLineProps\"] = { docgenInfo: buildAreaLineProps.__docgenInfo, name: \"buildAreaLineProps\", path: \"src/components/react_canvas/utils/rendering_props_utils.ts#buildAreaLineProps\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    buildBarProps.displayName = \"buildBarProps\";\n    // @ts-ignore\n    buildBarProps.__docgenInfo = { \"description\": \"\", \"displayName\": \"buildBarProps\", \"props\": { \"index\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"index\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"x\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"x\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"y\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"y\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"width\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"width\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"height\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"height\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"fill\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fill\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"stroke\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"stroke\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"strokeWidth\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"strokeWidth\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"borderEnabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"borderEnabled\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"geometryStyle\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"geometryStyle\", \"required\": true, \"type\": { \"name\": \"GeometryStyle\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/react_canvas/utils/rendering_props_utils.ts#buildBarProps\"] = { docgenInfo: buildBarProps.__docgenInfo, name: \"buildBarProps\", path: \"src/components/react_canvas/utils/rendering_props_utils.ts#buildBarProps\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    buildBarValueProps.displayName = \"buildBarValueProps\";\n    // @ts-ignore\n    buildBarValueProps.__docgenInfo = { \"description\": \"\", \"displayName\": \"buildBarValueProps\", \"props\": { \"x\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"x\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"y\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"y\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"barHeight\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"barHeight\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"barWidth\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"barWidth\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"displayValueStyle\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"displayValueStyle\", \"required\": true, \"type\": { \"name\": \"DisplayValueStyle\" } }, \"displayValue\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"displayValue\", \"required\": true, \"type\": { \"name\": \"{ text: string; width: number; height: number; hideClippedValue?: boolean; isValueContainedInElement?: boolean; }\" } }, \"chartRotation\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"chartRotation\", \"required\": true, \"type\": { \"name\": \"Rotation\" } }, \"chartDimensions\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"chartDimensions\", \"required\": true, \"type\": { \"name\": \"Dimensions\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/react_canvas/utils/rendering_props_utils.ts#buildBarValueProps\"] = { docgenInfo: buildBarValueProps.__docgenInfo, name: \"buildBarValueProps\", path: \"src/components/react_canvas/utils/rendering_props_utils.ts#buildBarValueProps\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    buildLinePointProps.displayName = \"buildLinePointProps\";\n    // @ts-ignore\n    buildLinePointProps.__docgenInfo = { \"description\": \"\", \"displayName\": \"buildLinePointProps\", \"props\": { \"lineIndex\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"lineIndex\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"pointIndex\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"pointIndex\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"x\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"x\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"y\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"y\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"pointStyleProps\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"pointStyleProps\", \"required\": true, \"type\": { \"name\": \"PointStyleProps\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/react_canvas/utils/rendering_props_utils.ts#buildLinePointProps\"] = { docgenInfo: buildLinePointProps.__docgenInfo, name: \"buildLinePointProps\", path: \"src/components/react_canvas/utils/rendering_props_utils.ts#buildLinePointProps\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    buildLineProps.displayName = \"buildLineProps\";\n    // @ts-ignore\n    buildLineProps.__docgenInfo = { \"description\": \"\", \"displayName\": \"buildLineProps\", \"props\": { \"index\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"index\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"xTransform\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"xTransform\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"linePath\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"linePath\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"color\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"color\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"strokeWidth\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"strokeWidth\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"geometryStyle\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"geometryStyle\", \"required\": true, \"type\": { \"name\": \"GeometryStyle\" } }, \"seriesLineStyle\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"seriesLineStyle\", \"required\": false, \"type\": { \"name\": \"LineStyle\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/react_canvas/utils/rendering_props_utils.ts#buildLineProps\"] = { docgenInfo: buildLineProps.__docgenInfo, name: \"buildLineProps\", path: \"src/components/react_canvas/utils/rendering_props_utils.ts#buildLineProps\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export const BARCHART_1Y0G = [{ x: 0, y: 1 }, { x: 1, y: 2 }, { x: 2, y: 10 }, { x: 3, y: 6 }];\n\nexport const BARCHART_1Y0G_LINEAR = [\n  { x: 0, y: 1 },\n  { x: 1, y: 2 },\n  { x: 2.5, y: 10 },\n  { x: 3.5, y: 6 },\n];\nexport const BARCHART_1Y1G = [\n  { x: 0, g: 'a', y: 1 },\n  { x: 0, g: 'b', y: 2 },\n  { x: 1, g: 'a', y: 2 },\n  { x: 1, g: 'b', y: 3 },\n  { x: 2, g: 'a', y: 3 },\n  { x: 2, g: 'b', y: 4 },\n  { x: 3, g: 'a', y: 4 },\n  { x: 3, g: 'b', y: 5 },\n];\nexport const BARCHART_1Y1G_ORDINAL = [\n  { x: 'a', g: 'a', y: 1 },\n  { x: 'a', g: 'b', y: 2 },\n  { x: 'b', g: 'a', y: 2 },\n  { x: 'b', g: 'b', y: 3 },\n  { x: 'c', g: 'a', y: 3 },\n  { x: 'd', g: 'b', y: 4 },\n  { x: 'e', g: 'a', y: 4 },\n  { x: 'e', g: 'b', y: 5 },\n];\n\nexport const BARCHART_1Y1G_LINEAR = [\n  { x: 0, g: 'a', y: 1 },\n  { x: 0, g: 'b', y: 1 },\n  { x: 1, g: 'a', y: 2 },\n  { x: 1, g: 'b', y: 2 },\n  { x: 2, g: 'a', y: 10 },\n  { x: 2, g: 'b', y: 20 },\n  { x: 3, g: 'a', y: 6 },\n  { x: 5, g: 'a', y: 2 },\n  { x: 7, g: 'b', y: 3 },\n];\n\nexport const BARCHART_1Y2G = [\n  { x: 0, g1: 'a', g2: 's', y: 1 },\n  { x: 0, g1: 'a', g2: 'p', y: 1 },\n  { x: 0, g1: 'b', g2: 's', y: 1 },\n  { x: 0, g1: 'b', g2: 'p', y: 1 },\n  { x: 1, g1: 'a', g2: 's', y: 2 },\n  { x: 1, g1: 'a', g2: 'p', y: 2 },\n  { x: 1, g1: 'b', g2: 's', y: 2 },\n  { x: 1, g1: 'b', g2: 'p', y: 2 },\n  { x: 2, g1: 'a', g2: 's', y: 1 },\n  { x: 2, g1: 'a', g2: 'p', y: 2 },\n  { x: 2, g1: 'b', g2: 's', y: 3 },\n  { x: 2, g1: 'b', g2: 'p', y: 4 },\n  { x: 3, g1: 'a', g2: 's', y: 6 },\n  { x: 3, g1: 'a', g2: 'p', y: 6 },\n  { x: 3, g1: 'b', g2: 's', y: 6 },\n  { x: 3, g1: 'b', g2: 'p', y: 6 },\n];\n\nexport const BARCHART_2Y0G = [\n  { x: 0, y1: 1, y2: 3 },\n  { x: 1, y1: 2, y2: 7 },\n  { x: 2, y1: 1, y2: 2 },\n  { x: 3, y1: 6, y2: 10 },\n];\n\nexport const CHART_ORDINAL_2Y0G = [\n  { x: 'a', y1: 1, y2: 3 },\n  { x: 'b', y1: 2, y2: 7 },\n  { x: 'c', y1: 1, y2: 2 },\n  { x: 'd', y1: 6, y2: 10 },\n];\n\nexport const BARCHART_2Y1G = [\n  { x: 0, g: 'a', y1: 1, y2: 4 },\n  { x: 0, g: 'b', y1: 3, y2: 6 },\n  { x: 1, g: 'a', y1: 2, y2: 1 },\n  { x: 1, g: 'b', y1: 2, y2: 5 },\n  { x: 2, g: 'a', y1: 10, y2: 5 },\n  { x: 2, g: 'b', y1: 3, y2: 1 },\n  { x: 3, g: 'a', y1: 7, y2: 3 },\n  { x: 3, g: 'b', y1: 6, y2: 4 },\n];\n\nexport const BARCHART_2Y2G = [\n  { x: 0, g1: 'cdn.google.com', g2: 'direct-cdn', y1: 1, y2: 4 },\n  { x: 0, g1: 'cdn.google.com', g2: 'indirect-cdn', y1: 1, y2: 4 },\n  { x: 0, g1: 'cloudflare.com', g2: 'direct-cdn', y1: 3, y2: 6 },\n  { x: 0, g1: 'cloudflare.com', g2: 'indirect-cdn', y1: 3, y2: 6 },\n  { x: 1, g1: 'cdn.google.com', g2: 'direct-cdn', y1: 2, y2: 1 },\n  { x: 1, g1: 'cdn.google.com', g2: 'indirect-cdn', y1: 2, y2: 1 },\n  { x: 1, g1: 'cloudflare.com', g2: 'direct-cdn', y1: 2, y2: 5 },\n  { x: 1, g1: 'cloudflare.com', g2: 'indirect-cdn', y1: 2, y2: 5 },\n  { x: 2, g1: 'cdn.google.com', g2: 'direct-cdn', y1: 10, y2: 5 },\n  { x: 2, g1: 'cdn.google.com', g2: 'indirect-cdn', y1: 10, y2: 5 },\n  { x: 2, g1: 'cloudflare.com', g2: 'direct-cdn', y1: 3, y2: 1 },\n  { x: 2, g1: 'cloudflare.com', g2: 'indirect-cdn', y1: 3, y2: 1 },\n  { x: 3, g1: 'cdn.google.com', g2: 'direct-cdn', y1: 7, y2: 3 },\n  { x: 3, g1: 'cdn.google.com', g2: 'indirect-cdn', y1: 7, y2: 3 },\n  { x: 3, g1: 'cloudflare.com', g2: 'direct-cdn', y1: 6, y2: 4 },\n  { x: 3, g1: 'cloudflare.com', g2: 'indirect-cdn', y1: 6, y2: 4 },\n  { x: 6, g1: 'cdn.google.com', g2: 'direct-cdn', y1: 7, y2: 3 },\n  { x: 6, g1: 'cdn.google.com', g2: 'indirect-cdn', y1: 7, y2: 3 },\n  { x: 6, g1: 'cloudflare.com', g2: 'direct-cdn', y1: 6, y2: 4 },\n  { x: 6, g1: 'cloudflare.com', g2: 'indirect-cdn', y1: 6, y2: 4 },\n];\n\nconst NOW = Date.now();\nconst DAY = 24 * 60 * 60 * 1000;\nexport const TIME_CHART_2Y0G = [\n  { x: NOW, y1: 1, y2: 3 },\n  { x: NOW + DAY, y1: 2, y2: 7 },\n  { x: NOW + DAY * 2, y1: 1, y2: 2 },\n  { x: NOW + DAY * 3, y1: 6, y2: 10 },\n];\n","/* tslint:disable */\n// @ts-ignore\nimport themeDark from '!!style-loader/useable?{attrs:{\"nonce\":\"Pk1rZ1XDlMuYe8ubWV3Lh0BzwrTigJQ=\"}}!css-loader!@elastic/eui/dist/eui_theme_dark.css';\n// @ts-ignore\nimport themeLight from '!!style-loader/useable?{attrs:{\"nonce\":\"Pk1rZ1XDlMuYe8ubWV3Lh0BzwrTigJQ=\"}}!css-loader!@elastic/eui/dist/eui_theme_light.css';\n\nexport function switchTheme(theme: string) {\n  switch (theme) {\n    case 'light':\n      themeDark.unuse();\n      themeLight.use();\n      return;\n    case 'dark':\n      themeLight.unuse();\n      themeDark.use();\n      return;\n  }\n}\ntry {\n    // @ts-ignore\n    switchTheme.displayName = \"switchTheme\";\n    // @ts-ignore\n    switchTheme.__docgenInfo = { \"description\": \"\", \"displayName\": \"switchTheme\", \"props\": { \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of a string.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"charAt\": { \"defaultValue\": null, \"description\": \"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.\", \"name\": \"charAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => string\" } }, \"charCodeAt\": { \"defaultValue\": null, \"description\": \"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.\", \"name\": \"charCodeAt\", \"required\": true, \"type\": { \"name\": \"(index: number) => number\" } }, \"concat\": { \"defaultValue\": null, \"description\": \"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.\", \"name\": \"concat\", \"required\": true, \"type\": { \"name\": \"(...strings: string[]) => string\" } }, \"indexOf\": { \"defaultValue\": null, \"description\": \"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.\", \"name\": \"indexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"lastIndexOf\": { \"defaultValue\": null, \"description\": \"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.\", \"name\": \"lastIndexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"localeCompare\": { \"defaultValue\": null, \"description\": \"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.\", \"name\": \"localeCompare\", \"required\": true, \"type\": { \"name\": \"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }\" } }, \"match\": { \"defaultValue\": null, \"description\": \"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.\", \"name\": \"match\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }\" } }, \"replace\": { \"defaultValue\": null, \"description\": \"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.\", \"name\": \"replace\", \"required\": true, \"type\": { \"name\": \"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri...\" } }, \"search\": { \"defaultValue\": null, \"description\": \"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.\", \"name\": \"search\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }\" } }, \"slice\": { \"defaultValue\": null, \"description\": \"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\rIf this value is not specified, the substring continues to the end of stringObj.\", \"name\": \"slice\", \"required\": true, \"type\": { \"name\": \"(start?: number, end?: number) => string\" } }, \"split\": { \"defaultValue\": null, \"description\": \"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.\", \"name\": \"split\", \"required\": true, \"type\": { \"name\": \"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }\" } }, \"substring\": { \"defaultValue\": null, \"description\": \"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\rIf end is omitted, the characters from start through the end of the original string are returned.\", \"name\": \"substring\", \"required\": true, \"type\": { \"name\": \"(start: number, end?: number) => string\" } }, \"toLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to lowercase.\", \"name\": \"toLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toUpperCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to uppercase.\", \"name\": \"toUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleUpperCase\": { \"defaultValue\": null, \"description\": \"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trim\": { \"defaultValue\": null, \"description\": \"Removes the leading and trailing white space and line terminator characters from a string.\", \"name\": \"trim\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"length\": { \"defaultValue\": null, \"description\": \"Returns the length of a String object.\", \"name\": \"length\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"substr\": { \"defaultValue\": null, \"description\": \"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.\", \"name\": \"substr\", \"required\": true, \"type\": { \"name\": \"(from: number, length?: number) => string\" } }, \"valueOf\": { \"defaultValue\": null, \"description\": \"Returns the primitive value of the specified object.\", \"name\": \"valueOf\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"codePointAt\": { \"defaultValue\": null, \"description\": \"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\r\\nthe String resulting from converting this object to a String.\\r\\nIf there is no element at that position, the result is undefined.\\r\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\", \"name\": \"codePointAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => number\" } }, \"includes\": { \"defaultValue\": null, \"description\": \"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\r\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.\", \"name\": \"includes\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"endsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nendPosition \\u2013 length(this). Otherwise returns false.\", \"name\": \"endsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, endPosition?: number) => boolean\" } }, \"normalize\": { \"defaultValue\": null, \"description\": \"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\r\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\", \"name\": \"normalize\", \"required\": true, \"type\": { \"name\": \"{ (form: \\\"NFC\\\" | \\\"NFD\\\" | \\\"NFKC\\\" | \\\"NFKD\\\"): string; (form?: string): string; }\" } }, \"repeat\": { \"defaultValue\": null, \"description\": \"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append\", \"name\": \"repeat\", \"required\": true, \"type\": { \"name\": \"(count: number) => string\" } }, \"startsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nposition. Otherwise returns false.\", \"name\": \"startsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"anchor\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name\", \"name\": \"anchor\", \"required\": true, \"type\": { \"name\": \"(name: string) => string\" } }, \"big\": { \"defaultValue\": null, \"description\": \"Returns a <big> HTML element\", \"name\": \"big\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"blink\": { \"defaultValue\": null, \"description\": \"Returns a <blink> HTML element\", \"name\": \"blink\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"bold\": { \"defaultValue\": null, \"description\": \"Returns a <b> HTML element\", \"name\": \"bold\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fixed\": { \"defaultValue\": null, \"description\": \"Returns a <tt> HTML element\", \"name\": \"fixed\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fontcolor\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the color attribute value\", \"name\": \"fontcolor\", \"required\": true, \"type\": { \"name\": \"(color: string) => string\" } }, \"fontsize\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value\", \"name\": \"fontsize\", \"required\": true, \"type\": { \"name\": \"{ (size: number): string; (size: string): string; }\" } }, \"italics\": { \"defaultValue\": null, \"description\": \"Returns an <i> HTML element\", \"name\": \"italics\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"link\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML element and sets the href attribute value\", \"name\": \"link\", \"required\": true, \"type\": { \"name\": \"(url: string) => string\" } }, \"small\": { \"defaultValue\": null, \"description\": \"Returns a <small> HTML element\", \"name\": \"small\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"strike\": { \"defaultValue\": null, \"description\": \"Returns a <strike> HTML element\", \"name\": \"strike\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sub\": { \"defaultValue\": null, \"description\": \"Returns a <sub> HTML element\", \"name\": \"sub\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sup\": { \"defaultValue\": null, \"description\": \"Returns a <sup> HTML element\", \"name\": \"sup\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"__@iterator\": { \"defaultValue\": null, \"description\": \"Iterator\", \"name\": \"__@iterator\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<string>\" } }, \"padStart\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padStart\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"padEnd\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padEnd\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"trimLeft\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the left end of a string.\", \"name\": \"trimLeft\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trimRight\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the right end of a string.\", \"name\": \"trimRight\", \"required\": true, \"type\": { \"name\": \"() => string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\".storybook/theme_service.ts#switchTheme\"] = { docgenInfo: switchTheme.__docgenInfo, name: \"switchTheme\", path: \".storybook/theme_service.ts#switchTheme\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { Margins } from '../utils/dimensions';\nimport { SharedGeometryStyle } from './theme';\n\nexport const DEFAULT_MISSING_COLOR = 'red';\n\nexport const DEFAULT_CHART_PADDING: Margins = {\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0,\n};\nexport const DEFAULT_CHART_MARGINS: Margins = {\n  left: 10,\n  right: 10,\n  top: 10,\n  bottom: 10,\n};\n\nexport const DEFAULT_GEOMETRY_STYLES: SharedGeometryStyle = {\n  default: {\n    opacity: 1,\n  },\n  highlighted: {\n    opacity: 1,\n  },\n  unhighlighted: {\n    opacity: 0.25,\n  },\n};\n","import { GroupId } from '../utils/ids';\nimport { ScaleBand } from '../utils/scales/scale_band';\nimport { ScaleContinuous } from '../utils/scales/scale_continuous';\nimport { Scale, ScaleType } from '../utils/scales/scales';\nimport { XDomain } from './domains/x_domain';\nimport { YDomain } from './domains/y_domain';\nimport { FormattedDataSeries } from './series';\n\n/**\n * Count the max number of bars in cluster value.\n * Doesn't take in consideration areas, lines or points.\n * @param stacked all the stacked formatted dataseries\n * @param nonStacked all the non-stacked formatted dataseries\n */\nexport function countBarsInCluster(\n  stacked: FormattedDataSeries[],\n  nonStacked: FormattedDataSeries[],\n): {\n  nonStackedBarsInCluster: number;\n  stackedBarsInCluster: number;\n  totalBarsInCluster: number;\n} {\n  // along x axis, we count one \"space\" per bar series.\n  // we ignore the points, areas, lines as they are\n  // aligned with the x value and doesn't occupy space\n  const nonStackedBarsInCluster = nonStacked.reduce((acc, ns) => {\n    return acc + ns.counts.barSeries;\n  }, 0);\n  // count stacked bars groups as 1 per group\n  const stackedBarsInCluster = stacked.reduce((acc, ns) => {\n    return acc + (ns.counts.barSeries > 0 ? 1 : 0);\n  }, 0);\n  const totalBarsInCluster = nonStackedBarsInCluster + stackedBarsInCluster;\n  return {\n    nonStackedBarsInCluster,\n    stackedBarsInCluster,\n    totalBarsInCluster,\n  };\n}\n\n/**\n * Compute the x scale used to align geometries to the x axis.\n * @param xDomain the x domain\n * @param totalBarsInCluster the total number of grouped series\n * @param axisLength the length of the x axis\n */\nexport function computeXScale(\n  xDomain: XDomain,\n  totalBarsInCluster: number,\n  minRange: number,\n  maxRange: number,\n  barsPadding?: number,\n): Scale {\n  const { scaleType, minInterval, domain, isBandScale, timeZone } = xDomain;\n  const rangeDiff = Math.abs(maxRange - minRange);\n  const isInverse = maxRange < minRange;\n  if (scaleType === ScaleType.Ordinal) {\n    const dividend = totalBarsInCluster > 0 ? totalBarsInCluster : 1;\n    const bandwidth = rangeDiff / (domain.length * dividend);\n    return new ScaleBand(domain, [minRange, maxRange], bandwidth, barsPadding);\n  } else {\n    if (isBandScale) {\n      const intervalCount = (domain[1] - domain[0]) / minInterval;\n      const bandwidth = rangeDiff / (intervalCount + 1);\n      const start = isInverse ? minRange - bandwidth : minRange;\n      const end = isInverse ? maxRange : maxRange - bandwidth;\n      return new ScaleContinuous(\n        scaleType,\n        domain,\n        [start, end],\n        bandwidth / totalBarsInCluster,\n        minInterval,\n        timeZone,\n        totalBarsInCluster,\n        barsPadding,\n      );\n    } else {\n      return new ScaleContinuous(\n        scaleType,\n        domain,\n        [minRange, maxRange],\n        0,\n        minInterval,\n        timeZone,\n        totalBarsInCluster,\n        barsPadding,\n      );\n    }\n  }\n}\n\n/**\n * Compute the y scales, one per groupId for the y axis.\n * @param yDomains the y domains\n * @param axisLength the axisLength of the y axis\n */\nexport function computeYScales(\n  yDomains: YDomain[],\n  minRange: number,\n  maxRange: number,\n): Map<GroupId, Scale> {\n  const yScales: Map<GroupId, Scale> = new Map();\n\n  yDomains.forEach((yDomain) => {\n    const yScale = new ScaleContinuous(yDomain.scaleType, yDomain.domain, [minRange, maxRange]);\n    yScales.set(yDomain.groupId, yScale);\n  });\n\n  return yScales;\n}\ntry {\n    // @ts-ignore\n    countBarsInCluster.displayName = \"countBarsInCluster\";\n    // @ts-ignore\n    countBarsInCluster.__docgenInfo = { \"description\": \"Count the max number of bars in cluster value.\\nDoesn't take in consideration areas, lines or points.\\n@param stacked all the stacked formatted dataseries\\n@param nonStacked all the non-stacked formatted dataseries\", \"displayName\": \"countBarsInCluster\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/series/scales.ts#countBarsInCluster\"] = { docgenInfo: countBarsInCluster.__docgenInfo, name: \"countBarsInCluster\", path: \"src/lib/series/scales.ts#countBarsInCluster\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    computeXScale.displayName = \"computeXScale\";\n    // @ts-ignore\n    computeXScale.__docgenInfo = { \"description\": \"Compute the x scale used to align geometries to the x axis.\\n@param xDomain the x domain\\n@param totalBarsInCluster the total number of grouped series\\n@param axisLength the length of the x axis\", \"displayName\": \"computeXScale\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/series/scales.ts#computeXScale\"] = { docgenInfo: computeXScale.__docgenInfo, name: \"computeXScale\", path: \"src/lib/series/scales.ts#computeXScale\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    computeYScales.displayName = \"computeYScales\";\n    // @ts-ignore\n    computeYScales.__docgenInfo = { \"description\": \"Compute the y scales, one per groupId for the y axis.\\n@param yDomains the y domains\\n@param axisLength the axisLength of the y axis\", \"displayName\": \"computeYScales\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/series/scales.ts#computeYScales\"] = { docgenInfo: computeYScales.__docgenInfo, name: \"computeYScales\", path: \"src/lib/series/scales.ts#computeYScales\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export * from './specs';\nexport { Chart } from './components/chart';\nexport { TooltipType } from './lib/utils/interactions';\nexport { getAxisId, getGroupId, getSpecId, getAnnotationId } from './lib/utils/ids';\nexport { ScaleType } from './lib/utils/scales/scales';\nexport { Position, Rendering, Rotation } from './lib/series/specs';\nexport * from './lib/themes/theme';\nexport { LIGHT_THEME } from './lib/themes/light_theme';\nexport { DARK_THEME } from './lib/themes/dark_theme';\nexport * from './lib/themes/theme_commons';\nexport { CurveType } from './lib/series/curves';\nexport { timeFormatter, niceTimeFormatter, niceTimeFormatByDay } from './utils/data/formatters';\nexport { DataGenerator } from './utils/data_generators/data_generator';\nexport { DataSeriesColorsValues } from './lib/series/series';\nexport {\n  AnnotationDomainTypes,\n  CustomSeriesColorsMap,\n  LineAnnotationDatum,\n  LineAnnotationSpec,\n  RectAnnotationDatum,\n  RectAnnotationSpec,\n} from './lib/series/specs';\ntry {\n    // @ts-ignore\n    TooltipType.displayName = \"TooltipType\";\n    // @ts-ignore\n    TooltipType.__docgenInfo = { \"description\": \"The type of tooltip to use\", \"displayName\": \"TooltipType\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/index.ts#TooltipType\"] = { docgenInfo: TooltipType.__docgenInfo, name: \"TooltipType\", path: \"src/index.ts#TooltipType\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    getAxisId.displayName = \"getAxisId\";\n    // @ts-ignore\n    getAxisId.__docgenInfo = { \"description\": \"\", \"displayName\": \"getAxisId\", \"props\": { \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of a string.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"charAt\": { \"defaultValue\": null, \"description\": \"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.\", \"name\": \"charAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => string\" } }, \"charCodeAt\": { \"defaultValue\": null, \"description\": \"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.\", \"name\": \"charCodeAt\", \"required\": true, \"type\": { \"name\": \"(index: number) => number\" } }, \"concat\": { \"defaultValue\": null, \"description\": \"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.\", \"name\": \"concat\", \"required\": true, \"type\": { \"name\": \"(...strings: string[]) => string\" } }, \"indexOf\": { \"defaultValue\": null, \"description\": \"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.\", \"name\": \"indexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"lastIndexOf\": { \"defaultValue\": null, \"description\": \"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.\", \"name\": \"lastIndexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"localeCompare\": { \"defaultValue\": null, \"description\": \"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.\", \"name\": \"localeCompare\", \"required\": true, \"type\": { \"name\": \"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }\" } }, \"match\": { \"defaultValue\": null, \"description\": \"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.\", \"name\": \"match\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }\" } }, \"replace\": { \"defaultValue\": null, \"description\": \"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.\", \"name\": \"replace\", \"required\": true, \"type\": { \"name\": \"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri...\" } }, \"search\": { \"defaultValue\": null, \"description\": \"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.\", \"name\": \"search\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }\" } }, \"slice\": { \"defaultValue\": null, \"description\": \"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\rIf this value is not specified, the substring continues to the end of stringObj.\", \"name\": \"slice\", \"required\": true, \"type\": { \"name\": \"(start?: number, end?: number) => string\" } }, \"split\": { \"defaultValue\": null, \"description\": \"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.\", \"name\": \"split\", \"required\": true, \"type\": { \"name\": \"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }\" } }, \"substring\": { \"defaultValue\": null, \"description\": \"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\rIf end is omitted, the characters from start through the end of the original string are returned.\", \"name\": \"substring\", \"required\": true, \"type\": { \"name\": \"(start: number, end?: number) => string\" } }, \"toLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to lowercase.\", \"name\": \"toLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toUpperCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to uppercase.\", \"name\": \"toUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleUpperCase\": { \"defaultValue\": null, \"description\": \"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trim\": { \"defaultValue\": null, \"description\": \"Removes the leading and trailing white space and line terminator characters from a string.\", \"name\": \"trim\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"length\": { \"defaultValue\": null, \"description\": \"Returns the length of a String object.\", \"name\": \"length\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"substr\": { \"defaultValue\": null, \"description\": \"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.\", \"name\": \"substr\", \"required\": true, \"type\": { \"name\": \"(from: number, length?: number) => string\" } }, \"valueOf\": { \"defaultValue\": null, \"description\": \"Returns the primitive value of the specified object.\", \"name\": \"valueOf\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"codePointAt\": { \"defaultValue\": null, \"description\": \"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\r\\nthe String resulting from converting this object to a String.\\r\\nIf there is no element at that position, the result is undefined.\\r\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\", \"name\": \"codePointAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => number\" } }, \"includes\": { \"defaultValue\": null, \"description\": \"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\r\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.\", \"name\": \"includes\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"endsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nendPosition \\u2013 length(this). Otherwise returns false.\", \"name\": \"endsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, endPosition?: number) => boolean\" } }, \"normalize\": { \"defaultValue\": null, \"description\": \"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\r\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\", \"name\": \"normalize\", \"required\": true, \"type\": { \"name\": \"{ (form: \\\"NFC\\\" | \\\"NFD\\\" | \\\"NFKC\\\" | \\\"NFKD\\\"): string; (form?: string): string; }\" } }, \"repeat\": { \"defaultValue\": null, \"description\": \"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append\", \"name\": \"repeat\", \"required\": true, \"type\": { \"name\": \"(count: number) => string\" } }, \"startsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nposition. Otherwise returns false.\", \"name\": \"startsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"anchor\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name\", \"name\": \"anchor\", \"required\": true, \"type\": { \"name\": \"(name: string) => string\" } }, \"big\": { \"defaultValue\": null, \"description\": \"Returns a <big> HTML element\", \"name\": \"big\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"blink\": { \"defaultValue\": null, \"description\": \"Returns a <blink> HTML element\", \"name\": \"blink\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"bold\": { \"defaultValue\": null, \"description\": \"Returns a <b> HTML element\", \"name\": \"bold\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fixed\": { \"defaultValue\": null, \"description\": \"Returns a <tt> HTML element\", \"name\": \"fixed\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fontcolor\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the color attribute value\", \"name\": \"fontcolor\", \"required\": true, \"type\": { \"name\": \"(color: string) => string\" } }, \"fontsize\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value\", \"name\": \"fontsize\", \"required\": true, \"type\": { \"name\": \"{ (size: number): string; (size: string): string; }\" } }, \"italics\": { \"defaultValue\": null, \"description\": \"Returns an <i> HTML element\", \"name\": \"italics\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"link\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML element and sets the href attribute value\", \"name\": \"link\", \"required\": true, \"type\": { \"name\": \"(url: string) => string\" } }, \"small\": { \"defaultValue\": null, \"description\": \"Returns a <small> HTML element\", \"name\": \"small\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"strike\": { \"defaultValue\": null, \"description\": \"Returns a <strike> HTML element\", \"name\": \"strike\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sub\": { \"defaultValue\": null, \"description\": \"Returns a <sub> HTML element\", \"name\": \"sub\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sup\": { \"defaultValue\": null, \"description\": \"Returns a <sup> HTML element\", \"name\": \"sup\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"__@iterator\": { \"defaultValue\": null, \"description\": \"Iterator\", \"name\": \"__@iterator\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<string>\" } }, \"padStart\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padStart\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"padEnd\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padEnd\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"trimLeft\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the left end of a string.\", \"name\": \"trimLeft\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trimRight\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the right end of a string.\", \"name\": \"trimRight\", \"required\": true, \"type\": { \"name\": \"() => string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/index.ts#getAxisId\"] = { docgenInfo: getAxisId.__docgenInfo, name: \"getAxisId\", path: \"src/index.ts#getAxisId\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    getGroupId.displayName = \"getGroupId\";\n    // @ts-ignore\n    getGroupId.__docgenInfo = { \"description\": \"\", \"displayName\": \"getGroupId\", \"props\": { \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of a string.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"charAt\": { \"defaultValue\": null, \"description\": \"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.\", \"name\": \"charAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => string\" } }, \"charCodeAt\": { \"defaultValue\": null, \"description\": \"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.\", \"name\": \"charCodeAt\", \"required\": true, \"type\": { \"name\": \"(index: number) => number\" } }, \"concat\": { \"defaultValue\": null, \"description\": \"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.\", \"name\": \"concat\", \"required\": true, \"type\": { \"name\": \"(...strings: string[]) => string\" } }, \"indexOf\": { \"defaultValue\": null, \"description\": \"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.\", \"name\": \"indexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"lastIndexOf\": { \"defaultValue\": null, \"description\": \"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.\", \"name\": \"lastIndexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"localeCompare\": { \"defaultValue\": null, \"description\": \"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.\", \"name\": \"localeCompare\", \"required\": true, \"type\": { \"name\": \"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }\" } }, \"match\": { \"defaultValue\": null, \"description\": \"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.\", \"name\": \"match\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }\" } }, \"replace\": { \"defaultValue\": null, \"description\": \"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.\", \"name\": \"replace\", \"required\": true, \"type\": { \"name\": \"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri...\" } }, \"search\": { \"defaultValue\": null, \"description\": \"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.\", \"name\": \"search\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }\" } }, \"slice\": { \"defaultValue\": null, \"description\": \"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\rIf this value is not specified, the substring continues to the end of stringObj.\", \"name\": \"slice\", \"required\": true, \"type\": { \"name\": \"(start?: number, end?: number) => string\" } }, \"split\": { \"defaultValue\": null, \"description\": \"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.\", \"name\": \"split\", \"required\": true, \"type\": { \"name\": \"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }\" } }, \"substring\": { \"defaultValue\": null, \"description\": \"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\rIf end is omitted, the characters from start through the end of the original string are returned.\", \"name\": \"substring\", \"required\": true, \"type\": { \"name\": \"(start: number, end?: number) => string\" } }, \"toLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to lowercase.\", \"name\": \"toLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toUpperCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to uppercase.\", \"name\": \"toUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleUpperCase\": { \"defaultValue\": null, \"description\": \"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trim\": { \"defaultValue\": null, \"description\": \"Removes the leading and trailing white space and line terminator characters from a string.\", \"name\": \"trim\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"length\": { \"defaultValue\": null, \"description\": \"Returns the length of a String object.\", \"name\": \"length\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"substr\": { \"defaultValue\": null, \"description\": \"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.\", \"name\": \"substr\", \"required\": true, \"type\": { \"name\": \"(from: number, length?: number) => string\" } }, \"valueOf\": { \"defaultValue\": null, \"description\": \"Returns the primitive value of the specified object.\", \"name\": \"valueOf\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"codePointAt\": { \"defaultValue\": null, \"description\": \"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\r\\nthe String resulting from converting this object to a String.\\r\\nIf there is no element at that position, the result is undefined.\\r\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\", \"name\": \"codePointAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => number\" } }, \"includes\": { \"defaultValue\": null, \"description\": \"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\r\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.\", \"name\": \"includes\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"endsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nendPosition \\u2013 length(this). Otherwise returns false.\", \"name\": \"endsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, endPosition?: number) => boolean\" } }, \"normalize\": { \"defaultValue\": null, \"description\": \"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\r\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\", \"name\": \"normalize\", \"required\": true, \"type\": { \"name\": \"{ (form: \\\"NFC\\\" | \\\"NFD\\\" | \\\"NFKC\\\" | \\\"NFKD\\\"): string; (form?: string): string; }\" } }, \"repeat\": { \"defaultValue\": null, \"description\": \"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append\", \"name\": \"repeat\", \"required\": true, \"type\": { \"name\": \"(count: number) => string\" } }, \"startsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nposition. Otherwise returns false.\", \"name\": \"startsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"anchor\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name\", \"name\": \"anchor\", \"required\": true, \"type\": { \"name\": \"(name: string) => string\" } }, \"big\": { \"defaultValue\": null, \"description\": \"Returns a <big> HTML element\", \"name\": \"big\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"blink\": { \"defaultValue\": null, \"description\": \"Returns a <blink> HTML element\", \"name\": \"blink\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"bold\": { \"defaultValue\": null, \"description\": \"Returns a <b> HTML element\", \"name\": \"bold\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fixed\": { \"defaultValue\": null, \"description\": \"Returns a <tt> HTML element\", \"name\": \"fixed\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fontcolor\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the color attribute value\", \"name\": \"fontcolor\", \"required\": true, \"type\": { \"name\": \"(color: string) => string\" } }, \"fontsize\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value\", \"name\": \"fontsize\", \"required\": true, \"type\": { \"name\": \"{ (size: number): string; (size: string): string; }\" } }, \"italics\": { \"defaultValue\": null, \"description\": \"Returns an <i> HTML element\", \"name\": \"italics\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"link\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML element and sets the href attribute value\", \"name\": \"link\", \"required\": true, \"type\": { \"name\": \"(url: string) => string\" } }, \"small\": { \"defaultValue\": null, \"description\": \"Returns a <small> HTML element\", \"name\": \"small\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"strike\": { \"defaultValue\": null, \"description\": \"Returns a <strike> HTML element\", \"name\": \"strike\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sub\": { \"defaultValue\": null, \"description\": \"Returns a <sub> HTML element\", \"name\": \"sub\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sup\": { \"defaultValue\": null, \"description\": \"Returns a <sup> HTML element\", \"name\": \"sup\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"__@iterator\": { \"defaultValue\": null, \"description\": \"Iterator\", \"name\": \"__@iterator\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<string>\" } }, \"padStart\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padStart\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"padEnd\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padEnd\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"trimLeft\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the left end of a string.\", \"name\": \"trimLeft\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trimRight\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the right end of a string.\", \"name\": \"trimRight\", \"required\": true, \"type\": { \"name\": \"() => string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/index.ts#getGroupId\"] = { docgenInfo: getGroupId.__docgenInfo, name: \"getGroupId\", path: \"src/index.ts#getGroupId\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    getSpecId.displayName = \"getSpecId\";\n    // @ts-ignore\n    getSpecId.__docgenInfo = { \"description\": \"\", \"displayName\": \"getSpecId\", \"props\": { \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of a string.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"charAt\": { \"defaultValue\": null, \"description\": \"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.\", \"name\": \"charAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => string\" } }, \"charCodeAt\": { \"defaultValue\": null, \"description\": \"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.\", \"name\": \"charCodeAt\", \"required\": true, \"type\": { \"name\": \"(index: number) => number\" } }, \"concat\": { \"defaultValue\": null, \"description\": \"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.\", \"name\": \"concat\", \"required\": true, \"type\": { \"name\": \"(...strings: string[]) => string\" } }, \"indexOf\": { \"defaultValue\": null, \"description\": \"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.\", \"name\": \"indexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"lastIndexOf\": { \"defaultValue\": null, \"description\": \"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.\", \"name\": \"lastIndexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"localeCompare\": { \"defaultValue\": null, \"description\": \"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.\", \"name\": \"localeCompare\", \"required\": true, \"type\": { \"name\": \"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }\" } }, \"match\": { \"defaultValue\": null, \"description\": \"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.\", \"name\": \"match\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }\" } }, \"replace\": { \"defaultValue\": null, \"description\": \"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.\", \"name\": \"replace\", \"required\": true, \"type\": { \"name\": \"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri...\" } }, \"search\": { \"defaultValue\": null, \"description\": \"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.\", \"name\": \"search\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }\" } }, \"slice\": { \"defaultValue\": null, \"description\": \"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\rIf this value is not specified, the substring continues to the end of stringObj.\", \"name\": \"slice\", \"required\": true, \"type\": { \"name\": \"(start?: number, end?: number) => string\" } }, \"split\": { \"defaultValue\": null, \"description\": \"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.\", \"name\": \"split\", \"required\": true, \"type\": { \"name\": \"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }\" } }, \"substring\": { \"defaultValue\": null, \"description\": \"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\rIf end is omitted, the characters from start through the end of the original string are returned.\", \"name\": \"substring\", \"required\": true, \"type\": { \"name\": \"(start: number, end?: number) => string\" } }, \"toLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to lowercase.\", \"name\": \"toLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toUpperCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to uppercase.\", \"name\": \"toUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleUpperCase\": { \"defaultValue\": null, \"description\": \"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trim\": { \"defaultValue\": null, \"description\": \"Removes the leading and trailing white space and line terminator characters from a string.\", \"name\": \"trim\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"length\": { \"defaultValue\": null, \"description\": \"Returns the length of a String object.\", \"name\": \"length\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"substr\": { \"defaultValue\": null, \"description\": \"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.\", \"name\": \"substr\", \"required\": true, \"type\": { \"name\": \"(from: number, length?: number) => string\" } }, \"valueOf\": { \"defaultValue\": null, \"description\": \"Returns the primitive value of the specified object.\", \"name\": \"valueOf\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"codePointAt\": { \"defaultValue\": null, \"description\": \"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\r\\nthe String resulting from converting this object to a String.\\r\\nIf there is no element at that position, the result is undefined.\\r\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\", \"name\": \"codePointAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => number\" } }, \"includes\": { \"defaultValue\": null, \"description\": \"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\r\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.\", \"name\": \"includes\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"endsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nendPosition \\u2013 length(this). Otherwise returns false.\", \"name\": \"endsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, endPosition?: number) => boolean\" } }, \"normalize\": { \"defaultValue\": null, \"description\": \"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\r\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\", \"name\": \"normalize\", \"required\": true, \"type\": { \"name\": \"{ (form: \\\"NFC\\\" | \\\"NFD\\\" | \\\"NFKC\\\" | \\\"NFKD\\\"): string; (form?: string): string; }\" } }, \"repeat\": { \"defaultValue\": null, \"description\": \"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append\", \"name\": \"repeat\", \"required\": true, \"type\": { \"name\": \"(count: number) => string\" } }, \"startsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nposition. Otherwise returns false.\", \"name\": \"startsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"anchor\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name\", \"name\": \"anchor\", \"required\": true, \"type\": { \"name\": \"(name: string) => string\" } }, \"big\": { \"defaultValue\": null, \"description\": \"Returns a <big> HTML element\", \"name\": \"big\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"blink\": { \"defaultValue\": null, \"description\": \"Returns a <blink> HTML element\", \"name\": \"blink\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"bold\": { \"defaultValue\": null, \"description\": \"Returns a <b> HTML element\", \"name\": \"bold\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fixed\": { \"defaultValue\": null, \"description\": \"Returns a <tt> HTML element\", \"name\": \"fixed\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fontcolor\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the color attribute value\", \"name\": \"fontcolor\", \"required\": true, \"type\": { \"name\": \"(color: string) => string\" } }, \"fontsize\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value\", \"name\": \"fontsize\", \"required\": true, \"type\": { \"name\": \"{ (size: number): string; (size: string): string; }\" } }, \"italics\": { \"defaultValue\": null, \"description\": \"Returns an <i> HTML element\", \"name\": \"italics\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"link\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML element and sets the href attribute value\", \"name\": \"link\", \"required\": true, \"type\": { \"name\": \"(url: string) => string\" } }, \"small\": { \"defaultValue\": null, \"description\": \"Returns a <small> HTML element\", \"name\": \"small\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"strike\": { \"defaultValue\": null, \"description\": \"Returns a <strike> HTML element\", \"name\": \"strike\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sub\": { \"defaultValue\": null, \"description\": \"Returns a <sub> HTML element\", \"name\": \"sub\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sup\": { \"defaultValue\": null, \"description\": \"Returns a <sup> HTML element\", \"name\": \"sup\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"__@iterator\": { \"defaultValue\": null, \"description\": \"Iterator\", \"name\": \"__@iterator\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<string>\" } }, \"padStart\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padStart\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"padEnd\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padEnd\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"trimLeft\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the left end of a string.\", \"name\": \"trimLeft\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trimRight\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the right end of a string.\", \"name\": \"trimRight\", \"required\": true, \"type\": { \"name\": \"() => string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/index.ts#getSpecId\"] = { docgenInfo: getSpecId.__docgenInfo, name: \"getSpecId\", path: \"src/index.ts#getSpecId\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    getAnnotationId.displayName = \"getAnnotationId\";\n    // @ts-ignore\n    getAnnotationId.__docgenInfo = { \"description\": \"\", \"displayName\": \"getAnnotationId\", \"props\": { \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of a string.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"charAt\": { \"defaultValue\": null, \"description\": \"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.\", \"name\": \"charAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => string\" } }, \"charCodeAt\": { \"defaultValue\": null, \"description\": \"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.\", \"name\": \"charCodeAt\", \"required\": true, \"type\": { \"name\": \"(index: number) => number\" } }, \"concat\": { \"defaultValue\": null, \"description\": \"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.\", \"name\": \"concat\", \"required\": true, \"type\": { \"name\": \"(...strings: string[]) => string\" } }, \"indexOf\": { \"defaultValue\": null, \"description\": \"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.\", \"name\": \"indexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"lastIndexOf\": { \"defaultValue\": null, \"description\": \"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.\", \"name\": \"lastIndexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"localeCompare\": { \"defaultValue\": null, \"description\": \"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.\", \"name\": \"localeCompare\", \"required\": true, \"type\": { \"name\": \"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }\" } }, \"match\": { \"defaultValue\": null, \"description\": \"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.\", \"name\": \"match\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }\" } }, \"replace\": { \"defaultValue\": null, \"description\": \"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.\", \"name\": \"replace\", \"required\": true, \"type\": { \"name\": \"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri...\" } }, \"search\": { \"defaultValue\": null, \"description\": \"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.\", \"name\": \"search\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }\" } }, \"slice\": { \"defaultValue\": null, \"description\": \"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\rIf this value is not specified, the substring continues to the end of stringObj.\", \"name\": \"slice\", \"required\": true, \"type\": { \"name\": \"(start?: number, end?: number) => string\" } }, \"split\": { \"defaultValue\": null, \"description\": \"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.\", \"name\": \"split\", \"required\": true, \"type\": { \"name\": \"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }\" } }, \"substring\": { \"defaultValue\": null, \"description\": \"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\rIf end is omitted, the characters from start through the end of the original string are returned.\", \"name\": \"substring\", \"required\": true, \"type\": { \"name\": \"(start: number, end?: number) => string\" } }, \"toLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to lowercase.\", \"name\": \"toLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toUpperCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to uppercase.\", \"name\": \"toUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleUpperCase\": { \"defaultValue\": null, \"description\": \"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trim\": { \"defaultValue\": null, \"description\": \"Removes the leading and trailing white space and line terminator characters from a string.\", \"name\": \"trim\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"length\": { \"defaultValue\": null, \"description\": \"Returns the length of a String object.\", \"name\": \"length\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"substr\": { \"defaultValue\": null, \"description\": \"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.\", \"name\": \"substr\", \"required\": true, \"type\": { \"name\": \"(from: number, length?: number) => string\" } }, \"valueOf\": { \"defaultValue\": null, \"description\": \"Returns the primitive value of the specified object.\", \"name\": \"valueOf\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"codePointAt\": { \"defaultValue\": null, \"description\": \"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\r\\nthe String resulting from converting this object to a String.\\r\\nIf there is no element at that position, the result is undefined.\\r\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\", \"name\": \"codePointAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => number\" } }, \"includes\": { \"defaultValue\": null, \"description\": \"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\r\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.\", \"name\": \"includes\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"endsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nendPosition \\u2013 length(this). Otherwise returns false.\", \"name\": \"endsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, endPosition?: number) => boolean\" } }, \"normalize\": { \"defaultValue\": null, \"description\": \"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\r\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\", \"name\": \"normalize\", \"required\": true, \"type\": { \"name\": \"{ (form: \\\"NFC\\\" | \\\"NFD\\\" | \\\"NFKC\\\" | \\\"NFKD\\\"): string; (form?: string): string; }\" } }, \"repeat\": { \"defaultValue\": null, \"description\": \"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append\", \"name\": \"repeat\", \"required\": true, \"type\": { \"name\": \"(count: number) => string\" } }, \"startsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nposition. Otherwise returns false.\", \"name\": \"startsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"anchor\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name\", \"name\": \"anchor\", \"required\": true, \"type\": { \"name\": \"(name: string) => string\" } }, \"big\": { \"defaultValue\": null, \"description\": \"Returns a <big> HTML element\", \"name\": \"big\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"blink\": { \"defaultValue\": null, \"description\": \"Returns a <blink> HTML element\", \"name\": \"blink\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"bold\": { \"defaultValue\": null, \"description\": \"Returns a <b> HTML element\", \"name\": \"bold\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fixed\": { \"defaultValue\": null, \"description\": \"Returns a <tt> HTML element\", \"name\": \"fixed\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fontcolor\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the color attribute value\", \"name\": \"fontcolor\", \"required\": true, \"type\": { \"name\": \"(color: string) => string\" } }, \"fontsize\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value\", \"name\": \"fontsize\", \"required\": true, \"type\": { \"name\": \"{ (size: number): string; (size: string): string; }\" } }, \"italics\": { \"defaultValue\": null, \"description\": \"Returns an <i> HTML element\", \"name\": \"italics\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"link\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML element and sets the href attribute value\", \"name\": \"link\", \"required\": true, \"type\": { \"name\": \"(url: string) => string\" } }, \"small\": { \"defaultValue\": null, \"description\": \"Returns a <small> HTML element\", \"name\": \"small\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"strike\": { \"defaultValue\": null, \"description\": \"Returns a <strike> HTML element\", \"name\": \"strike\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sub\": { \"defaultValue\": null, \"description\": \"Returns a <sub> HTML element\", \"name\": \"sub\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sup\": { \"defaultValue\": null, \"description\": \"Returns a <sup> HTML element\", \"name\": \"sup\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"__@iterator\": { \"defaultValue\": null, \"description\": \"Iterator\", \"name\": \"__@iterator\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<string>\" } }, \"padStart\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padStart\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"padEnd\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padEnd\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"trimLeft\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the left end of a string.\", \"name\": \"trimLeft\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trimRight\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the right end of a string.\", \"name\": \"trimRight\", \"required\": true, \"type\": { \"name\": \"() => string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/index.ts#getAnnotationId\"] = { docgenInfo: getAnnotationId.__docgenInfo, name: \"getAnnotationId\", path: \"src/index.ts#getAnnotationId\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    ScaleType.displayName = \"ScaleType\";\n    // @ts-ignore\n    ScaleType.__docgenInfo = { \"description\": \"The scale type\", \"displayName\": \"ScaleType\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/index.ts#ScaleType\"] = { docgenInfo: ScaleType.__docgenInfo, name: \"ScaleType\", path: \"src/index.ts#ScaleType\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    Position.displayName = \"Position\";\n    // @ts-ignore\n    Position.__docgenInfo = { \"description\": \"The position of the axis relative to the chart.\\nA left or right positioned axis is a vertical axis.\\nA top or bottom positioned axis is an horizontal axis.\", \"displayName\": \"Position\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/index.ts#Position\"] = { docgenInfo: Position.__docgenInfo, name: \"Position\", path: \"src/index.ts#Position\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    timeFormatter.displayName = \"timeFormatter\";\n    // @ts-ignore\n    timeFormatter.__docgenInfo = { \"description\": \"\", \"displayName\": \"timeFormatter\", \"props\": { \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of a string.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"charAt\": { \"defaultValue\": null, \"description\": \"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.\", \"name\": \"charAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => string\" } }, \"charCodeAt\": { \"defaultValue\": null, \"description\": \"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.\", \"name\": \"charCodeAt\", \"required\": true, \"type\": { \"name\": \"(index: number) => number\" } }, \"concat\": { \"defaultValue\": null, \"description\": \"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.\", \"name\": \"concat\", \"required\": true, \"type\": { \"name\": \"(...strings: string[]) => string\" } }, \"indexOf\": { \"defaultValue\": null, \"description\": \"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.\", \"name\": \"indexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"lastIndexOf\": { \"defaultValue\": null, \"description\": \"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.\", \"name\": \"lastIndexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"localeCompare\": { \"defaultValue\": null, \"description\": \"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.\", \"name\": \"localeCompare\", \"required\": true, \"type\": { \"name\": \"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }\" } }, \"match\": { \"defaultValue\": null, \"description\": \"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.\", \"name\": \"match\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }\" } }, \"replace\": { \"defaultValue\": null, \"description\": \"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.\", \"name\": \"replace\", \"required\": true, \"type\": { \"name\": \"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri...\" } }, \"search\": { \"defaultValue\": null, \"description\": \"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.\", \"name\": \"search\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }\" } }, \"slice\": { \"defaultValue\": null, \"description\": \"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\rIf this value is not specified, the substring continues to the end of stringObj.\", \"name\": \"slice\", \"required\": true, \"type\": { \"name\": \"(start?: number, end?: number) => string\" } }, \"split\": { \"defaultValue\": null, \"description\": \"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.\", \"name\": \"split\", \"required\": true, \"type\": { \"name\": \"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }\" } }, \"substring\": { \"defaultValue\": null, \"description\": \"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\rIf end is omitted, the characters from start through the end of the original string are returned.\", \"name\": \"substring\", \"required\": true, \"type\": { \"name\": \"(start: number, end?: number) => string\" } }, \"toLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to lowercase.\", \"name\": \"toLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toUpperCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to uppercase.\", \"name\": \"toUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleUpperCase\": { \"defaultValue\": null, \"description\": \"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trim\": { \"defaultValue\": null, \"description\": \"Removes the leading and trailing white space and line terminator characters from a string.\", \"name\": \"trim\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"length\": { \"defaultValue\": null, \"description\": \"Returns the length of a String object.\", \"name\": \"length\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"substr\": { \"defaultValue\": null, \"description\": \"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.\", \"name\": \"substr\", \"required\": true, \"type\": { \"name\": \"(from: number, length?: number) => string\" } }, \"valueOf\": { \"defaultValue\": null, \"description\": \"Returns the primitive value of the specified object.\", \"name\": \"valueOf\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"codePointAt\": { \"defaultValue\": null, \"description\": \"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\r\\nthe String resulting from converting this object to a String.\\r\\nIf there is no element at that position, the result is undefined.\\r\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\", \"name\": \"codePointAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => number\" } }, \"includes\": { \"defaultValue\": null, \"description\": \"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\r\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.\", \"name\": \"includes\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"endsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nendPosition \\u2013 length(this). Otherwise returns false.\", \"name\": \"endsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, endPosition?: number) => boolean\" } }, \"normalize\": { \"defaultValue\": null, \"description\": \"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\r\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\", \"name\": \"normalize\", \"required\": true, \"type\": { \"name\": \"{ (form: \\\"NFC\\\" | \\\"NFD\\\" | \\\"NFKC\\\" | \\\"NFKD\\\"): string; (form?: string): string; }\" } }, \"repeat\": { \"defaultValue\": null, \"description\": \"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append\", \"name\": \"repeat\", \"required\": true, \"type\": { \"name\": \"(count: number) => string\" } }, \"startsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nposition. Otherwise returns false.\", \"name\": \"startsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"anchor\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name\", \"name\": \"anchor\", \"required\": true, \"type\": { \"name\": \"(name: string) => string\" } }, \"big\": { \"defaultValue\": null, \"description\": \"Returns a <big> HTML element\", \"name\": \"big\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"blink\": { \"defaultValue\": null, \"description\": \"Returns a <blink> HTML element\", \"name\": \"blink\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"bold\": { \"defaultValue\": null, \"description\": \"Returns a <b> HTML element\", \"name\": \"bold\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fixed\": { \"defaultValue\": null, \"description\": \"Returns a <tt> HTML element\", \"name\": \"fixed\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fontcolor\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the color attribute value\", \"name\": \"fontcolor\", \"required\": true, \"type\": { \"name\": \"(color: string) => string\" } }, \"fontsize\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value\", \"name\": \"fontsize\", \"required\": true, \"type\": { \"name\": \"{ (size: number): string; (size: string): string; }\" } }, \"italics\": { \"defaultValue\": null, \"description\": \"Returns an <i> HTML element\", \"name\": \"italics\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"link\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML element and sets the href attribute value\", \"name\": \"link\", \"required\": true, \"type\": { \"name\": \"(url: string) => string\" } }, \"small\": { \"defaultValue\": null, \"description\": \"Returns a <small> HTML element\", \"name\": \"small\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"strike\": { \"defaultValue\": null, \"description\": \"Returns a <strike> HTML element\", \"name\": \"strike\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sub\": { \"defaultValue\": null, \"description\": \"Returns a <sub> HTML element\", \"name\": \"sub\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sup\": { \"defaultValue\": null, \"description\": \"Returns a <sup> HTML element\", \"name\": \"sup\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"__@iterator\": { \"defaultValue\": null, \"description\": \"Iterator\", \"name\": \"__@iterator\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<string>\" } }, \"padStart\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padStart\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"padEnd\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padEnd\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"trimLeft\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the left end of a string.\", \"name\": \"trimLeft\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trimRight\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the right end of a string.\", \"name\": \"trimRight\", \"required\": true, \"type\": { \"name\": \"() => string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/index.ts#timeFormatter\"] = { docgenInfo: timeFormatter.__docgenInfo, name: \"timeFormatter\", path: \"src/index.ts#timeFormatter\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    niceTimeFormatter.displayName = \"niceTimeFormatter\";\n    // @ts-ignore\n    niceTimeFormatter.__docgenInfo = { \"description\": \"\", \"displayName\": \"niceTimeFormatter\", \"props\": { \"0\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"0\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"1\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"1\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"length\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"length\", \"required\": true, \"type\": { \"name\": \"2\" } }, \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of an array.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.\", \"name\": \"toLocaleString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"pop\": { \"defaultValue\": null, \"description\": \"Removes the last element from an array and returns it.\", \"name\": \"pop\", \"required\": true, \"type\": { \"name\": \"() => number\" } }, \"push\": { \"defaultValue\": null, \"description\": \"Appends new elements to an array, and returns the new length of the array.\\n@param items New elements of the Array.\", \"name\": \"push\", \"required\": true, \"type\": { \"name\": \"(...items: number[]) => number\" } }, \"concat\": { \"defaultValue\": null, \"description\": \"Combines two or more arrays.\\nCombines two or more arrays.\\n@param items Additional items to add to the end of array1.\\n@param items Additional items to add to the end of array1.\", \"name\": \"concat\", \"required\": true, \"type\": { \"name\": \"{ (...items: ConcatArray<number>[]): number[]; (...items: (number | ConcatArray<number>)[]): number[]; }\" } }, \"join\": { \"defaultValue\": null, \"description\": \"Adds all the elements of an array separated by the specified separator string.\\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.\", \"name\": \"join\", \"required\": true, \"type\": { \"name\": \"(separator?: string) => string\" } }, \"reverse\": { \"defaultValue\": null, \"description\": \"Reverses the elements in an Array.\", \"name\": \"reverse\", \"required\": true, \"type\": { \"name\": \"() => number[]\" } }, \"shift\": { \"defaultValue\": null, \"description\": \"Removes the first element from an array and returns it.\", \"name\": \"shift\", \"required\": true, \"type\": { \"name\": \"() => number\" } }, \"slice\": { \"defaultValue\": null, \"description\": \"Returns a section of an array.\\n@param start The beginning of the specified portion of the array.\\n@param end The end of the specified portion of the array.\", \"name\": \"slice\", \"required\": true, \"type\": { \"name\": \"(start?: number, end?: number) => number[]\" } }, \"sort\": { \"defaultValue\": null, \"description\": \"Sorts an array.\\n@param compareFn The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, ASCII character order.\", \"name\": \"sort\", \"required\": true, \"type\": { \"name\": \"(compareFn?: (a: number, b: number) => number) => [number, number]\" } }, \"splice\": { \"defaultValue\": null, \"description\": \"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param items Elements to insert into the array in place of the deleted elements.\", \"name\": \"splice\", \"required\": true, \"type\": { \"name\": \"{ (start: number, deleteCount?: number): number[]; (start: number, deleteCount: number, ...items: number[]): number[]; }\" } }, \"unshift\": { \"defaultValue\": null, \"description\": \"Inserts new elements at the start of an array.\\n@param items Elements to insert at the start of the Array.\", \"name\": \"unshift\", \"required\": true, \"type\": { \"name\": \"(...items: number[]) => number\" } }, \"indexOf\": { \"defaultValue\": null, \"description\": \"Returns the index of the first occurrence of a value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\", \"name\": \"indexOf\", \"required\": true, \"type\": { \"name\": \"(searchElement: number, fromIndex?: number) => number\" } }, \"lastIndexOf\": { \"defaultValue\": null, \"description\": \"Returns the index of the last occurrence of a specified value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.\", \"name\": \"lastIndexOf\", \"required\": true, \"type\": { \"name\": \"(searchElement: number, fromIndex?: number) => number\" } }, \"every\": { \"defaultValue\": null, \"description\": \"Determines whether all the members of an array satisfy the specified test.\\n@param callbackfn A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"every\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: number, index: number, array: number[]) => boolean, thisArg?: any) => boolean\" } }, \"some\": { \"defaultValue\": null, \"description\": \"Determines whether the specified callback function returns true for any element of an array.\\n@param callbackfn A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"some\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: number, index: number, array: number[]) => boolean, thisArg?: any) => boolean\" } }, \"forEach\": { \"defaultValue\": null, \"description\": \"Performs the specified action for each element in an array.\\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"forEach\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: number, index: number, array: number[]) => void, thisArg?: any) => void\" } }, \"map\": { \"defaultValue\": null, \"description\": \"Calls a defined callback function on each element of an array, and returns an array that contains the results.\\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"map\", \"required\": true, \"type\": { \"name\": \"<U>(callbackfn: (value: number, index: number, array: number[]) => U, thisArg?: any) => U[]\" } }, \"filter\": { \"defaultValue\": null, \"description\": \"Returns the elements of an array that meet the condition specified in a callback function.\\nReturns the elements of an array that meet the condition specified in a callback function.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"filter\", \"required\": true, \"type\": { \"name\": \"{ <S extends number>(callbackfn: (value: number, index: number, array: number[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: number, index: number, array: number[]) => any, thisArg?: any): number[]; }\" } }, \"reduce\": { \"defaultValue\": null, \"description\": \"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\", \"name\": \"reduce\", \"required\": true, \"type\": { \"name\": \"{ (callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: number[]) => number): number; (callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: number[]) => number, initialValue: number): number; <U>(callbackfn: (previousValue: U, currentValue: number, ...\" } }, \"reduceRight\": { \"defaultValue\": null, \"description\": \"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\", \"name\": \"reduceRight\", \"required\": true, \"type\": { \"name\": \"{ (callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: number[]) => number): number; (callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: number[]) => number, initialValue: number): number; <U>(callbackfn: (previousValue: U, currentValue: number, ...\" } }, \"find\": { \"defaultValue\": null, \"description\": \"Returns the value of the first element in the array where predicate is true, and undefined\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\rorder, until it finds one where predicate returns true. If such an element is found, find\\rimmediately returns that element value. Otherwise, find returns undefined.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\rpredicate. If it is not provided, undefined is used instead.\", \"name\": \"find\", \"required\": true, \"type\": { \"name\": \"{ <S extends number>(predicate: (this: void, value: number, index: number, obj: number[]) => value is S, thisArg?: any): S; (predicate: (value: number, index: number, obj: number[]) => boolean, thisArg?: any): number; }\" } }, \"findIndex\": { \"defaultValue\": null, \"description\": \"Returns the index of the first element in the array where predicate is true, and -1\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\rorder, until it finds one where predicate returns true. If such an element is found,\\rfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\rpredicate. If it is not provided, undefined is used instead.\", \"name\": \"findIndex\", \"required\": true, \"type\": { \"name\": \"(predicate: (value: number, index: number, obj: number[]) => boolean, thisArg?: any) => number\" } }, \"fill\": { \"defaultValue\": null, \"description\": \"Returns the this object after filling the section identified by start and end with value\\n@param value value to fill array section with\\n@param start index to start filling the array at. If start is negative, it is treated as\\rlength+start where length is the length of the array.\\n@param end index to stop filling the array at. If end is negative, it is treated as\\rlength+end.\", \"name\": \"fill\", \"required\": true, \"type\": { \"name\": \"(value: number, start?: number, end?: number) => [number, number]\" } }, \"copyWithin\": { \"defaultValue\": null, \"description\": \"Returns the this object after copying a section of the array identified by start and end\\nto the same array starting at position target\\n@param target If target is negative, it is treated as length+target where length is the\\rlength of the array.\\n@param start If start is negative, it is treated as length+start. If end is negative, it\\ris treated as length+end.\\n@param end If not specified, length of the this object is used as its default value.\", \"name\": \"copyWithin\", \"required\": true, \"type\": { \"name\": \"(target: number, start: number, end?: number) => [number, number]\" } }, \"__@iterator\": { \"defaultValue\": null, \"description\": \"Iterator\", \"name\": \"__@iterator\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<number>\" } }, \"entries\": { \"defaultValue\": null, \"description\": \"Returns an iterable of key, value pairs for every entry in the array\", \"name\": \"entries\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<[number, number]>\" } }, \"keys\": { \"defaultValue\": null, \"description\": \"Returns an iterable of keys in the array\", \"name\": \"keys\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<number>\" } }, \"values\": { \"defaultValue\": null, \"description\": \"Returns an iterable of values in the array\", \"name\": \"values\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<number>\" } }, \"__@unscopables\": { \"defaultValue\": null, \"description\": \"Returns an object whose properties have the value 'true'\\nwhen they will be absent when used in a 'with' statement.\", \"name\": \"__@unscopables\", \"required\": true, \"type\": { \"name\": \"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }\" } }, \"includes\": { \"defaultValue\": null, \"description\": \"Determines whether an array includes a certain element, returning true or false as appropriate.\\n@param searchElement The element to search for.\\n@param fromIndex The position in this array at which to begin searching for searchElement.\", \"name\": \"includes\", \"required\": true, \"type\": { \"name\": \"(searchElement: number, fromIndex?: number) => boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/index.ts#niceTimeFormatter\"] = { docgenInfo: niceTimeFormatter.__docgenInfo, name: \"niceTimeFormatter\", path: \"src/index.ts#niceTimeFormatter\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    niceTimeFormatByDay.displayName = \"niceTimeFormatByDay\";\n    // @ts-ignore\n    niceTimeFormatByDay.__docgenInfo = { \"description\": \"\", \"displayName\": \"niceTimeFormatByDay\", \"props\": { \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of an object.\\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"(radix?: number) => string\" } }, \"toFixed\": { \"defaultValue\": null, \"description\": \"Returns a string representing a number in fixed-point notation.\\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.\", \"name\": \"toFixed\", \"required\": true, \"type\": { \"name\": \"(fractionDigits?: number) => string\" } }, \"toExponential\": { \"defaultValue\": null, \"description\": \"Returns a string containing a number represented in exponential notation.\\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.\", \"name\": \"toExponential\", \"required\": true, \"type\": { \"name\": \"(fractionDigits?: number) => string\" } }, \"toPrecision\": { \"defaultValue\": null, \"description\": \"Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\\n@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.\", \"name\": \"toPrecision\", \"required\": true, \"type\": { \"name\": \"(precision?: number) => string\" } }, \"valueOf\": { \"defaultValue\": null, \"description\": \"Returns the primitive value of the specified object.\", \"name\": \"valueOf\", \"required\": true, \"type\": { \"name\": \"() => number\" } }, \"toLocaleString\": { \"defaultValue\": null, \"description\": \"Converts a number to a string by using the current or specified locale.\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\\n@param options An object that contains one or more properties that specify comparison options.\", \"name\": \"toLocaleString\", \"required\": true, \"type\": { \"name\": \"(locales?: string | string[], options?: NumberFormatOptions) => string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/index.ts#niceTimeFormatByDay\"] = { docgenInfo: niceTimeFormatByDay.__docgenInfo, name: \"niceTimeFormatByDay\", path: \"src/index.ts#niceTimeFormatByDay\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    mergeWithDefaultGridLineConfig.displayName = \"mergeWithDefaultGridLineConfig\";\n    // @ts-ignore\n    mergeWithDefaultGridLineConfig.__docgenInfo = { \"description\": \"\", \"displayName\": \"mergeWithDefaultGridLineConfig\", \"props\": { \"stroke\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"stroke\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"strokeWidth\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"strokeWidth\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"opacity\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"opacity\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"dash\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"dash\", \"required\": false, \"type\": { \"name\": \"number[]\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/index.ts#mergeWithDefaultGridLineConfig\"] = { docgenInfo: mergeWithDefaultGridLineConfig.__docgenInfo, name: \"mergeWithDefaultGridLineConfig\", path: \"src/index.ts#mergeWithDefaultGridLineConfig\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    mergeWithDefaultAnnotationLine.displayName = \"mergeWithDefaultAnnotationLine\";\n    // @ts-ignore\n    mergeWithDefaultAnnotationLine.__docgenInfo = { \"description\": \"\", \"displayName\": \"mergeWithDefaultAnnotationLine\", \"props\": { \"line\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"line\", \"required\": false, \"type\": { \"name\": \"StrokeStyle & Opacity\" } }, \"details\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"details\", \"required\": false, \"type\": { \"name\": \"TextStyle\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/index.ts#mergeWithDefaultAnnotationLine\"] = { docgenInfo: mergeWithDefaultAnnotationLine.__docgenInfo, name: \"mergeWithDefaultAnnotationLine\", path: \"src/index.ts#mergeWithDefaultAnnotationLine\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    mergeWithDefaultAnnotationRect.displayName = \"mergeWithDefaultAnnotationRect\";\n    // @ts-ignore\n    mergeWithDefaultAnnotationRect.__docgenInfo = { \"description\": \"\", \"displayName\": \"mergeWithDefaultAnnotationRect\", \"props\": { \"stroke\": { \"defaultValue\": null, \"description\": \"The stroke color in hex, rgba, hsl\", \"name\": \"stroke\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"strokeWidth\": { \"defaultValue\": null, \"description\": \"The stroke width in pixel\", \"name\": \"strokeWidth\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"dash\": { \"defaultValue\": null, \"description\": \"The dash array for dashed strokes\", \"name\": \"dash\", \"required\": false, \"type\": { \"name\": \"number[]\" } }, \"fill\": { \"defaultValue\": null, \"description\": \"The fill color in hex, rgba, hsl\", \"name\": \"fill\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"opacity\": { \"defaultValue\": null, \"description\": \"The opacity value from 0 to 1\", \"name\": \"opacity\", \"required\": false, \"type\": { \"name\": \"number\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/index.ts#mergeWithDefaultAnnotationRect\"] = { docgenInfo: mergeWithDefaultAnnotationRect.__docgenInfo, name: \"mergeWithDefaultAnnotationRect\", path: \"src/index.ts#mergeWithDefaultAnnotationRect\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import {\n  AreaSeriesStyle,\n  CustomBarSeriesStyle,\n  GridLineConfig,\n  LineAnnotationStyle,\n  LineSeriesStyle,\n  RectAnnotationStyle,\n} from '../themes/theme';\nimport { Accessor } from '../utils/accessor';\nimport { AnnotationId, AxisId, GroupId, SpecId } from '../utils/ids';\nimport { ScaleContinuousType, ScaleType } from '../utils/scales/scales';\nimport { CurveType } from './curves';\nimport { DataSeriesColorsValues } from './series';\n\nexport type Datum = any;\nexport type Rotation = 0 | 90 | -90 | 180;\nexport type Rendering = 'canvas' | 'svg';\n\nexport interface LowerBoundedDomain {\n  min: number;\n}\n\nexport interface UpperBoundedDomain {\n  max: number;\n}\n\nexport interface CompleteBoundedDomain {\n  min: number;\n  max: number;\n}\n\nexport type DomainRange = LowerBoundedDomain | UpperBoundedDomain | CompleteBoundedDomain;\n\nexport interface DisplayValueSpec {\n  /** Show value label in chart element */\n  showValueLabel?: boolean;\n  /** If value labels are shown, skips every other label */\n  isAlternatingValueLabel?: boolean;\n  /** Function for formatting values; will use axis tickFormatter if none specified */\n  valueFormatter?: TickFormatter;\n  /** If true will contain value label within element, else dimensions are computed based on value */\n  isValueContainedInElement?: boolean;\n  /** If true will hide values that are clipped at chart edges */\n  hideClippedValue?: boolean;\n}\n\nexport interface SeriesSpec {\n  /** The ID of the spec, generated via getSpecId method */\n  id: SpecId;\n  /** The name or label of the spec */\n  name?: string;\n  /** The ID of the spec group, generated via getGroupId method\n   * @default __global__\n   */\n  groupId: GroupId;\n  /** An array of data */\n  data: Datum[];\n  /** The type of series you are looking to render */\n  seriesType: 'bar' | 'line' | 'area';\n  /** Custom colors for series */\n  customSeriesColors?: CustomSeriesColorsMap;\n  /** If the series should appear in the legend\n   * @default false\n   */\n  hideInLegend?: boolean;\n  /** Index per series to sort by */\n  sortIndex?: number;\n  displayValueSettings?: DisplayValueSpec;\n}\n\nexport type CustomSeriesColorsMap = Map<DataSeriesColorsValues, string>;\n\nexport interface SeriesAccessors {\n  /** The field name of the x value on Datum object */\n  xAccessor: Accessor;\n  /** An array of field names one per y metric value */\n  yAccessors: Accessor[];\n  /** An optional accessor of the y0 value: base point for area/bar charts  */\n  y0Accessors?: Accessor[];\n  /** An array of fields thats indicates the datum series membership */\n  splitSeriesAccessors?: Accessor[];\n  /** An array of fields thats indicates the stack membership */\n  stackAccessors?: Accessor[];\n  /** An optional array of field name thats indicates the stack membership */\n  colorAccessors?: Accessor[];\n}\n\nexport interface SeriesScales {\n  /**\n   * The x axis scale type\n   * @default ScaleType.Ordinal\n   */\n  xScaleType: ScaleType.Ordinal | ScaleType.Linear | ScaleType.Time;\n  /**\n   * If using a ScaleType.Time this timezone identifier is required to\n   * compute a nice set of xScale ticks. Can be any IANA zone supported by\n   * the host environment, or a fixed-offset name of the form 'utc+3',\n   * or the strings 'local' or 'utc'.\n   */\n  timeZone?: string;\n  /**\n   * The y axis scale type\n   * @default ScaleType.Linear\n   */\n  yScaleType: ScaleContinuousType;\n  /**\n   * if true, the min y value is set to the minimum domain value, 0 otherwise\n   * @default false\n   */\n  yScaleToDataExtent: boolean;\n}\n\nexport type BasicSeriesSpec = SeriesSpec & SeriesAccessors & SeriesScales;\n\n/**\n * This spec describe the dataset configuration used to display a bar series.\n */\nexport type BarSeriesSpec = BasicSeriesSpec & {\n  /** @default bar */\n  seriesType: 'bar';\n  barSeriesStyle?: CustomBarSeriesStyle;\n};\n\n/**\n * This spec describe the dataset configuration used to display a line series.\n */\nexport type LineSeriesSpec = BasicSeriesSpec & {\n  /** @default line */\n  seriesType: 'line';\n  curve?: CurveType;\n  lineSeriesStyle?: LineSeriesStyle;\n};\n\n/**\n * This spec describe the dataset configuration used to display an area series.\n */\nexport type AreaSeriesSpec = BasicSeriesSpec & {\n  /** @default area */\n  seriesType: 'area';\n  /** The type of interpolator to be used to interpolate values between points */\n  curve?: CurveType;\n  areaSeriesStyle?: AreaSeriesStyle;\n};\n\n/**\n * This spec describe the configuration for a chart axis.\n */\nexport interface AxisSpec {\n  /** The ID of the spec, generated via getSpecId method */\n  id: AxisId;\n  /** Style options for grid line */\n  gridLineStyle?: GridLineConfig;\n  /** The ID of the axis group, generated via getGroupId method\n   * @default __global__\n   */\n  groupId: GroupId;\n  /** Hide this axis */\n  hide: boolean;\n  /** shows all ticks, also the one from the overlapping labels */\n  showOverlappingTicks: boolean;\n  /** Shows all labels, also the overlapping ones */\n  showOverlappingLabels: boolean;\n  /** Shows grid lines for axis; default false */\n  showGridLines?: boolean;\n  /** Where the axis appear on the chart */\n  position: Position;\n  /** The length of the tick line */\n  tickSize: number;\n  /** The padding between the label and the tick */\n  tickPadding: number;\n  /** A function called to format each single tick label */\n  tickFormat: TickFormatter;\n  /** The degrees of rotation of the tick labels */\n  tickLabelRotation?: number;\n  /** The axis title */\n  title?: string;\n  /** If specified, it constrains the domain for these values */\n  domain?: DomainRange;\n}\n\nexport type TickFormatter = (value: any) => string;\n\n/**\n * The position of the axis relative to the chart.\n * A left or right positioned axis is a vertical axis.\n * A top or bottom positioned axis is an horizontal axis.\n */\nexport enum Position {\n  Top = 'top',\n  Bottom = 'bottom',\n  Left = 'left',\n  Right = 'right',\n}\n\nexport const AnnotationTypes = Object.freeze({\n  Line: 'line' as AnnotationType,\n  Rectangle: 'rectangle' as AnnotationType,\n  Text: 'text' as AnnotationType,\n});\n\nexport type AnnotationType = 'line' | 'rectangle' | 'text';\n\nexport const AnnotationDomainTypes = Object.freeze({\n  XDomain: 'xDomain' as AnnotationDomainType,\n  YDomain: 'yDomain' as AnnotationDomainType,\n});\n\nexport type AnnotationDomainType = 'xDomain' | 'yDomain';\nexport interface LineAnnotationDatum {\n  dataValue: any;\n  details?: string;\n  header?: string;\n}\n\nexport type LineAnnotationSpec = BaseAnnotationSpec & {\n  annotationType: 'line';\n  domainType: AnnotationDomainType;\n  /** Data values defined with value, details, and header */\n  dataValues: LineAnnotationDatum[];\n  /** Custom line styles */\n  style?: Partial<LineAnnotationStyle>;\n  /** Custom marker */\n  marker?: JSX.Element;\n  /**\n   * Custom marker dimensions; will be computed internally\n   * Any user-supplied values will be overwritten\n   */\n  markerDimensions?: {\n    width: number;\n    height: number;\n  };\n  /** Annotation lines are hidden */\n  hideLines?: boolean;\n  /** z-index of the annotation relative to other elements in the chart\n   * @default 1\n   */\n  zIndex?: number;\n};\n\nexport interface RectAnnotationDatum {\n  coordinates: {\n    x0?: any;\n    x1?: any;\n    y0?: any;\n    y1?: any;\n  };\n  details?: string;\n}\n\nexport type RectAnnotationSpec = BaseAnnotationSpec & {\n  annotationType: 'rectangle';\n  /** Custom rendering function for tooltip */\n  renderTooltip?: (position: { transform: string; top: number; left: number; }, details?: string) => JSX.Element;\n  /** Data values defined with coordinates and details */\n  dataValues: RectAnnotationDatum[];\n  /** Custom annotation style */\n  style?: Partial<RectAnnotationStyle>;\n  /** z-index of the annotation relative to other elements in the chart\n   * @default -1\n   */\n  zIndex?: number;\n};\n\nexport interface BaseAnnotationSpec {\n  /** The id of the annotation */\n  annotationId: AnnotationId;\n  /** Annotation type: line, rectangle, text */\n  annotationType: AnnotationType;\n  /** The ID of the axis group, generated via getGroupId method\n   * @default __global__\n   */\n  groupId: GroupId; // defaults to __global__; needed for yDomain position\n  /** Data values defined with coordinates and details */\n  dataValues: AnnotationDatum[];\n  /** Custom annotation style */\n  style?: Partial<AnnotationStyle>;\n  /** Toggles tooltip annotation visibility */\n  hideTooltips?: boolean;\n  /** z-index of the annotation relative to other elements in the chart\n   * Default specified per specific annotation spec.\n   */\n  zIndex?: number;\n}\n\nexport type AnnotationDatum = LineAnnotationDatum | RectAnnotationDatum;\nexport type AnnotationStyle = LineAnnotationStyle | RectAnnotationStyle;\n\n// TODO:  TextAnnotationSpec\nexport type AnnotationSpec = LineAnnotationSpec | RectAnnotationSpec;\n\nexport function isLineAnnotation(spec: AnnotationSpec): spec is LineAnnotationSpec {\n  return spec.annotationType === AnnotationTypes.Line;\n}\n\nexport function isRectAnnotation(spec: AnnotationSpec): spec is RectAnnotationSpec {\n  return spec.annotationType === AnnotationTypes.Rectangle;\n}\n\nexport function isBarSeriesSpec(spec: BasicSeriesSpec): spec is BarSeriesSpec {\n  return spec.seriesType === 'bar';\n}\n\nexport function isLineSeriesSpec(spec: BasicSeriesSpec): spec is LineSeriesSpec {\n  return spec.seriesType === 'line';\n}\n\nexport function isAreaSeriesSpec(spec: BasicSeriesSpec): spec is AreaSeriesSpec {\n  return spec.seriesType === 'area';\n}\ntry {\n    // @ts-ignore\n    isLineAnnotation.displayName = \"isLineAnnotation\";\n    // @ts-ignore\n    isLineAnnotation.__docgenInfo = { \"description\": \"\", \"displayName\": \"isLineAnnotation\", \"props\": { \"annotationId\": { \"defaultValue\": null, \"description\": \"The id of the annotation\", \"name\": \"annotationId\", \"required\": true, \"type\": { \"name\": \"AnnotationId\" } }, \"annotationType\": { \"defaultValue\": null, \"description\": \"Annotation type: line, rectangle, text\", \"name\": \"annotationType\", \"required\": true, \"type\": { \"name\": \"\\\"line\\\" | \\\"rectangle\\\"\" } }, \"groupId\": { \"defaultValue\": { value: \"__global__\" }, \"description\": \"The ID of the axis group, generated via getGroupId method\", \"name\": \"groupId\", \"required\": true, \"type\": { \"name\": \"GroupId\" } }, \"dataValues\": { \"defaultValue\": null, \"description\": \"Data values defined with coordinates and details\\nData values defined with value, details, and header\\nData values defined with coordinates and details\", \"name\": \"dataValues\", \"required\": true, \"type\": { \"name\": \"(AnnotationDatum[] & LineAnnotationDatum[]) | (AnnotationDatum[] & RectAnnotationDatum[])\" } }, \"style\": { \"defaultValue\": null, \"description\": \"Custom annotation style\\nCustom line styles\\nCustom annotation style\", \"name\": \"style\", \"required\": true, \"type\": { \"name\": \"(Partial<LineAnnotationStyle> & Partial<LineAnnotationStyle>) | (Partial<RectAnnotationStyle> & Partial<LineAnnotationStyle>) | (Partial<LineAnnotationStyle> & Partial<...>) | (Partial<...> & Partial<...>)\" } }, \"hideTooltips\": { \"defaultValue\": null, \"description\": \"Toggles tooltip annotation visibility\", \"name\": \"hideTooltips\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"zIndex\": { \"defaultValue\": { value: \"1\\n-1\" }, \"description\": \"z-index of the annotation relative to other elements in the chart\\nDefault specified per specific annotation spec.\\nz-index of the annotation relative to other elements in the chart\\nz-index of the annotation relative to other elements in the chart\", \"name\": \"zIndex\", \"required\": true, \"type\": { \"name\": \"number\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/series/specs.ts#isLineAnnotation\"] = { docgenInfo: isLineAnnotation.__docgenInfo, name: \"isLineAnnotation\", path: \"src/lib/series/specs.ts#isLineAnnotation\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    isRectAnnotation.displayName = \"isRectAnnotation\";\n    // @ts-ignore\n    isRectAnnotation.__docgenInfo = { \"description\": \"\", \"displayName\": \"isRectAnnotation\", \"props\": { \"annotationId\": { \"defaultValue\": null, \"description\": \"The id of the annotation\", \"name\": \"annotationId\", \"required\": true, \"type\": { \"name\": \"AnnotationId\" } }, \"annotationType\": { \"defaultValue\": null, \"description\": \"Annotation type: line, rectangle, text\", \"name\": \"annotationType\", \"required\": true, \"type\": { \"name\": \"\\\"line\\\" | \\\"rectangle\\\"\" } }, \"groupId\": { \"defaultValue\": { value: \"__global__\" }, \"description\": \"The ID of the axis group, generated via getGroupId method\", \"name\": \"groupId\", \"required\": true, \"type\": { \"name\": \"GroupId\" } }, \"dataValues\": { \"defaultValue\": null, \"description\": \"Data values defined with coordinates and details\\nData values defined with value, details, and header\\nData values defined with coordinates and details\", \"name\": \"dataValues\", \"required\": true, \"type\": { \"name\": \"(AnnotationDatum[] & LineAnnotationDatum[]) | (AnnotationDatum[] & RectAnnotationDatum[])\" } }, \"style\": { \"defaultValue\": null, \"description\": \"Custom annotation style\\nCustom line styles\\nCustom annotation style\", \"name\": \"style\", \"required\": true, \"type\": { \"name\": \"(Partial<LineAnnotationStyle> & Partial<LineAnnotationStyle>) | (Partial<RectAnnotationStyle> & Partial<LineAnnotationStyle>) | (Partial<LineAnnotationStyle> & Partial<...>) | (Partial<...> & Partial<...>)\" } }, \"hideTooltips\": { \"defaultValue\": null, \"description\": \"Toggles tooltip annotation visibility\", \"name\": \"hideTooltips\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"zIndex\": { \"defaultValue\": { value: \"1\\n-1\" }, \"description\": \"z-index of the annotation relative to other elements in the chart\\nDefault specified per specific annotation spec.\\nz-index of the annotation relative to other elements in the chart\\nz-index of the annotation relative to other elements in the chart\", \"name\": \"zIndex\", \"required\": true, \"type\": { \"name\": \"number\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/series/specs.ts#isRectAnnotation\"] = { docgenInfo: isRectAnnotation.__docgenInfo, name: \"isRectAnnotation\", path: \"src/lib/series/specs.ts#isRectAnnotation\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    isBarSeriesSpec.displayName = \"isBarSeriesSpec\";\n    // @ts-ignore\n    isBarSeriesSpec.__docgenInfo = { \"description\": \"\", \"displayName\": \"isBarSeriesSpec\", \"props\": { \"id\": { \"defaultValue\": null, \"description\": \"The ID of the spec, generated via getSpecId method\", \"name\": \"id\", \"required\": true, \"type\": { \"name\": \"SpecId\" } }, \"name\": { \"defaultValue\": null, \"description\": \"The name or label of the spec\", \"name\": \"name\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"groupId\": { \"defaultValue\": { value: \"__global__\" }, \"description\": \"The ID of the spec group, generated via getGroupId method\", \"name\": \"groupId\", \"required\": true, \"type\": { \"name\": \"GroupId\" } }, \"data\": { \"defaultValue\": null, \"description\": \"An array of data\", \"name\": \"data\", \"required\": true, \"type\": { \"name\": \"any[]\" } }, \"seriesType\": { \"defaultValue\": null, \"description\": \"The type of series you are looking to render\", \"name\": \"seriesType\", \"required\": true, \"type\": { \"name\": \"\\\"line\\\" | \\\"bar\\\" | \\\"area\\\"\" } }, \"customSeriesColors\": { \"defaultValue\": null, \"description\": \"Custom colors for series\", \"name\": \"customSeriesColors\", \"required\": false, \"type\": { \"name\": \"Map<DataSeriesColorsValues, string>\" } }, \"hideInLegend\": { \"defaultValue\": { value: \"false\" }, \"description\": \"If the series should appear in the legend\", \"name\": \"hideInLegend\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"sortIndex\": { \"defaultValue\": null, \"description\": \"Index per series to sort by\", \"name\": \"sortIndex\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"displayValueSettings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"displayValueSettings\", \"required\": false, \"type\": { \"name\": \"DisplayValueSpec\" } }, \"xAccessor\": { \"defaultValue\": null, \"description\": \"The field name of the x value on Datum object\", \"name\": \"xAccessor\", \"required\": true, \"type\": { \"name\": \"AccessorString\" } }, \"yAccessors\": { \"defaultValue\": null, \"description\": \"An array of field names one per y metric value\", \"name\": \"yAccessors\", \"required\": true, \"type\": { \"name\": \"AccessorString[]\" } }, \"y0Accessors\": { \"defaultValue\": null, \"description\": \"An optional accessor of the y0 value: base point for area/bar charts\", \"name\": \"y0Accessors\", \"required\": false, \"type\": { \"name\": \"AccessorString[]\" } }, \"splitSeriesAccessors\": { \"defaultValue\": null, \"description\": \"An array of fields thats indicates the datum series membership\", \"name\": \"splitSeriesAccessors\", \"required\": false, \"type\": { \"name\": \"AccessorString[]\" } }, \"stackAccessors\": { \"defaultValue\": null, \"description\": \"An array of fields thats indicates the stack membership\", \"name\": \"stackAccessors\", \"required\": false, \"type\": { \"name\": \"AccessorString[]\" } }, \"colorAccessors\": { \"defaultValue\": null, \"description\": \"An optional array of field name thats indicates the stack membership\", \"name\": \"colorAccessors\", \"required\": false, \"type\": { \"name\": \"AccessorString[]\" } }, \"xScaleType\": { \"defaultValue\": { value: \"ScaleType.Ordinal\" }, \"description\": \"The x axis scale type\", \"name\": \"xScaleType\", \"required\": true, \"type\": { \"name\": \"ScaleType.Linear | ScaleType.Ordinal | ScaleType.Time\" } }, \"timeZone\": { \"defaultValue\": null, \"description\": \"If using a ScaleType.Time this timezone identifier is required to\\ncompute a nice set of xScale ticks. Can be any IANA zone supported by\\nthe host environment, or a fixed-offset name of the form 'utc+3',\\nor the strings 'local' or 'utc'.\", \"name\": \"timeZone\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"yScaleType\": { \"defaultValue\": { value: \"ScaleType.Linear\" }, \"description\": \"The y axis scale type\", \"name\": \"yScaleType\", \"required\": true, \"type\": { \"name\": \"ScaleContinuousType\" } }, \"yScaleToDataExtent\": { \"defaultValue\": { value: \"false\" }, \"description\": \"if true, the min y value is set to the minimum domain value, 0 otherwise\", \"name\": \"yScaleToDataExtent\", \"required\": true, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/series/specs.ts#isBarSeriesSpec\"] = { docgenInfo: isBarSeriesSpec.__docgenInfo, name: \"isBarSeriesSpec\", path: \"src/lib/series/specs.ts#isBarSeriesSpec\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    isLineSeriesSpec.displayName = \"isLineSeriesSpec\";\n    // @ts-ignore\n    isLineSeriesSpec.__docgenInfo = { \"description\": \"\", \"displayName\": \"isLineSeriesSpec\", \"props\": { \"id\": { \"defaultValue\": null, \"description\": \"The ID of the spec, generated via getSpecId method\", \"name\": \"id\", \"required\": true, \"type\": { \"name\": \"SpecId\" } }, \"name\": { \"defaultValue\": null, \"description\": \"The name or label of the spec\", \"name\": \"name\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"groupId\": { \"defaultValue\": { value: \"__global__\" }, \"description\": \"The ID of the spec group, generated via getGroupId method\", \"name\": \"groupId\", \"required\": true, \"type\": { \"name\": \"GroupId\" } }, \"data\": { \"defaultValue\": null, \"description\": \"An array of data\", \"name\": \"data\", \"required\": true, \"type\": { \"name\": \"any[]\" } }, \"seriesType\": { \"defaultValue\": null, \"description\": \"The type of series you are looking to render\", \"name\": \"seriesType\", \"required\": true, \"type\": { \"name\": \"\\\"line\\\" | \\\"bar\\\" | \\\"area\\\"\" } }, \"customSeriesColors\": { \"defaultValue\": null, \"description\": \"Custom colors for series\", \"name\": \"customSeriesColors\", \"required\": false, \"type\": { \"name\": \"Map<DataSeriesColorsValues, string>\" } }, \"hideInLegend\": { \"defaultValue\": { value: \"false\" }, \"description\": \"If the series should appear in the legend\", \"name\": \"hideInLegend\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"sortIndex\": { \"defaultValue\": null, \"description\": \"Index per series to sort by\", \"name\": \"sortIndex\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"displayValueSettings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"displayValueSettings\", \"required\": false, \"type\": { \"name\": \"DisplayValueSpec\" } }, \"xAccessor\": { \"defaultValue\": null, \"description\": \"The field name of the x value on Datum object\", \"name\": \"xAccessor\", \"required\": true, \"type\": { \"name\": \"AccessorString\" } }, \"yAccessors\": { \"defaultValue\": null, \"description\": \"An array of field names one per y metric value\", \"name\": \"yAccessors\", \"required\": true, \"type\": { \"name\": \"AccessorString[]\" } }, \"y0Accessors\": { \"defaultValue\": null, \"description\": \"An optional accessor of the y0 value: base point for area/bar charts\", \"name\": \"y0Accessors\", \"required\": false, \"type\": { \"name\": \"AccessorString[]\" } }, \"splitSeriesAccessors\": { \"defaultValue\": null, \"description\": \"An array of fields thats indicates the datum series membership\", \"name\": \"splitSeriesAccessors\", \"required\": false, \"type\": { \"name\": \"AccessorString[]\" } }, \"stackAccessors\": { \"defaultValue\": null, \"description\": \"An array of fields thats indicates the stack membership\", \"name\": \"stackAccessors\", \"required\": false, \"type\": { \"name\": \"AccessorString[]\" } }, \"colorAccessors\": { \"defaultValue\": null, \"description\": \"An optional array of field name thats indicates the stack membership\", \"name\": \"colorAccessors\", \"required\": false, \"type\": { \"name\": \"AccessorString[]\" } }, \"xScaleType\": { \"defaultValue\": { value: \"ScaleType.Ordinal\" }, \"description\": \"The x axis scale type\", \"name\": \"xScaleType\", \"required\": true, \"type\": { \"name\": \"ScaleType.Linear | ScaleType.Ordinal | ScaleType.Time\" } }, \"timeZone\": { \"defaultValue\": null, \"description\": \"If using a ScaleType.Time this timezone identifier is required to\\ncompute a nice set of xScale ticks. Can be any IANA zone supported by\\nthe host environment, or a fixed-offset name of the form 'utc+3',\\nor the strings 'local' or 'utc'.\", \"name\": \"timeZone\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"yScaleType\": { \"defaultValue\": { value: \"ScaleType.Linear\" }, \"description\": \"The y axis scale type\", \"name\": \"yScaleType\", \"required\": true, \"type\": { \"name\": \"ScaleContinuousType\" } }, \"yScaleToDataExtent\": { \"defaultValue\": { value: \"false\" }, \"description\": \"if true, the min y value is set to the minimum domain value, 0 otherwise\", \"name\": \"yScaleToDataExtent\", \"required\": true, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/series/specs.ts#isLineSeriesSpec\"] = { docgenInfo: isLineSeriesSpec.__docgenInfo, name: \"isLineSeriesSpec\", path: \"src/lib/series/specs.ts#isLineSeriesSpec\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    isAreaSeriesSpec.displayName = \"isAreaSeriesSpec\";\n    // @ts-ignore\n    isAreaSeriesSpec.__docgenInfo = { \"description\": \"\", \"displayName\": \"isAreaSeriesSpec\", \"props\": { \"id\": { \"defaultValue\": null, \"description\": \"The ID of the spec, generated via getSpecId method\", \"name\": \"id\", \"required\": true, \"type\": { \"name\": \"SpecId\" } }, \"name\": { \"defaultValue\": null, \"description\": \"The name or label of the spec\", \"name\": \"name\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"groupId\": { \"defaultValue\": { value: \"__global__\" }, \"description\": \"The ID of the spec group, generated via getGroupId method\", \"name\": \"groupId\", \"required\": true, \"type\": { \"name\": \"GroupId\" } }, \"data\": { \"defaultValue\": null, \"description\": \"An array of data\", \"name\": \"data\", \"required\": true, \"type\": { \"name\": \"any[]\" } }, \"seriesType\": { \"defaultValue\": null, \"description\": \"The type of series you are looking to render\", \"name\": \"seriesType\", \"required\": true, \"type\": { \"name\": \"\\\"line\\\" | \\\"bar\\\" | \\\"area\\\"\" } }, \"customSeriesColors\": { \"defaultValue\": null, \"description\": \"Custom colors for series\", \"name\": \"customSeriesColors\", \"required\": false, \"type\": { \"name\": \"Map<DataSeriesColorsValues, string>\" } }, \"hideInLegend\": { \"defaultValue\": { value: \"false\" }, \"description\": \"If the series should appear in the legend\", \"name\": \"hideInLegend\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"sortIndex\": { \"defaultValue\": null, \"description\": \"Index per series to sort by\", \"name\": \"sortIndex\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"displayValueSettings\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"displayValueSettings\", \"required\": false, \"type\": { \"name\": \"DisplayValueSpec\" } }, \"xAccessor\": { \"defaultValue\": null, \"description\": \"The field name of the x value on Datum object\", \"name\": \"xAccessor\", \"required\": true, \"type\": { \"name\": \"AccessorString\" } }, \"yAccessors\": { \"defaultValue\": null, \"description\": \"An array of field names one per y metric value\", \"name\": \"yAccessors\", \"required\": true, \"type\": { \"name\": \"AccessorString[]\" } }, \"y0Accessors\": { \"defaultValue\": null, \"description\": \"An optional accessor of the y0 value: base point for area/bar charts\", \"name\": \"y0Accessors\", \"required\": false, \"type\": { \"name\": \"AccessorString[]\" } }, \"splitSeriesAccessors\": { \"defaultValue\": null, \"description\": \"An array of fields thats indicates the datum series membership\", \"name\": \"splitSeriesAccessors\", \"required\": false, \"type\": { \"name\": \"AccessorString[]\" } }, \"stackAccessors\": { \"defaultValue\": null, \"description\": \"An array of fields thats indicates the stack membership\", \"name\": \"stackAccessors\", \"required\": false, \"type\": { \"name\": \"AccessorString[]\" } }, \"colorAccessors\": { \"defaultValue\": null, \"description\": \"An optional array of field name thats indicates the stack membership\", \"name\": \"colorAccessors\", \"required\": false, \"type\": { \"name\": \"AccessorString[]\" } }, \"xScaleType\": { \"defaultValue\": { value: \"ScaleType.Ordinal\" }, \"description\": \"The x axis scale type\", \"name\": \"xScaleType\", \"required\": true, \"type\": { \"name\": \"ScaleType.Linear | ScaleType.Ordinal | ScaleType.Time\" } }, \"timeZone\": { \"defaultValue\": null, \"description\": \"If using a ScaleType.Time this timezone identifier is required to\\ncompute a nice set of xScale ticks. Can be any IANA zone supported by\\nthe host environment, or a fixed-offset name of the form 'utc+3',\\nor the strings 'local' or 'utc'.\", \"name\": \"timeZone\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"yScaleType\": { \"defaultValue\": { value: \"ScaleType.Linear\" }, \"description\": \"The y axis scale type\", \"name\": \"yScaleType\", \"required\": true, \"type\": { \"name\": \"ScaleContinuousType\" } }, \"yScaleToDataExtent\": { \"defaultValue\": { value: \"false\" }, \"description\": \"if true, the min y value is set to the minimum domain value, 0 otherwise\", \"name\": \"yScaleToDataExtent\", \"required\": true, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/series/specs.ts#isAreaSeriesSpec\"] = { docgenInfo: isAreaSeriesSpec.__docgenInfo, name: \"isAreaSeriesSpec\", path: \"src/lib/series/specs.ts#isAreaSeriesSpec\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    Position.displayName = \"Position\";\n    // @ts-ignore\n    Position.__docgenInfo = { \"description\": \"The position of the axis relative to the chart.\\nA left or right positioned axis is a vertical axis.\\nA top or bottom positioned axis is an horizontal axis.\", \"displayName\": \"Position\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/series/specs.ts#Position\"] = { docgenInfo: Position.__docgenInfo, name: \"Position\", path: \"src/lib/series/specs.ts#Position\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { inject } from 'mobx-react';\nimport { PureComponent } from 'react';\nimport { DomainRange, Position, Rendering, Rotation } from '../lib/series/specs';\nimport { LIGHT_THEME } from '../lib/themes/light_theme';\nimport { Theme } from '../lib/themes/theme';\nimport { Domain } from '../lib/utils/domain';\nimport { TooltipType } from '../lib/utils/interactions';\nimport {\n  BrushEndListener,\n  ChartStore,\n  ElementClickListener,\n  ElementOverListener,\n  LegendItemListener,\n} from '../state/chart_state';\n\nexport const DEFAULT_TOOLTIP_TYPE = TooltipType.VerticalCursor;\nexport const DEFAULT_TOOLTIP_SNAP = true;\n\ninterface SettingSpecProps {\n  chartStore?: ChartStore;\n  theme?: Theme;\n  rendering: Rendering;\n  rotation: Rotation;\n  animateData: boolean;\n  showLegend: boolean;\n  /** Specify the tooltip type */\n  tooltipType?: TooltipType;\n  /** Snap tooltip to grid */\n  tooltipSnap?: boolean;\n  debug: boolean;\n  legendPosition?: Position;\n  isLegendItemsSortDesc: boolean;\n  showLegendDisplayValue: boolean;\n  onElementClick?: ElementClickListener;\n  onElementOver?: ElementOverListener;\n  onElementOut?: () => undefined;\n  onBrushEnd?: BrushEndListener;\n  onLegendItemOver?: LegendItemListener;\n  onLegendItemOut?: () => undefined;\n  onLegendItemClick?: LegendItemListener;\n  onLegendItemPlusClick?: LegendItemListener;\n  onLegendItemMinusClick?: LegendItemListener;\n  xDomain?: Domain | DomainRange;\n}\n\nfunction updateChartStore(props: SettingSpecProps) {\n  const {\n    chartStore,\n    theme,\n    rotation,\n    rendering,\n    animateData,\n    showLegend,\n    tooltipType,\n    tooltipSnap,\n    legendPosition,\n    showLegendDisplayValue,\n    onElementClick,\n    onElementOver,\n    onElementOut,\n    onBrushEnd,\n    onLegendItemOver,\n    onLegendItemOut,\n    onLegendItemClick,\n    onLegendItemMinusClick,\n    onLegendItemPlusClick,\n    debug,\n    xDomain,\n  } = props;\n  if (!chartStore) {\n    return;\n  }\n  chartStore.chartTheme = theme || LIGHT_THEME;\n  chartStore.chartRotation = rotation;\n  chartStore.chartRendering = rendering;\n  chartStore.animateData = animateData;\n  chartStore.debug = debug;\n\n  chartStore.tooltipType.set(tooltipType!);\n  chartStore.tooltipSnap.set(tooltipSnap!);\n\n  chartStore.setShowLegend(showLegend);\n  chartStore.legendPosition = legendPosition;\n  chartStore.showLegendDisplayValue.set(showLegendDisplayValue);\n  chartStore.xDomain = xDomain;\n\n  if (onElementOver) {\n    chartStore.setOnElementOverListener(onElementOver);\n  }\n  if (onElementClick) {\n    chartStore.setOnElementClickListener(onElementClick);\n  }\n  if (onElementOut) {\n    chartStore.setOnElementOutListener(onElementOut);\n  }\n  if (onBrushEnd) {\n    chartStore.setOnBrushEndListener(onBrushEnd);\n  }\n  if (onLegendItemOver) {\n    chartStore.setOnLegendItemOverListener(onLegendItemOver);\n  }\n  if (onLegendItemOut) {\n    chartStore.setOnLegendItemOutListener(onLegendItemOut);\n  }\n  if (onLegendItemClick) {\n    chartStore.setOnLegendItemClickListener(onLegendItemClick);\n  }\n  if (onLegendItemPlusClick) {\n    chartStore.setOnLegendItemPlusClickListener(onLegendItemPlusClick);\n  }\n  if (onLegendItemMinusClick) {\n    chartStore.setOnLegendItemMinusClickListener(onLegendItemMinusClick);\n  }\n}\n\nexport class SettingsComponent extends PureComponent<SettingSpecProps> {\n  static defaultProps: Partial<SettingSpecProps> = {\n    rendering: 'canvas',\n    rotation: 0,\n    animateData: true,\n    showLegend: false,\n    debug: false,\n    tooltipType: DEFAULT_TOOLTIP_TYPE,\n    tooltipSnap: DEFAULT_TOOLTIP_SNAP,\n    showLegendDisplayValue: true,\n  };\n  componentDidMount() {\n    updateChartStore(this.props);\n  }\n  componentDidUpdate() {\n    updateChartStore(this.props);\n  }\n  render() {\n    return null;\n  }\n}\n\nexport const Settings = inject('chartStore')(SettingsComponent);\ntry {\n    // @ts-ignore\n    SettingsComponent.displayName = \"SettingsComponent\";\n    // @ts-ignore\n    SettingsComponent.__docgenInfo = { \"description\": \"\", \"displayName\": \"SettingsComponent\", \"props\": { \"chartStore\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"chartStore\", \"required\": false, \"type\": { \"name\": \"ChartStore\" } }, \"theme\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"theme\", \"required\": false, \"type\": { \"name\": \"Theme\" } }, \"rendering\": { \"defaultValue\": { value: \"canvas\" }, \"description\": \"\", \"name\": \"rendering\", \"required\": true, \"type\": { \"name\": \"Rendering\" } }, \"rotation\": { \"defaultValue\": { value: \"0\" }, \"description\": \"\", \"name\": \"rotation\", \"required\": true, \"type\": { \"name\": \"Rotation\" } }, \"animateData\": { \"defaultValue\": { value: \"true\" }, \"description\": \"\", \"name\": \"animateData\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"showLegend\": { \"defaultValue\": { value: \"false\" }, \"description\": \"\", \"name\": \"showLegend\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"tooltipType\": { \"defaultValue\": null, \"description\": \"Specify the tooltip type\", \"name\": \"tooltipType\", \"required\": false, \"type\": { \"name\": \"TooltipType\" } }, \"tooltipSnap\": { \"defaultValue\": null, \"description\": \"Snap tooltip to grid\", \"name\": \"tooltipSnap\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"debug\": { \"defaultValue\": { value: \"false\" }, \"description\": \"\", \"name\": \"debug\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"legendPosition\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"legendPosition\", \"required\": false, \"type\": { \"name\": \"Position\" } }, \"isLegendItemsSortDesc\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isLegendItemsSortDesc\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"showLegendDisplayValue\": { \"defaultValue\": { value: \"true\" }, \"description\": \"\", \"name\": \"showLegendDisplayValue\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"onElementClick\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onElementClick\", \"required\": false, \"type\": { \"name\": \"ElementClickListener\" } }, \"onElementOver\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onElementOver\", \"required\": false, \"type\": { \"name\": \"ElementOverListener\" } }, \"onElementOut\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onElementOut\", \"required\": false, \"type\": { \"name\": \"() => undefined\" } }, \"onBrushEnd\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onBrushEnd\", \"required\": false, \"type\": { \"name\": \"BrushEndListener\" } }, \"onLegendItemOver\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onLegendItemOver\", \"required\": false, \"type\": { \"name\": \"LegendItemListener\" } }, \"onLegendItemOut\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onLegendItemOut\", \"required\": false, \"type\": { \"name\": \"() => undefined\" } }, \"onLegendItemClick\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onLegendItemClick\", \"required\": false, \"type\": { \"name\": \"LegendItemListener\" } }, \"onLegendItemPlusClick\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onLegendItemPlusClick\", \"required\": false, \"type\": { \"name\": \"LegendItemListener\" } }, \"onLegendItemMinusClick\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onLegendItemMinusClick\", \"required\": false, \"type\": { \"name\": \"LegendItemListener\" } }, \"xDomain\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"xDomain\", \"required\": false, \"type\": { \"name\": \"any[] | LowerBoundedDomain | UpperBoundedDomain | CompleteBoundedDomain\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/specs/settings.tsx#SettingsComponent\"] = { docgenInfo: SettingsComponent.__docgenInfo, name: \"SettingsComponent\", path: \"src/specs/settings.tsx#SettingsComponent\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    Settings.displayName = \"Settings\";\n    // @ts-ignore\n    Settings.__docgenInfo = { \"description\": \"\", \"displayName\": \"Settings\", \"props\": { \"chartStore\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"chartStore\", \"required\": false, \"type\": { \"name\": \"ChartStore\" } }, \"theme\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"theme\", \"required\": false, \"type\": { \"name\": \"Theme\" } }, \"rendering\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"rendering\", \"required\": true, \"type\": { \"name\": \"Rendering\" } }, \"rotation\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"rotation\", \"required\": true, \"type\": { \"name\": \"Rotation\" } }, \"animateData\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"animateData\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"showLegend\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"showLegend\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"tooltipType\": { \"defaultValue\": null, \"description\": \"Specify the tooltip type\", \"name\": \"tooltipType\", \"required\": false, \"type\": { \"name\": \"TooltipType\" } }, \"tooltipSnap\": { \"defaultValue\": null, \"description\": \"Snap tooltip to grid\", \"name\": \"tooltipSnap\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"debug\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"debug\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"legendPosition\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"legendPosition\", \"required\": false, \"type\": { \"name\": \"Position\" } }, \"isLegendItemsSortDesc\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isLegendItemsSortDesc\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"showLegendDisplayValue\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"showLegendDisplayValue\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"onElementClick\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onElementClick\", \"required\": false, \"type\": { \"name\": \"ElementClickListener\" } }, \"onElementOver\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onElementOver\", \"required\": false, \"type\": { \"name\": \"ElementOverListener\" } }, \"onElementOut\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onElementOut\", \"required\": false, \"type\": { \"name\": \"() => undefined\" } }, \"onBrushEnd\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onBrushEnd\", \"required\": false, \"type\": { \"name\": \"BrushEndListener\" } }, \"onLegendItemOver\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onLegendItemOver\", \"required\": false, \"type\": { \"name\": \"LegendItemListener\" } }, \"onLegendItemOut\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onLegendItemOut\", \"required\": false, \"type\": { \"name\": \"() => undefined\" } }, \"onLegendItemClick\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onLegendItemClick\", \"required\": false, \"type\": { \"name\": \"LegendItemListener\" } }, \"onLegendItemPlusClick\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onLegendItemPlusClick\", \"required\": false, \"type\": { \"name\": \"LegendItemListener\" } }, \"onLegendItemMinusClick\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onLegendItemMinusClick\", \"required\": false, \"type\": { \"name\": \"LegendItemListener\" } }, \"xDomain\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"xDomain\", \"required\": false, \"type\": { \"name\": \"any[] | LowerBoundedDomain | UpperBoundedDomain | CompleteBoundedDomain\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/specs/settings.tsx#Settings\"] = { docgenInfo: Settings.__docgenInfo, name: \"Settings\", path: \"src/specs/settings.tsx#Settings\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { bisectLeft } from 'd3-array';\nimport { scaleLinear, scaleLog, scaleSqrt, scaleUtc } from 'd3-scale';\nimport { DateTime } from 'luxon';\nimport { clamp } from '../commons';\nimport { ScaleContinuousType, ScaleType } from './scales';\nimport { Scale } from './scales';\n\nconst SCALES = {\n  [ScaleType.Linear]: scaleLinear,\n  [ScaleType.Log]: scaleLog,\n  [ScaleType.Sqrt]: scaleSqrt,\n  [ScaleType.Time]: scaleUtc,\n};\n\nexport function limitToMin(value: number, positive: boolean) {\n  if (value === 0) {\n    return positive ? 1 : -1;\n  }\n  return value;\n}\n/**\n * As log(0) = -Infinite, a log scale domain must be strictly-positive\n * or strictly-negative; the domain must not include or cross zero value.\n * We need to limit the domain scale to the right value on all possible cases.\n * @param domain the domain to limit\n */\nexport function limitLogScaleDomain(domain: any[]) {\n  if (domain[0] === 0) {\n    if (domain[1] > 0) {\n      return [1, domain[1]];\n    } else if (domain[1] < 0) {\n      return [-1, domain[1]];\n    } else {\n      return [1, 1];\n    }\n  }\n  if (domain[1] === 0) {\n    if (domain[0] > 0) {\n      return [domain[0], 1];\n    } else if (domain[0] < 0) {\n      return [domain[0], -1];\n    } else {\n      return [1, 1];\n    }\n  }\n  if (domain[0] < 0 && domain[1] > 0) {\n    const isD0Min = Math.abs(domain[1]) - Math.abs(domain[0]) >= 0;\n    if (isD0Min) {\n      return [1, domain[1]];\n    } else {\n      return [domain[0], -1];\n    }\n  }\n  if (domain[0] > 0 && domain[1] < 0) {\n    const isD0Max = Math.abs(domain[0]) - Math.abs(domain[1]) >= 0;\n    if (isD0Max) {\n      return [domain[0], 1];\n    } else {\n      return [-1, domain[1]];\n    }\n  }\n  return domain;\n}\n\nexport class ScaleContinuous implements Scale {\n  readonly bandwidth: number;\n  readonly totalBarsInCluster: number;\n  readonly bandwidthPadding: number;\n  readonly minInterval: number;\n  readonly step: number;\n  readonly type: ScaleType;\n  readonly domain: any[];\n  readonly range: number[];\n  readonly isInverted: boolean;\n  readonly tickValues: number[];\n  readonly timeZone: string;\n  readonly barsPadding: number;\n  private readonly d3Scale: any;\n\n  constructor(\n    type: ScaleContinuousType,\n    domain: any[],\n    range: [number, number],\n    /**\n     * The desidered bandwidth for a linear band scale.\n     * @default 0\n     */\n    bandwidth: number = 0,\n    /**\n     * The min interval computed on the XDomain. Not available for yDomains.\n     * @default 0\n     */\n    minInterval: number = 0,\n    /**\n     * A time zone identifier. Can be any IANA zone supported by he host environment,\n     * or a fixed-offset name of the form 'utc+3', or the strings 'local' or 'utc'.\n     * @default 'utc'\n     */\n    timeZone: string = 'utc',\n    /**\n     * The number of bars in the cluster. Used to correctly compute scales when\n     * using padding between bars.\n     * @default 1\n     */\n    totalBarsInCluster: number = 1,\n    /**\n     * The proportion of the range that is reserved for blank space between bands\n     * A number between 0 and 1.\n     * @default 0\n     */\n    barsPadding: number = 0,\n  ) {\n    this.d3Scale = SCALES[type]();\n    if (type === ScaleType.Log) {\n      this.domain = limitLogScaleDomain(domain);\n      this.d3Scale.domain(this.domain);\n    } else {\n      this.domain = domain;\n      this.d3Scale.domain(domain);\n    }\n    const safeBarPadding = clamp(barsPadding, 0, 1);\n    this.barsPadding = safeBarPadding;\n    this.bandwidth = bandwidth * (1 - safeBarPadding);\n    this.bandwidthPadding = bandwidth * safeBarPadding;\n    this.d3Scale.range(range);\n    this.step = 0;\n    this.type = type;\n    this.range = range;\n    this.minInterval = minInterval;\n    this.isInverted = this.domain[0] > this.domain[1];\n    this.timeZone = timeZone;\n    this.totalBarsInCluster = totalBarsInCluster;\n    if (type === ScaleType.Time) {\n      const startDomain = DateTime.fromMillis(this.domain[0], { zone: this.timeZone });\n      const endDomain = DateTime.fromMillis(this.domain[1], { zone: this.timeZone });\n      const offset = startDomain.offset;\n      const shiftedDomainMin = startDomain.plus({ minutes: offset }).toMillis();\n      const shiftedDomainMax = endDomain.plus({ minutes: offset }).toMillis();\n      const tzShiftedScale = scaleUtc().domain([shiftedDomainMin, shiftedDomainMax]);\n\n      const rawTicks = tzShiftedScale.ticks();\n      const timePerTick = (shiftedDomainMax - shiftedDomainMin) / rawTicks.length;\n      const hasHourTicks = timePerTick < 1000 * 60 * 60 * 12;\n\n      this.tickValues = rawTicks.map((d: Date) => {\n        const currentDateTime = DateTime.fromJSDate(d, { zone: this.timeZone });\n        const currentOffset = hasHourTicks ? offset : currentDateTime.offset;\n        return currentDateTime\n          .minus({ minutes: currentOffset })\n          .toMillis();\n      });\n\n    } else {\n      if (this.minInterval > 0) {\n        const intervalCount = Math.floor((this.domain[1] - this.domain[0]) / this.minInterval);\n        this.tickValues = new Array(intervalCount + 1).fill(0).map((d, i) => {\n          return this.domain[0] + i * this.minInterval;\n        });\n      } else {\n        this.tickValues = this.d3Scale.ticks();\n      }\n    }\n  }\n\n  scale(value: any) {\n    return this.d3Scale(value) + (this.bandwidthPadding / 2) * this.totalBarsInCluster;\n  }\n\n  ticks() {\n    return this.tickValues;\n  }\n  invert(value: number) {\n    let invertedValue = this.d3Scale.invert(value);\n    if (this.type === ScaleType.Time) {\n      invertedValue = DateTime.fromJSDate(invertedValue).toMillis();\n    }\n    return invertedValue;\n  }\n  invertWithStep(value: number, data: number[]): any {\n    const invertedValue = this.invert(value - this.bandwidth / 2);\n    const leftIndex = bisectLeft(data, invertedValue);\n    if (leftIndex === 0) {\n      // is equal or less than the first value\n      const prevValue1 = data[leftIndex];\n      if (data.length === 0) {\n        return prevValue1;\n      }\n      const nextValue1 = data[leftIndex + 1];\n      const nextDiff1 = Math.abs(nextValue1 - invertedValue);\n      const prevDiff1 = Math.abs(invertedValue - prevValue1);\n      if (nextDiff1 < prevDiff1) {\n        return nextValue1;\n      }\n      return prevValue1;\n    }\n    if (leftIndex === data.length) {\n      return data[leftIndex - 1];\n    }\n    const nextValue = data[leftIndex];\n    const prevValue = data[leftIndex - 1];\n    const nextDiff = Math.abs(nextValue - invertedValue);\n    const prevDiff = Math.abs(invertedValue - prevValue);\n    if (nextDiff <= prevDiff) {\n      return nextValue;\n    }\n    return prevValue;\n  }\n}\n\nexport function isContinuousScale(scale: Scale): scale is ScaleContinuous {\n  return scale.type !== ScaleType.Ordinal;\n}\n\nexport function isLogarithmicScale(scale: Scale) {\n  return scale.type === ScaleType.Log;\n}\ntry {\n    // @ts-ignore\n    limitLogScaleDomain.displayName = \"limitLogScaleDomain\";\n    // @ts-ignore\n    limitLogScaleDomain.__docgenInfo = { \"description\": \"As log(0) = -Infinite, a log scale domain must be strictly-positive\\nor strictly-negative; the domain must not include or cross zero value.\\nWe need to limit the domain scale to the right value on all possible cases.\\n@param domain the domain to limit\", \"displayName\": \"limitLogScaleDomain\", \"props\": { \"length\": { \"defaultValue\": null, \"description\": \"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.\", \"name\": \"length\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of an array.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.\", \"name\": \"toLocaleString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"pop\": { \"defaultValue\": null, \"description\": \"Removes the last element from an array and returns it.\", \"name\": \"pop\", \"required\": true, \"type\": { \"name\": \"() => any\" } }, \"push\": { \"defaultValue\": null, \"description\": \"Appends new elements to an array, and returns the new length of the array.\\n@param items New elements of the Array.\", \"name\": \"push\", \"required\": true, \"type\": { \"name\": \"(...items: any[]) => number\" } }, \"concat\": { \"defaultValue\": null, \"description\": \"Combines two or more arrays.\\nCombines two or more arrays.\\n@param items Additional items to add to the end of array1.\\n@param items Additional items to add to the end of array1.\", \"name\": \"concat\", \"required\": true, \"type\": { \"name\": \"{ (...items: ConcatArray<any>[]): any[]; (...items: any[]): any[]; }\" } }, \"join\": { \"defaultValue\": null, \"description\": \"Adds all the elements of an array separated by the specified separator string.\\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.\", \"name\": \"join\", \"required\": true, \"type\": { \"name\": \"(separator?: string) => string\" } }, \"reverse\": { \"defaultValue\": null, \"description\": \"Reverses the elements in an Array.\", \"name\": \"reverse\", \"required\": true, \"type\": { \"name\": \"() => any[]\" } }, \"shift\": { \"defaultValue\": null, \"description\": \"Removes the first element from an array and returns it.\", \"name\": \"shift\", \"required\": true, \"type\": { \"name\": \"() => any\" } }, \"slice\": { \"defaultValue\": null, \"description\": \"Returns a section of an array.\\n@param start The beginning of the specified portion of the array.\\n@param end The end of the specified portion of the array.\", \"name\": \"slice\", \"required\": true, \"type\": { \"name\": \"(start?: number, end?: number) => any[]\" } }, \"sort\": { \"defaultValue\": null, \"description\": \"Sorts an array.\\n@param compareFn The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, ASCII character order.\", \"name\": \"sort\", \"required\": true, \"type\": { \"name\": \"(compareFn?: (a: any, b: any) => number) => any[]\" } }, \"splice\": { \"defaultValue\": null, \"description\": \"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param items Elements to insert into the array in place of the deleted elements.\", \"name\": \"splice\", \"required\": true, \"type\": { \"name\": \"{ (start: number, deleteCount?: number): any[]; (start: number, deleteCount: number, ...items: any[]): any[]; }\" } }, \"unshift\": { \"defaultValue\": null, \"description\": \"Inserts new elements at the start of an array.\\n@param items Elements to insert at the start of the Array.\", \"name\": \"unshift\", \"required\": true, \"type\": { \"name\": \"(...items: any[]) => number\" } }, \"indexOf\": { \"defaultValue\": null, \"description\": \"Returns the index of the first occurrence of a value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\", \"name\": \"indexOf\", \"required\": true, \"type\": { \"name\": \"(searchElement: any, fromIndex?: number) => number\" } }, \"lastIndexOf\": { \"defaultValue\": null, \"description\": \"Returns the index of the last occurrence of a specified value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.\", \"name\": \"lastIndexOf\", \"required\": true, \"type\": { \"name\": \"(searchElement: any, fromIndex?: number) => number\" } }, \"every\": { \"defaultValue\": null, \"description\": \"Determines whether all the members of an array satisfy the specified test.\\n@param callbackfn A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"every\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: any, index: number, array: any[]) => boolean, thisArg?: any) => boolean\" } }, \"some\": { \"defaultValue\": null, \"description\": \"Determines whether the specified callback function returns true for any element of an array.\\n@param callbackfn A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"some\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: any, index: number, array: any[]) => boolean, thisArg?: any) => boolean\" } }, \"forEach\": { \"defaultValue\": null, \"description\": \"Performs the specified action for each element in an array.\\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"forEach\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: any, index: number, array: any[]) => void, thisArg?: any) => void\" } }, \"map\": { \"defaultValue\": null, \"description\": \"Calls a defined callback function on each element of an array, and returns an array that contains the results.\\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"map\", \"required\": true, \"type\": { \"name\": \"<U>(callbackfn: (value: any, index: number, array: any[]) => U, thisArg?: any) => U[]\" } }, \"filter\": { \"defaultValue\": null, \"description\": \"Returns the elements of an array that meet the condition specified in a callback function.\\nReturns the elements of an array that meet the condition specified in a callback function.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"filter\", \"required\": true, \"type\": { \"name\": \"{ <S extends any>(callbackfn: (value: any, index: number, array: any[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: any, index: number, array: any[]) => any, thisArg?: any): any[]; }\" } }, \"reduce\": { \"defaultValue\": null, \"description\": \"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\", \"name\": \"reduce\", \"required\": true, \"type\": { \"name\": \"{ (callbackfn: (previousValue: any, currentValue: any, currentIndex: number, array: any[]) => any): any; (callbackfn: (previousValue: any, currentValue: any, currentIndex: number, array: any[]) => any, initialValue: any): any; <U>(callbackfn: (previousValue: U, currentValue: any, currentIndex: number, array: any[]) ...\" } }, \"reduceRight\": { \"defaultValue\": null, \"description\": \"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\", \"name\": \"reduceRight\", \"required\": true, \"type\": { \"name\": \"{ (callbackfn: (previousValue: any, currentValue: any, currentIndex: number, array: any[]) => any): any; (callbackfn: (previousValue: any, currentValue: any, currentIndex: number, array: any[]) => any, initialValue: any): any; <U>(callbackfn: (previousValue: U, currentValue: any, currentIndex: number, array: any[]) ...\" } }, \"find\": { \"defaultValue\": null, \"description\": \"Returns the value of the first element in the array where predicate is true, and undefined\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\rorder, until it finds one where predicate returns true. If such an element is found, find\\rimmediately returns that element value. Otherwise, find returns undefined.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\rpredicate. If it is not provided, undefined is used instead.\", \"name\": \"find\", \"required\": true, \"type\": { \"name\": \"{ <S extends any>(predicate: (this: void, value: any, index: number, obj: any[]) => value is S, thisArg?: any): S; (predicate: (value: any, index: number, obj: any[]) => boolean, thisArg?: any): any; }\" } }, \"findIndex\": { \"defaultValue\": null, \"description\": \"Returns the index of the first element in the array where predicate is true, and -1\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\rorder, until it finds one where predicate returns true. If such an element is found,\\rfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\rpredicate. If it is not provided, undefined is used instead.\", \"name\": \"findIndex\", \"required\": true, \"type\": { \"name\": \"(predicate: (value: any, index: number, obj: any[]) => boolean, thisArg?: any) => number\" } }, \"fill\": { \"defaultValue\": null, \"description\": \"Returns the this object after filling the section identified by start and end with value\\n@param value value to fill array section with\\n@param start index to start filling the array at. If start is negative, it is treated as\\rlength+start where length is the length of the array.\\n@param end index to stop filling the array at. If end is negative, it is treated as\\rlength+end.\", \"name\": \"fill\", \"required\": true, \"type\": { \"name\": \"(value: any, start?: number, end?: number) => any[]\" } }, \"copyWithin\": { \"defaultValue\": null, \"description\": \"Returns the this object after copying a section of the array identified by start and end\\nto the same array starting at position target\\n@param target If target is negative, it is treated as length+target where length is the\\rlength of the array.\\n@param start If start is negative, it is treated as length+start. If end is negative, it\\ris treated as length+end.\\n@param end If not specified, length of the this object is used as its default value.\", \"name\": \"copyWithin\", \"required\": true, \"type\": { \"name\": \"(target: number, start: number, end?: number) => any[]\" } }, \"__@iterator\": { \"defaultValue\": null, \"description\": \"Iterator\", \"name\": \"__@iterator\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<any>\" } }, \"entries\": { \"defaultValue\": null, \"description\": \"Returns an iterable of key, value pairs for every entry in the array\", \"name\": \"entries\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<[number, any]>\" } }, \"keys\": { \"defaultValue\": null, \"description\": \"Returns an iterable of keys in the array\", \"name\": \"keys\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<number>\" } }, \"values\": { \"defaultValue\": null, \"description\": \"Returns an iterable of values in the array\", \"name\": \"values\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<any>\" } }, \"__@unscopables\": { \"defaultValue\": null, \"description\": \"Returns an object whose properties have the value 'true'\\nwhen they will be absent when used in a 'with' statement.\", \"name\": \"__@unscopables\", \"required\": true, \"type\": { \"name\": \"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }\" } }, \"includes\": { \"defaultValue\": null, \"description\": \"Determines whether an array includes a certain element, returning true or false as appropriate.\\n@param searchElement The element to search for.\\n@param fromIndex The position in this array at which to begin searching for searchElement.\", \"name\": \"includes\", \"required\": true, \"type\": { \"name\": \"(searchElement: any, fromIndex?: number) => boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/utils/scales/scale_continuous.ts#limitLogScaleDomain\"] = { docgenInfo: limitLogScaleDomain.__docgenInfo, name: \"limitLogScaleDomain\", path: \"src/lib/utils/scales/scale_continuous.ts#limitLogScaleDomain\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    isContinuousScale.displayName = \"isContinuousScale\";\n    // @ts-ignore\n    isContinuousScale.__docgenInfo = { \"description\": \"\", \"displayName\": \"isContinuousScale\", \"props\": { \"domain\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"domain\", \"required\": true, \"type\": { \"name\": \"any[]\" } }, \"range\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"range\", \"required\": true, \"type\": { \"name\": \"number[]\" } }, \"ticks\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"ticks\", \"required\": true, \"type\": { \"name\": \"() => any[]\" } }, \"scale\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"scale\", \"required\": true, \"type\": { \"name\": \"(value: any) => number\" } }, \"invert\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"invert\", \"required\": true, \"type\": { \"name\": \"(value: number) => any\" } }, \"invertWithStep\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"invertWithStep\", \"required\": true, \"type\": { \"name\": \"(value: number, data: any[]) => any\" } }, \"bandwidth\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"bandwidth\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"minInterval\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"minInterval\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"type\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"type\", \"required\": true, \"type\": { \"name\": \"ScaleType\" } }, \"isInverted\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isInverted\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"barsPadding\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"barsPadding\", \"required\": true, \"type\": { \"name\": \"number\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/utils/scales/scale_continuous.ts#isContinuousScale\"] = { docgenInfo: isContinuousScale.__docgenInfo, name: \"isContinuousScale\", path: \"src/lib/utils/scales/scale_continuous.ts#isContinuousScale\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    isLogarithmicScale.displayName = \"isLogarithmicScale\";\n    // @ts-ignore\n    isLogarithmicScale.__docgenInfo = { \"description\": \"\", \"displayName\": \"isLogarithmicScale\", \"props\": { \"domain\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"domain\", \"required\": true, \"type\": { \"name\": \"any[]\" } }, \"range\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"range\", \"required\": true, \"type\": { \"name\": \"number[]\" } }, \"ticks\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"ticks\", \"required\": true, \"type\": { \"name\": \"() => any[]\" } }, \"scale\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"scale\", \"required\": true, \"type\": { \"name\": \"(value: any) => number\" } }, \"invert\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"invert\", \"required\": true, \"type\": { \"name\": \"(value: number) => any\" } }, \"invertWithStep\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"invertWithStep\", \"required\": true, \"type\": { \"name\": \"(value: number, data: any[]) => any\" } }, \"bandwidth\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"bandwidth\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"minInterval\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"minInterval\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"type\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"type\", \"required\": true, \"type\": { \"name\": \"ScaleType\" } }, \"isInverted\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isInverted\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"barsPadding\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"barsPadding\", \"required\": true, \"type\": { \"name\": \"number\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/utils/scales/scale_continuous.ts#isLogarithmicScale\"] = { docgenInfo: isLogarithmicScale.__docgenInfo, name: \"isLogarithmicScale\", path: \"src/lib/utils/scales/scale_continuous.ts#isLogarithmicScale\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { extent, sum } from 'd3-array';\nimport { nest } from 'd3-collection';\nimport { Accessor, AccessorFn } from './accessor';\nimport { ScaleType } from './scales/scales';\n\nexport type Domain = any[];\n\nexport interface SpecDomain {\n  accessor: Accessor;\n  level: number;\n  domain: Domain;\n  scaleType: ScaleType;\n  isStacked?: boolean;\n}\n\nexport interface ColorDomain {\n  accessors: Accessor[];\n  yAccessors?: Accessor[];\n  domain: string[];\n  scaleType: ScaleType;\n}\n\nexport interface SeriesScales {\n  groupLevel: number;\n  xDomain: Domain;\n  yDomain?: Domain;\n  xScaleType: ScaleType;\n  yScaleType?: ScaleType;\n  xAccessor: Accessor;\n  yAccessor?: Accessor;\n}\n\nexport function computeOrdinalDataDomain(\n  data: any[],\n  accessor: AccessorFn,\n  sorted?: boolean,\n  removeNull?: boolean,\n): string[] | number[] {\n  const domain = data.map(accessor).filter((d) => (removeNull ? d !== null : true));\n  const uniqueValues = [...new Set(domain)];\n  return sorted\n    ? uniqueValues.sort((a, b) => {\n      return `${a}`.localeCompare(`${b}`);\n    })\n    : uniqueValues;\n}\n\nexport function computeDomainExtent(\n  computedDomain: [number, number] | [undefined, undefined],\n  scaleToExtent: boolean,\n): [number, number] {\n  const [start, end] = computedDomain;\n\n  if (start != null && end != null) {\n    if (start >= 0 && end >= 0) {\n      return scaleToExtent ? [start, end] : [0, end];\n    } else if (start < 0 && end < 0) {\n      return scaleToExtent ? [start, end] : [start, 0];\n    }\n    return [start, end];\n  }\n\n  // if any of the values are null\n  return [0, 0];\n}\n\nexport function computeContinuousDataDomain(\n  data: any[],\n  accessor: AccessorFn,\n  scaleToExtent = false,\n): number[] {\n  const range = extent(data, accessor);\n  return computeDomainExtent(range, scaleToExtent);\n}\n\nexport function computeStackedContinuousDomain(\n  data: any[],\n  xAccessor: AccessorFn,\n  yAccessor: AccessorFn,\n  scaleToExtent = false,\n): any {\n  const groups = nest<any, number>()\n    .key((datum: any) => `${xAccessor(datum)}`)\n    .rollup((values: any) => {\n      return sum(values, yAccessor);\n    })\n    .entries(data);\n  const cumulativeSumAccessor = (d: any) => d.value;\n  return computeContinuousDataDomain(groups, cumulativeSumAccessor, scaleToExtent);\n}\n","import { sum } from 'd3-array';\nimport { isCompleteBound, isLowerBound, isUpperBound } from '../../axes/axis_utils';\nimport { identity } from '../../utils/commons';\nimport { computeContinuousDataDomain } from '../../utils/domain';\nimport { GroupId, SpecId } from '../../utils/ids';\nimport { ScaleContinuousType, ScaleType } from '../../utils/scales/scales';\nimport { RawDataSeries } from '../series';\nimport { BasicSeriesSpec, DomainRange } from '../specs';\nimport { BaseDomain } from './domain';\n\nexport type YDomain = BaseDomain & {\n  type: 'yDomain';\n  isBandScale: false;\n  scaleType: ScaleContinuousType;\n  groupId: GroupId;\n};\nexport type YBasicSeriesSpec = Pick<\n  BasicSeriesSpec,\n  | 'id'\n  | 'seriesType'\n  | 'yScaleType'\n  | 'groupId'\n  | 'stackAccessors'\n  | 'yScaleToDataExtent'\n  | 'colorAccessors'\n>;\n\nexport function mergeYDomain(\n  dataSeries: Map<SpecId, RawDataSeries[]>,\n  specs: YBasicSeriesSpec[],\n  domainsByGroupId: Map<GroupId, DomainRange>,\n): YDomain[] {\n  // group specs by group ids\n  const specsByGroupIds = splitSpecsByGroupId(specs);\n\n  const specsByGroupIdsEntries = [...specsByGroupIds.entries()];\n\n  const yDomains = specsByGroupIdsEntries.map(\n    ([groupId, groupSpecs]): YDomain => {\n      const groupYScaleType = coerceYScaleTypes([...groupSpecs.stacked, ...groupSpecs.nonStacked]);\n\n      // compute stacked domain\n      const isStackedScaleToExtent = groupSpecs.stacked.some((spec) => {\n        return spec.yScaleToDataExtent;\n      });\n      const stackedDataSeries = getDataSeriesOnGroup(dataSeries, groupSpecs.stacked);\n      const stackedDomain = computeYStackedDomain(stackedDataSeries, isStackedScaleToExtent);\n\n      // compute non stacked domain\n      const isNonStackedScaleToExtent = groupSpecs.nonStacked.some((spec) => {\n        return spec.yScaleToDataExtent;\n      });\n      const nonStackedDataSeries = getDataSeriesOnGroup(dataSeries, groupSpecs.nonStacked);\n      const nonStackedDomain = computeYNonStackedDomain(\n        nonStackedDataSeries,\n        isNonStackedScaleToExtent,\n      );\n\n      // merge stacked and non stacked domain together\n      const groupDomain = computeContinuousDataDomain(\n        [...stackedDomain, ...nonStackedDomain],\n        identity,\n        isStackedScaleToExtent || isNonStackedScaleToExtent,\n      );\n\n      const [computedDomainMin, computedDomainMax] = groupDomain;\n      let domain = groupDomain;\n\n      const customDomain = domainsByGroupId.get(groupId);\n\n      if (customDomain && isCompleteBound(customDomain)) {\n        // Don't need to check min > max because this has been validated on axis domain merge\n        domain = [customDomain.min, customDomain.max];\n      } else if (customDomain && isLowerBound(customDomain)) {\n        if (customDomain.min > computedDomainMax) {\n          throw new Error(\n            `custom yDomain for ${groupId} is invalid, custom min is greater than computed max`,\n          );\n        }\n\n        domain = [customDomain.min, computedDomainMax];\n      } else if (customDomain && isUpperBound(customDomain)) {\n        if (computedDomainMin > customDomain.max) {\n          throw new Error(\n            `custom yDomain for ${groupId} is invalid, computed min is greater than custom max`,\n          );\n        }\n\n        domain = [computedDomainMin, customDomain.max];\n      }\n\n      return {\n        type: 'yDomain',\n        isBandScale: false,\n        scaleType: groupYScaleType,\n        groupId,\n        domain,\n      };\n    },\n  );\n\n  return yDomains;\n}\n\nexport function getDataSeriesOnGroup(\n  dataSeries: Map<SpecId, RawDataSeries[]>,\n  specs: YBasicSeriesSpec[],\n): RawDataSeries[] {\n  return specs.reduce(\n    (acc, spec) => {\n      const ds = dataSeries.get(spec.id) || [];\n      return [...acc, ...ds];\n    },\n    [] as RawDataSeries[],\n  );\n}\n\nfunction computeYStackedDomain(dataseries: RawDataSeries[], scaleToExtent: boolean): number[] {\n  const stackMap = new Map<any, any[]>();\n  dataseries.forEach((ds, index) => {\n    ds.data.forEach((datum) => {\n      const stack = stackMap.get(datum.x) || [];\n      stack[index] = datum.y1;\n      stackMap.set(datum.x, stack);\n    });\n  });\n  const dataValues = [];\n  for (const stackValues of stackMap) {\n    dataValues.push(...stackValues[1]);\n    if (stackValues[1].length > 1) {\n      dataValues.push(sum(stackValues[1]));\n    }\n  }\n  if (dataValues.length === 0) {\n    return [];\n  }\n  return computeContinuousDataDomain(dataValues, identity, scaleToExtent);\n}\nfunction computeYNonStackedDomain(dataseries: RawDataSeries[], scaleToExtent: boolean) {\n  const yValues = new Set<any>();\n  dataseries.forEach((ds) => {\n    ds.data.forEach((datum) => {\n      yValues.add(datum.y1);\n      if (datum.y0 != null) {\n        yValues.add(datum.y0);\n      }\n    });\n  });\n  if (yValues.size === 0) {\n    return [];\n  }\n  return computeContinuousDataDomain([...yValues.values()], identity, scaleToExtent);\n}\nexport function splitSpecsByGroupId(specs: YBasicSeriesSpec[]) {\n  const specsByGroupIds = new Map<\n    GroupId,\n    { stacked: YBasicSeriesSpec[]; nonStacked: YBasicSeriesSpec[] }\n  >();\n  // split each specs by groupId and by stacked or not\n  specs.forEach((spec) => {\n    const group = specsByGroupIds.get(spec.groupId) || {\n      stacked: [],\n      nonStacked: [],\n    };\n    if (spec.stackAccessors && spec.stackAccessors.length > 0) {\n      group.stacked.push(spec);\n    } else {\n      group.nonStacked.push(spec);\n    }\n    specsByGroupIds.set(spec.groupId, group);\n  });\n  return specsByGroupIds;\n}\n\n/**\n * Coerce the scale types of a set of specification to a generic one.\n * If there is at least one bar series type, than the response will specity\n * that the coerced scale is a `scaleBand` (each point needs to have a surrounding empty\n * space to draw the bar width).\n * If there are multiple continuous scale types, is coerced to linear.\n * If there are at least one Ordinal scale type, is coerced to ordinal.\n * If none of the above, than coerce to the specified scale.\n * @returns {ChartScaleType}\n */\nexport function coerceYScaleTypes(\n  specs: Array<Pick<BasicSeriesSpec, 'yScaleType'>>,\n): ScaleContinuousType {\n  const scaleTypes = new Set<ScaleContinuousType>();\n  specs.forEach((spec) => {\n    scaleTypes.add(spec.yScaleType);\n  });\n  return coerceYScale(scaleTypes);\n}\n\nfunction coerceYScale(scaleTypes: Set<ScaleContinuousType>): ScaleContinuousType {\n  if (scaleTypes.size === 1) {\n    const scales = scaleTypes.values();\n    const value = scales.next().value;\n    return value;\n  }\n  return ScaleType.Linear;\n}\ntry {\n    // @ts-ignore\n    splitSpecsByGroupId.displayName = \"splitSpecsByGroupId\";\n    // @ts-ignore\n    splitSpecsByGroupId.__docgenInfo = { \"description\": \"\", \"displayName\": \"splitSpecsByGroupId\", \"props\": { \"length\": { \"defaultValue\": null, \"description\": \"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.\", \"name\": \"length\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of an array.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.\", \"name\": \"toLocaleString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"pop\": { \"defaultValue\": null, \"description\": \"Removes the last element from an array and returns it.\", \"name\": \"pop\", \"required\": true, \"type\": { \"name\": \"() => Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"id\\\" | \\\"yScaleType\\\" | \\\"groupId\\\" | \\\"stackAccessors\\\" | \\\"yScaleToDataExtent\\\" | \\\"colorAccessors\\\">\" } }, \"push\": { \"defaultValue\": null, \"description\": \"Appends new elements to an array, and returns the new length of the array.\\n@param items New elements of the Array.\", \"name\": \"push\", \"required\": true, \"type\": { \"name\": \"(...items: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"id\\\" | \\\"yScaleType\\\" | \\\"groupId\\\" | \\\"stackAccessors\\\" | \\\"yScaleToDataExtent\\\" | \\\"colorAccessors\\\">[]) => number\" } }, \"concat\": { \"defaultValue\": null, \"description\": \"Combines two or more arrays.\\nCombines two or more arrays.\\n@param items Additional items to add to the end of array1.\\n@param items Additional items to add to the end of array1.\", \"name\": \"concat\", \"required\": true, \"type\": { \"name\": \"{ (...items: ConcatArray<Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"id\\\" | \\\"yScaleType\\\" | \\\"groupId\\\" | \\\"stackAccessors\\\" | \\\"yScaleToDataExtent\\\" | \\\"colorAccessors\\\">>[]): Pick<BasicSeriesSpec, \\\"seriesType\\\" | ... 5 more ... | \\\"colorAccessors\\\">[]; (...items: (Pick<...> | ConcatArray<...>)[]): Pick<...>[]; }\" } }, \"join\": { \"defaultValue\": null, \"description\": \"Adds all the elements of an array separated by the specified separator string.\\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.\", \"name\": \"join\", \"required\": true, \"type\": { \"name\": \"(separator?: string) => string\" } }, \"reverse\": { \"defaultValue\": null, \"description\": \"Reverses the elements in an Array.\", \"name\": \"reverse\", \"required\": true, \"type\": { \"name\": \"() => Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"id\\\" | \\\"yScaleType\\\" | \\\"groupId\\\" | \\\"stackAccessors\\\" | \\\"yScaleToDataExtent\\\" | \\\"colorAccessors\\\">[]\" } }, \"shift\": { \"defaultValue\": null, \"description\": \"Removes the first element from an array and returns it.\", \"name\": \"shift\", \"required\": true, \"type\": { \"name\": \"() => Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"id\\\" | \\\"yScaleType\\\" | \\\"groupId\\\" | \\\"stackAccessors\\\" | \\\"yScaleToDataExtent\\\" | \\\"colorAccessors\\\">\" } }, \"slice\": { \"defaultValue\": null, \"description\": \"Returns a section of an array.\\n@param start The beginning of the specified portion of the array.\\n@param end The end of the specified portion of the array.\", \"name\": \"slice\", \"required\": true, \"type\": { \"name\": \"(start?: number, end?: number) => Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"id\\\" | \\\"yScaleType\\\" | \\\"groupId\\\" | \\\"stackAccessors\\\" | \\\"yScaleToDataExtent\\\" | \\\"colorAccessors\\\">[]\" } }, \"sort\": { \"defaultValue\": null, \"description\": \"Sorts an array.\\n@param compareFn The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, ASCII character order.\", \"name\": \"sort\", \"required\": true, \"type\": { \"name\": \"(compareFn?: (a: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"id\\\" | \\\"yScaleType\\\" | \\\"groupId\\\" | \\\"stackAccessors\\\" | \\\"yScaleToDataExtent\\\" | \\\"colorAccessors\\\">, b: Pick<BasicSeriesSpec, \\\"seriesType\\\" | ... 5 more ... | \\\"colorAccessors\\\">) => number) => Pick<...>[]\" } }, \"splice\": { \"defaultValue\": null, \"description\": \"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param items Elements to insert into the array in place of the deleted elements.\", \"name\": \"splice\", \"required\": true, \"type\": { \"name\": \"{ (start: number, deleteCount?: number): Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"id\\\" | \\\"yScaleType\\\" | \\\"groupId\\\" | \\\"stackAccessors\\\" | \\\"yScaleToDataExtent\\\" | \\\"colorAccessors\\\">[]; (start: number, deleteCount: number, ...items: Pick<...>[]): Pick<...>[]; }\" } }, \"unshift\": { \"defaultValue\": null, \"description\": \"Inserts new elements at the start of an array.\\n@param items Elements to insert at the start of the Array.\", \"name\": \"unshift\", \"required\": true, \"type\": { \"name\": \"(...items: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"id\\\" | \\\"yScaleType\\\" | \\\"groupId\\\" | \\\"stackAccessors\\\" | \\\"yScaleToDataExtent\\\" | \\\"colorAccessors\\\">[]) => number\" } }, \"indexOf\": { \"defaultValue\": null, \"description\": \"Returns the index of the first occurrence of a value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\", \"name\": \"indexOf\", \"required\": true, \"type\": { \"name\": \"(searchElement: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"id\\\" | \\\"yScaleType\\\" | \\\"groupId\\\" | \\\"stackAccessors\\\" | \\\"yScaleToDataExtent\\\" | \\\"colorAccessors\\\">, fromIndex?: number) => number\" } }, \"lastIndexOf\": { \"defaultValue\": null, \"description\": \"Returns the index of the last occurrence of a specified value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.\", \"name\": \"lastIndexOf\", \"required\": true, \"type\": { \"name\": \"(searchElement: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"id\\\" | \\\"yScaleType\\\" | \\\"groupId\\\" | \\\"stackAccessors\\\" | \\\"yScaleToDataExtent\\\" | \\\"colorAccessors\\\">, fromIndex?: number) => number\" } }, \"every\": { \"defaultValue\": null, \"description\": \"Determines whether all the members of an array satisfy the specified test.\\n@param callbackfn A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"every\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"id\\\" | \\\"yScaleType\\\" | \\\"groupId\\\" | \\\"stackAccessors\\\" | \\\"yScaleToDataExtent\\\" | \\\"colorAccessors\\\">, index: number, array: Pick<BasicSeriesSpec, \\\"seriesType\\\" | ... 5 more ... | \\\"colorAccessors\\\">[]) => boolean, thisArg?: any) => boolean\" } }, \"some\": { \"defaultValue\": null, \"description\": \"Determines whether the specified callback function returns true for any element of an array.\\n@param callbackfn A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"some\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"id\\\" | \\\"yScaleType\\\" | \\\"groupId\\\" | \\\"stackAccessors\\\" | \\\"yScaleToDataExtent\\\" | \\\"colorAccessors\\\">, index: number, array: Pick<BasicSeriesSpec, \\\"seriesType\\\" | ... 5 more ... | \\\"colorAccessors\\\">[]) => boolean, thisArg?: any) => boolean\" } }, \"forEach\": { \"defaultValue\": null, \"description\": \"Performs the specified action for each element in an array.\\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"forEach\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"id\\\" | \\\"yScaleType\\\" | \\\"groupId\\\" | \\\"stackAccessors\\\" | \\\"yScaleToDataExtent\\\" | \\\"colorAccessors\\\">, index: number, array: Pick<BasicSeriesSpec, \\\"seriesType\\\" | ... 5 more ... | \\\"colorAccessors\\\">[]) => void, thisArg?: any) => void\" } }, \"map\": { \"defaultValue\": null, \"description\": \"Calls a defined callback function on each element of an array, and returns an array that contains the results.\\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"map\", \"required\": true, \"type\": { \"name\": \"<U>(callbackfn: (value: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"id\\\" | \\\"yScaleType\\\" | \\\"groupId\\\" | \\\"stackAccessors\\\" | \\\"yScaleToDataExtent\\\" | \\\"colorAccessors\\\">, index: number, array: Pick<BasicSeriesSpec, \\\"seriesType\\\" | ... 5 more ... | \\\"colorAccessors\\\">[]) => U, thisArg?: any) => U[]\" } }, \"filter\": { \"defaultValue\": null, \"description\": \"Returns the elements of an array that meet the condition specified in a callback function.\\nReturns the elements of an array that meet the condition specified in a callback function.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"filter\", \"required\": true, \"type\": { \"name\": \"{ <S extends Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"id\\\" | \\\"yScaleType\\\" | \\\"groupId\\\" | \\\"stackAccessors\\\" | \\\"yScaleToDataExtent\\\" | \\\"colorAccessors\\\">>(callbackfn: (value: Pick<BasicSeriesSpec, \\\"seriesType\\\" | ... 5 more ... | \\\"colorAccessors\\\">, index: number, array: Pick<...>[]) => value is S, thisArg?: any): S[]; (callbac...\" } }, \"reduce\": { \"defaultValue\": null, \"description\": \"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\", \"name\": \"reduce\", \"required\": true, \"type\": { \"name\": \"{ (callbackfn: (previousValue: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"id\\\" | \\\"yScaleType\\\" | \\\"groupId\\\" | \\\"stackAccessors\\\" | \\\"yScaleToDataExtent\\\" | \\\"colorAccessors\\\">, currentValue: Pick<BasicSeriesSpec, \\\"seriesType\\\" | ... 5 more ... | \\\"colorAccessors\\\">, currentIndex: number, array: Pick<...>[]) => Pick<...>): Pick<...>;...\" } }, \"reduceRight\": { \"defaultValue\": null, \"description\": \"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\", \"name\": \"reduceRight\", \"required\": true, \"type\": { \"name\": \"{ (callbackfn: (previousValue: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"id\\\" | \\\"yScaleType\\\" | \\\"groupId\\\" | \\\"stackAccessors\\\" | \\\"yScaleToDataExtent\\\" | \\\"colorAccessors\\\">, currentValue: Pick<BasicSeriesSpec, \\\"seriesType\\\" | ... 5 more ... | \\\"colorAccessors\\\">, currentIndex: number, array: Pick<...>[]) => Pick<...>): Pick<...>;...\" } }, \"find\": { \"defaultValue\": null, \"description\": \"Returns the value of the first element in the array where predicate is true, and undefined\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\rorder, until it finds one where predicate returns true. If such an element is found, find\\rimmediately returns that element value. Otherwise, find returns undefined.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\rpredicate. If it is not provided, undefined is used instead.\", \"name\": \"find\", \"required\": true, \"type\": { \"name\": \"{ <S extends Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"id\\\" | \\\"yScaleType\\\" | \\\"groupId\\\" | \\\"stackAccessors\\\" | \\\"yScaleToDataExtent\\\" | \\\"colorAccessors\\\">>(predicate: (this: void, value: Pick<BasicSeriesSpec, \\\"seriesType\\\" | ... 5 more ... | \\\"colorAccessors\\\">, index: number, obj: Pick<...>[]) => value is S, thisArg?: any): S; (...\" } }, \"findIndex\": { \"defaultValue\": null, \"description\": \"Returns the index of the first element in the array where predicate is true, and -1\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\rorder, until it finds one where predicate returns true. If such an element is found,\\rfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\rpredicate. If it is not provided, undefined is used instead.\", \"name\": \"findIndex\", \"required\": true, \"type\": { \"name\": \"(predicate: (value: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"id\\\" | \\\"yScaleType\\\" | \\\"groupId\\\" | \\\"stackAccessors\\\" | \\\"yScaleToDataExtent\\\" | \\\"colorAccessors\\\">, index: number, obj: Pick<BasicSeriesSpec, \\\"seriesType\\\" | ... 5 more ... | \\\"colorAccessors\\\">[]) => boolean, thisArg?: any) => number\" } }, \"fill\": { \"defaultValue\": null, \"description\": \"Returns the this object after filling the section identified by start and end with value\\n@param value value to fill array section with\\n@param start index to start filling the array at. If start is negative, it is treated as\\rlength+start where length is the length of the array.\\n@param end index to stop filling the array at. If end is negative, it is treated as\\rlength+end.\", \"name\": \"fill\", \"required\": true, \"type\": { \"name\": \"(value: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"id\\\" | \\\"yScaleType\\\" | \\\"groupId\\\" | \\\"stackAccessors\\\" | \\\"yScaleToDataExtent\\\" | \\\"colorAccessors\\\">, start?: number, end?: number) => Pick<...>[]\" } }, \"copyWithin\": { \"defaultValue\": null, \"description\": \"Returns the this object after copying a section of the array identified by start and end\\nto the same array starting at position target\\n@param target If target is negative, it is treated as length+target where length is the\\rlength of the array.\\n@param start If start is negative, it is treated as length+start. If end is negative, it\\ris treated as length+end.\\n@param end If not specified, length of the this object is used as its default value.\", \"name\": \"copyWithin\", \"required\": true, \"type\": { \"name\": \"(target: number, start: number, end?: number) => Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"id\\\" | \\\"yScaleType\\\" | \\\"groupId\\\" | \\\"stackAccessors\\\" | \\\"yScaleToDataExtent\\\" | \\\"colorAccessors\\\">[]\" } }, \"__@iterator\": { \"defaultValue\": null, \"description\": \"Iterator\", \"name\": \"__@iterator\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"id\\\" | \\\"yScaleType\\\" | \\\"groupId\\\" | \\\"stackAccessors\\\" | \\\"yScaleToDataExtent\\\" | \\\"colorAccessors\\\">>\" } }, \"entries\": { \"defaultValue\": null, \"description\": \"Returns an iterable of key, value pairs for every entry in the array\", \"name\": \"entries\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<[number, Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"id\\\" | \\\"yScaleType\\\" | \\\"groupId\\\" | \\\"stackAccessors\\\" | \\\"yScaleToDataExtent\\\" | \\\"colorAccessors\\\">]>\" } }, \"keys\": { \"defaultValue\": null, \"description\": \"Returns an iterable of keys in the array\", \"name\": \"keys\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<number>\" } }, \"values\": { \"defaultValue\": null, \"description\": \"Returns an iterable of values in the array\", \"name\": \"values\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"id\\\" | \\\"yScaleType\\\" | \\\"groupId\\\" | \\\"stackAccessors\\\" | \\\"yScaleToDataExtent\\\" | \\\"colorAccessors\\\">>\" } }, \"__@unscopables\": { \"defaultValue\": null, \"description\": \"Returns an object whose properties have the value 'true'\\nwhen they will be absent when used in a 'with' statement.\", \"name\": \"__@unscopables\", \"required\": true, \"type\": { \"name\": \"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }\" } }, \"includes\": { \"defaultValue\": null, \"description\": \"Determines whether an array includes a certain element, returning true or false as appropriate.\\n@param searchElement The element to search for.\\n@param fromIndex The position in this array at which to begin searching for searchElement.\", \"name\": \"includes\", \"required\": true, \"type\": { \"name\": \"(searchElement: Pick<BasicSeriesSpec, \\\"seriesType\\\" | \\\"id\\\" | \\\"yScaleType\\\" | \\\"groupId\\\" | \\\"stackAccessors\\\" | \\\"yScaleToDataExtent\\\" | \\\"colorAccessors\\\">, fromIndex?: number) => boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/series/domains/y_domain.ts#splitSpecsByGroupId\"] = { docgenInfo: splitSpecsByGroupId.__docgenInfo, name: \"splitSpecsByGroupId\", path: \"src/lib/series/domains/y_domain.ts#splitSpecsByGroupId\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    coerceYScaleTypes.displayName = \"coerceYScaleTypes\";\n    // @ts-ignore\n    coerceYScaleTypes.__docgenInfo = { \"description\": \"Coerce the scale types of a set of specification to a generic one.\\nIf there is at least one bar series type, than the response will specity\\nthat the coerced scale is a `scaleBand` (each point needs to have a surrounding empty\\nspace to draw the bar width).\\nIf there are multiple continuous scale types, is coerced to linear.\\nIf there are at least one Ordinal scale type, is coerced to ordinal.\\nIf none of the above, than coerce to the specified scale.\\n@returns\", \"displayName\": \"coerceYScaleTypes\", \"props\": { \"length\": { \"defaultValue\": null, \"description\": \"Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.\", \"name\": \"length\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of an array.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.\", \"name\": \"toLocaleString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"pop\": { \"defaultValue\": null, \"description\": \"Removes the last element from an array and returns it.\", \"name\": \"pop\", \"required\": true, \"type\": { \"name\": \"() => Pick<BasicSeriesSpec, \\\"yScaleType\\\">\" } }, \"push\": { \"defaultValue\": null, \"description\": \"Appends new elements to an array, and returns the new length of the array.\\n@param items New elements of the Array.\", \"name\": \"push\", \"required\": true, \"type\": { \"name\": \"(...items: Pick<BasicSeriesSpec, \\\"yScaleType\\\">[]) => number\" } }, \"concat\": { \"defaultValue\": null, \"description\": \"Combines two or more arrays.\\nCombines two or more arrays.\\n@param items Additional items to add to the end of array1.\\n@param items Additional items to add to the end of array1.\", \"name\": \"concat\", \"required\": true, \"type\": { \"name\": \"{ (...items: ConcatArray<Pick<BasicSeriesSpec, \\\"yScaleType\\\">>[]): Pick<BasicSeriesSpec, \\\"yScaleType\\\">[]; (...items: (Pick<BasicSeriesSpec, \\\"yScaleType\\\"> | ConcatArray<Pick<BasicSeriesSpec, \\\"yScaleType\\\">>)[]): Pick<...>[]; }\" } }, \"join\": { \"defaultValue\": null, \"description\": \"Adds all the elements of an array separated by the specified separator string.\\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.\", \"name\": \"join\", \"required\": true, \"type\": { \"name\": \"(separator?: string) => string\" } }, \"reverse\": { \"defaultValue\": null, \"description\": \"Reverses the elements in an Array.\", \"name\": \"reverse\", \"required\": true, \"type\": { \"name\": \"() => Pick<BasicSeriesSpec, \\\"yScaleType\\\">[]\" } }, \"shift\": { \"defaultValue\": null, \"description\": \"Removes the first element from an array and returns it.\", \"name\": \"shift\", \"required\": true, \"type\": { \"name\": \"() => Pick<BasicSeriesSpec, \\\"yScaleType\\\">\" } }, \"slice\": { \"defaultValue\": null, \"description\": \"Returns a section of an array.\\n@param start The beginning of the specified portion of the array.\\n@param end The end of the specified portion of the array.\", \"name\": \"slice\", \"required\": true, \"type\": { \"name\": \"(start?: number, end?: number) => Pick<BasicSeriesSpec, \\\"yScaleType\\\">[]\" } }, \"sort\": { \"defaultValue\": null, \"description\": \"Sorts an array.\\n@param compareFn The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, ASCII character order.\", \"name\": \"sort\", \"required\": true, \"type\": { \"name\": \"(compareFn?: (a: Pick<BasicSeriesSpec, \\\"yScaleType\\\">, b: Pick<BasicSeriesSpec, \\\"yScaleType\\\">) => number) => Pick<BasicSeriesSpec, \\\"yScaleType\\\">[]\" } }, \"splice\": { \"defaultValue\": null, \"description\": \"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param items Elements to insert into the array in place of the deleted elements.\", \"name\": \"splice\", \"required\": true, \"type\": { \"name\": \"{ (start: number, deleteCount?: number): Pick<BasicSeriesSpec, \\\"yScaleType\\\">[]; (start: number, deleteCount: number, ...items: Pick<BasicSeriesSpec, \\\"yScaleType\\\">[]): Pick<BasicSeriesSpec, \\\"yScaleType\\\">[]; }\" } }, \"unshift\": { \"defaultValue\": null, \"description\": \"Inserts new elements at the start of an array.\\n@param items Elements to insert at the start of the Array.\", \"name\": \"unshift\", \"required\": true, \"type\": { \"name\": \"(...items: Pick<BasicSeriesSpec, \\\"yScaleType\\\">[]) => number\" } }, \"indexOf\": { \"defaultValue\": null, \"description\": \"Returns the index of the first occurrence of a value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\", \"name\": \"indexOf\", \"required\": true, \"type\": { \"name\": \"(searchElement: Pick<BasicSeriesSpec, \\\"yScaleType\\\">, fromIndex?: number) => number\" } }, \"lastIndexOf\": { \"defaultValue\": null, \"description\": \"Returns the index of the last occurrence of a specified value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.\", \"name\": \"lastIndexOf\", \"required\": true, \"type\": { \"name\": \"(searchElement: Pick<BasicSeriesSpec, \\\"yScaleType\\\">, fromIndex?: number) => number\" } }, \"every\": { \"defaultValue\": null, \"description\": \"Determines whether all the members of an array satisfy the specified test.\\n@param callbackfn A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"every\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: Pick<BasicSeriesSpec, \\\"yScaleType\\\">, index: number, array: Pick<BasicSeriesSpec, \\\"yScaleType\\\">[]) => boolean, thisArg?: any) => boolean\" } }, \"some\": { \"defaultValue\": null, \"description\": \"Determines whether the specified callback function returns true for any element of an array.\\n@param callbackfn A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"some\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: Pick<BasicSeriesSpec, \\\"yScaleType\\\">, index: number, array: Pick<BasicSeriesSpec, \\\"yScaleType\\\">[]) => boolean, thisArg?: any) => boolean\" } }, \"forEach\": { \"defaultValue\": null, \"description\": \"Performs the specified action for each element in an array.\\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"forEach\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: Pick<BasicSeriesSpec, \\\"yScaleType\\\">, index: number, array: Pick<BasicSeriesSpec, \\\"yScaleType\\\">[]) => void, thisArg?: any) => void\" } }, \"map\": { \"defaultValue\": null, \"description\": \"Calls a defined callback function on each element of an array, and returns an array that contains the results.\\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"map\", \"required\": true, \"type\": { \"name\": \"<U>(callbackfn: (value: Pick<BasicSeriesSpec, \\\"yScaleType\\\">, index: number, array: Pick<BasicSeriesSpec, \\\"yScaleType\\\">[]) => U, thisArg?: any) => U[]\" } }, \"filter\": { \"defaultValue\": null, \"description\": \"Returns the elements of an array that meet the condition specified in a callback function.\\nReturns the elements of an array that meet the condition specified in a callback function.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"filter\", \"required\": true, \"type\": { \"name\": \"{ <S extends Pick<BasicSeriesSpec, \\\"yScaleType\\\">>(callbackfn: (value: Pick<BasicSeriesSpec, \\\"yScaleType\\\">, index: number, array: Pick<BasicSeriesSpec, \\\"yScaleType\\\">[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: Pick<...>, index: number, array: Pick<...>[]) => any, thisArg?: any): Pick<...>[]; }\" } }, \"reduce\": { \"defaultValue\": null, \"description\": \"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\", \"name\": \"reduce\", \"required\": true, \"type\": { \"name\": \"{ (callbackfn: (previousValue: Pick<BasicSeriesSpec, \\\"yScaleType\\\">, currentValue: Pick<BasicSeriesSpec, \\\"yScaleType\\\">, currentIndex: number, array: Pick<BasicSeriesSpec, \\\"yScaleType\\\">[]) => Pick<...>): Pick<...>; (callbackfn: (previousValue: Pick<...>, currentValue: Pick<...>, currentIndex: number, array: Pick<...>[...\" } }, \"reduceRight\": { \"defaultValue\": null, \"description\": \"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\", \"name\": \"reduceRight\", \"required\": true, \"type\": { \"name\": \"{ (callbackfn: (previousValue: Pick<BasicSeriesSpec, \\\"yScaleType\\\">, currentValue: Pick<BasicSeriesSpec, \\\"yScaleType\\\">, currentIndex: number, array: Pick<BasicSeriesSpec, \\\"yScaleType\\\">[]) => Pick<...>): Pick<...>; (callbackfn: (previousValue: Pick<...>, currentValue: Pick<...>, currentIndex: number, array: Pick<...>[...\" } }, \"find\": { \"defaultValue\": null, \"description\": \"Returns the value of the first element in the array where predicate is true, and undefined\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\rorder, until it finds one where predicate returns true. If such an element is found, find\\rimmediately returns that element value. Otherwise, find returns undefined.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\rpredicate. If it is not provided, undefined is used instead.\", \"name\": \"find\", \"required\": true, \"type\": { \"name\": \"{ <S extends Pick<BasicSeriesSpec, \\\"yScaleType\\\">>(predicate: (this: void, value: Pick<BasicSeriesSpec, \\\"yScaleType\\\">, index: number, obj: Pick<BasicSeriesSpec, \\\"yScaleType\\\">[]) => value is S, thisArg?: any): S; (predicate: (value: Pick<...>, index: number, obj: Pick<...>[]) => boolean, thisArg?: any): Pick<...>; }\" } }, \"findIndex\": { \"defaultValue\": null, \"description\": \"Returns the index of the first element in the array where predicate is true, and -1\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\rorder, until it finds one where predicate returns true. If such an element is found,\\rfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\rpredicate. If it is not provided, undefined is used instead.\", \"name\": \"findIndex\", \"required\": true, \"type\": { \"name\": \"(predicate: (value: Pick<BasicSeriesSpec, \\\"yScaleType\\\">, index: number, obj: Pick<BasicSeriesSpec, \\\"yScaleType\\\">[]) => boolean, thisArg?: any) => number\" } }, \"fill\": { \"defaultValue\": null, \"description\": \"Returns the this object after filling the section identified by start and end with value\\n@param value value to fill array section with\\n@param start index to start filling the array at. If start is negative, it is treated as\\rlength+start where length is the length of the array.\\n@param end index to stop filling the array at. If end is negative, it is treated as\\rlength+end.\", \"name\": \"fill\", \"required\": true, \"type\": { \"name\": \"(value: Pick<BasicSeriesSpec, \\\"yScaleType\\\">, start?: number, end?: number) => Pick<BasicSeriesSpec, \\\"yScaleType\\\">[]\" } }, \"copyWithin\": { \"defaultValue\": null, \"description\": \"Returns the this object after copying a section of the array identified by start and end\\nto the same array starting at position target\\n@param target If target is negative, it is treated as length+target where length is the\\rlength of the array.\\n@param start If start is negative, it is treated as length+start. If end is negative, it\\ris treated as length+end.\\n@param end If not specified, length of the this object is used as its default value.\", \"name\": \"copyWithin\", \"required\": true, \"type\": { \"name\": \"(target: number, start: number, end?: number) => Pick<BasicSeriesSpec, \\\"yScaleType\\\">[]\" } }, \"__@iterator\": { \"defaultValue\": null, \"description\": \"Iterator\", \"name\": \"__@iterator\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<Pick<BasicSeriesSpec, \\\"yScaleType\\\">>\" } }, \"entries\": { \"defaultValue\": null, \"description\": \"Returns an iterable of key, value pairs for every entry in the array\", \"name\": \"entries\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<[number, Pick<BasicSeriesSpec, \\\"yScaleType\\\">]>\" } }, \"keys\": { \"defaultValue\": null, \"description\": \"Returns an iterable of keys in the array\", \"name\": \"keys\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<number>\" } }, \"values\": { \"defaultValue\": null, \"description\": \"Returns an iterable of values in the array\", \"name\": \"values\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<Pick<BasicSeriesSpec, \\\"yScaleType\\\">>\" } }, \"__@unscopables\": { \"defaultValue\": null, \"description\": \"Returns an object whose properties have the value 'true'\\nwhen they will be absent when used in a 'with' statement.\", \"name\": \"__@unscopables\", \"required\": true, \"type\": { \"name\": \"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }\" } }, \"includes\": { \"defaultValue\": null, \"description\": \"Determines whether an array includes a certain element, returning true or false as appropriate.\\n@param searchElement The element to search for.\\n@param fromIndex The position in this array at which to begin searching for searchElement.\", \"name\": \"includes\", \"required\": true, \"type\": { \"name\": \"(searchElement: Pick<BasicSeriesSpec, \\\"yScaleType\\\">, fromIndex?: number) => boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/series/domains/y_domain.ts#coerceYScaleTypes\"] = { docgenInfo: coerceYScaleTypes.__docgenInfo, name: \"coerceYScaleTypes\", path: \"src/lib/series/domains/y_domain.ts#coerceYScaleTypes\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { GeometryId } from './rendering';\nimport { DataSeriesColorsValues } from './series';\n\nexport function isEqualSeriesKey(a: any[], b: any[]): boolean {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function belongsToDataSeries(\n  geometryValue: GeometryId,\n  dataSeriesValues: DataSeriesColorsValues,\n): boolean {\n  const legendItemSeriesKey = dataSeriesValues.colorValues;\n  const legendItemSpecId = dataSeriesValues.specId;\n\n  const geometrySeriesKey = geometryValue.seriesKey;\n  const geometrySpecId = geometryValue.specId;\n\n  const hasSameSpecId = legendItemSpecId === geometrySpecId;\n  const hasSameSeriesKey = isEqualSeriesKey(legendItemSeriesKey, geometrySeriesKey);\n\n  return hasSameSpecId && hasSameSeriesKey;\n}\n","import { none, Option, some } from 'fp-ts/lib/Option';\nimport { BBox, BBoxCalculator } from './bbox_calculator';\n\nexport class CanvasTextBBoxCalculator implements BBoxCalculator {\n  context: CanvasRenderingContext2D | null;\n  private attachedRoot: HTMLElement;\n  private offscreenCanvas: HTMLCanvasElement;\n  private scaledFontSize: number;\n\n  constructor(rootElement?: HTMLElement, scaledFontSize: number = 100) {\n    this.offscreenCanvas = document.createElement('canvas');\n    this.offscreenCanvas.style.position = 'absolute';\n    this.offscreenCanvas.style.top = '-9999px';\n\n    this.context = this.offscreenCanvas.getContext('2d');\n    this.attachedRoot = rootElement || document.documentElement;\n    this.attachedRoot.appendChild(this.offscreenCanvas);\n    this.scaledFontSize = scaledFontSize;\n  }\n  compute(text: string, fontSize = 16, fontFamily = 'Arial', padding: number = 1): Option<BBox> {\n    if (!this.context) {\n      return none;\n    }\n\n    // We scale the text up to get a more accurate computation of the width of the text\n    // because `measureText` can vary a lot between browsers.\n    const scalingFactor = this.scaledFontSize / fontSize;\n    this.context.font = `${this.scaledFontSize}px ${fontFamily}`;\n    const measure = this.context.measureText(text);\n\n    return some({\n      width: measure.width / scalingFactor + padding,\n      height: fontSize,\n    });\n  }\n  destroy(): void {\n    this.attachedRoot.removeChild(this.offscreenCanvas);\n  }\n}\n","import {\n  curveBasis,\n  curveCardinal,\n  curveCatmullRom,\n  curveLinear,\n  curveMonotoneX,\n  curveMonotoneY,\n  curveNatural,\n  curveStep,\n  curveStepAfter,\n  curveStepBefore,\n} from 'd3-shape';\n\nexport const enum CurveType {\n  CURVE_CARDINAL,\n  CURVE_NATURAL,\n  CURVE_MONOTONE_X,\n  CURVE_MONOTONE_Y,\n  CURVE_BASIS,\n  CURVE_CATMULL_ROM,\n  CURVE_STEP,\n  CURVE_STEP_AFTER,\n  CURVE_STEP_BEFORE,\n  LINEAR,\n}\n\nexport function getCurveFactory(curveType: CurveType = CurveType.LINEAR) {\n  switch (curveType) {\n    case CurveType.CURVE_CARDINAL:\n      return curveCardinal;\n    case CurveType.CURVE_NATURAL:\n      return curveNatural;\n    case CurveType.CURVE_MONOTONE_X:\n      return curveMonotoneX;\n    case CurveType.CURVE_MONOTONE_Y:\n      return curveMonotoneY;\n    case CurveType.CURVE_BASIS:\n      return curveBasis;\n    case CurveType.CURVE_CATMULL_ROM:\n      return curveCatmullRom;\n    case CurveType.CURVE_STEP:\n      return curveStep;\n    case CurveType.CURVE_STEP_AFTER:\n      return curveStepAfter;\n    case CurveType.CURVE_STEP_BEFORE:\n      return curveStepBefore;\n    case CurveType.LINEAR:\n    default:\n      return curveLinear;\n  }\n}\ntry {\n    // @ts-ignore\n    getCurveFactory.displayName = \"getCurveFactory\";\n    // @ts-ignore\n    getCurveFactory.__docgenInfo = { \"description\": \"\", \"displayName\": \"getCurveFactory\", \"props\": { \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of an object.\\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"(radix?: number) => string\" } }, \"toFixed\": { \"defaultValue\": null, \"description\": \"Returns a string representing a number in fixed-point notation.\\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.\", \"name\": \"toFixed\", \"required\": true, \"type\": { \"name\": \"(fractionDigits?: number) => string\" } }, \"toExponential\": { \"defaultValue\": null, \"description\": \"Returns a string containing a number represented in exponential notation.\\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.\", \"name\": \"toExponential\", \"required\": true, \"type\": { \"name\": \"(fractionDigits?: number) => string\" } }, \"toPrecision\": { \"defaultValue\": null, \"description\": \"Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\\n@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.\", \"name\": \"toPrecision\", \"required\": true, \"type\": { \"name\": \"(precision?: number) => string\" } }, \"valueOf\": { \"defaultValue\": null, \"description\": \"Returns the primitive value of the specified object.\", \"name\": \"valueOf\", \"required\": true, \"type\": { \"name\": \"() => number\" } }, \"toLocaleString\": { \"defaultValue\": null, \"description\": \"Converts a number to a string by using the current or specified locale.\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\\n@param options An object that contains one or more properties that specify comparison options.\", \"name\": \"toLocaleString\", \"required\": true, \"type\": { \"name\": \"(locales?: string | string[], options?: NumberFormatOptions) => string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/lib/series/curves.ts#getCurveFactory\"] = { docgenInfo: getCurveFactory.__docgenInfo, name: \"getCurveFactory\", path: \"src/lib/series/curves.ts#getCurveFactory\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { DateTime, Interval } from 'luxon';\n\ntype TimeFormatter = (value: number) => string;\n\nexport function timeFormatter(format: string): TimeFormatter {\n  return (value: number): string => {\n    return DateTime.fromMillis(value).toFormat(format);\n  };\n}\n\nexport function niceTimeFormatter(domain: [number, number]): TimeFormatter {\n  const minDate = DateTime.fromMillis(domain[0]);\n  const maxDate = DateTime.fromMillis(domain[1]);\n  const diff = Interval.fromDateTimes(minDate, maxDate);\n  const format = niceTimeFormat(diff);\n  return timeFormatter(format);\n}\n\nexport function niceTimeFormat(interval: Interval) {\n  const days = interval.count('days');\n  return niceTimeFormatByDay(days);\n}\n\nexport function niceTimeFormatByDay(days: number) {\n  if (days > 30) {\n    return 'yyyy-MM-dd';\n  }\n  if (days > 7 && days <= 30) {\n    return 'MMMM dd';\n  }\n  if (days > 1 && days <= 7) {\n    return 'MM-dd HH:mm';\n  }\n  return 'HH:mm:ss';\n}\ntry {\n    // @ts-ignore\n    timeFormatter.displayName = \"timeFormatter\";\n    // @ts-ignore\n    timeFormatter.__docgenInfo = { \"description\": \"\", \"displayName\": \"timeFormatter\", \"props\": { \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of a string.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"charAt\": { \"defaultValue\": null, \"description\": \"Returns the character at the specified index.\\n@param pos The zero-based index of the desired character.\", \"name\": \"charAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => string\" } }, \"charCodeAt\": { \"defaultValue\": null, \"description\": \"Returns the Unicode value of the character at the specified location.\\n@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.\", \"name\": \"charCodeAt\", \"required\": true, \"type\": { \"name\": \"(index: number) => number\" } }, \"concat\": { \"defaultValue\": null, \"description\": \"Returns a string that contains the concatenation of two or more strings.\\n@param strings The strings to append to the end of the string.\", \"name\": \"concat\", \"required\": true, \"type\": { \"name\": \"(...strings: string[]) => string\" } }, \"indexOf\": { \"defaultValue\": null, \"description\": \"Returns the position of the first occurrence of a substring.\\n@param searchString The substring to search for in the string\\n@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.\", \"name\": \"indexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"lastIndexOf\": { \"defaultValue\": null, \"description\": \"Returns the last occurrence of a substring in the string.\\n@param searchString The substring to search for.\\n@param position The index at which to begin searching. If omitted, the search begins at the end of the string.\", \"name\": \"lastIndexOf\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => number\" } }, \"localeCompare\": { \"defaultValue\": null, \"description\": \"Determines whether two strings are equivalent in the current locale.\\nDetermines whether two strings are equivalent in the current or specified locale.\\n@param that String to compare to target string\\n@param that String to compare to target string\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\\n@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.\", \"name\": \"localeCompare\", \"required\": true, \"type\": { \"name\": \"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }\" } }, \"match\": { \"defaultValue\": null, \"description\": \"Matches a string with a regular expression, and returns an array containing the results of that search.\\nMatches a string an object that supports being matched against, and returns an array containing the results of that search.\\n@param regexp A variable name or string literal containing the regular expression pattern and flags.\\n@param matcher An object that supports being matched against.\", \"name\": \"match\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }\" } }, \"replace\": { \"defaultValue\": null, \"description\": \"Replaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using a regular expression or search string.\\nReplaces text in a string, using an object that supports replacement within a string.\\nReplaces text in a string, using an object that supports replacement within a string.\\n@param searchValue A string to search for.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A string to search for.\\n@param replacer A function that returns the replacement text.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\\n@param searchValue A object can search for and replace matches within a string.\\n@param replacer A function that returns the replacement text.\", \"name\": \"replace\", \"required\": true, \"type\": { \"name\": \"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substri...\" } }, \"search\": { \"defaultValue\": null, \"description\": \"Finds the first substring match in a regular expression search.\\nFinds the first substring match in a regular expression search.\\n@param regexp The regular expression pattern and applicable flags.\\n@param searcher An object which supports searching within a string.\", \"name\": \"search\", \"required\": true, \"type\": { \"name\": \"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }\" } }, \"slice\": { \"defaultValue\": null, \"description\": \"Returns a section of a string.\\n@param start The index to the beginning of the specified portion of stringObj.\\n@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\\rIf this value is not specified, the substring continues to the end of stringObj.\", \"name\": \"slice\", \"required\": true, \"type\": { \"name\": \"(start?: number, end?: number) => string\" } }, \"split\": { \"defaultValue\": null, \"description\": \"Split a string into substrings using the specified separator and return them as an array.\\nSplit a string into substrings using the specified separator and return them as an array.\\n@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\\n@param limit A value used to limit the number of elements returned in the array.\\n@param splitter An object that can split a string.\\n@param limit A value used to limit the number of elements returned in the array.\", \"name\": \"split\", \"required\": true, \"type\": { \"name\": \"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }\" } }, \"substring\": { \"defaultValue\": null, \"description\": \"Returns the substring at the specified location within a String object.\\n@param start The zero-based index number indicating the beginning of the substring.\\n@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\\rIf end is omitted, the characters from start through the end of the original string are returned.\", \"name\": \"substring\", \"required\": true, \"type\": { \"name\": \"(start: number, end?: number) => string\" } }, \"toLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to lowercase.\", \"name\": \"toLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleLowerCase\": { \"defaultValue\": null, \"description\": \"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleLowerCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toUpperCase\": { \"defaultValue\": null, \"description\": \"Converts all the alphabetic characters in a string to uppercase.\", \"name\": \"toUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleUpperCase\": { \"defaultValue\": null, \"description\": \"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.\", \"name\": \"toLocaleUpperCase\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trim\": { \"defaultValue\": null, \"description\": \"Removes the leading and trailing white space and line terminator characters from a string.\", \"name\": \"trim\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"length\": { \"defaultValue\": null, \"description\": \"Returns the length of a String object.\", \"name\": \"length\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"substr\": { \"defaultValue\": null, \"description\": \"Gets a substring beginning at the specified location and having the specified length.\\n@param from The starting position of the desired substring. The index of the first character in the string is zero.\\n@param length The number of characters to include in the returned substring.\", \"name\": \"substr\", \"required\": true, \"type\": { \"name\": \"(from: number, length?: number) => string\" } }, \"valueOf\": { \"defaultValue\": null, \"description\": \"Returns the primitive value of the specified object.\", \"name\": \"valueOf\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"codePointAt\": { \"defaultValue\": null, \"description\": \"Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\\nvalue of the UTF-16 encoded code point starting at the string element at position pos in\\r\\nthe String resulting from converting this object to a String.\\r\\nIf there is no element at that position, the result is undefined.\\r\\nIf a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\", \"name\": \"codePointAt\", \"required\": true, \"type\": { \"name\": \"(pos: number) => number\" } }, \"includes\": { \"defaultValue\": null, \"description\": \"Returns true if searchString appears as a substring of the result of converting this\\nobject to a String, at one or more positions that are\\r\\ngreater than or equal to position; otherwise, returns false.\\n@param searchString search string\\n@param position If position is undefined, 0 is assumed, so as to search all of the String.\", \"name\": \"includes\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"endsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nendPosition \\u2013 length(this). Otherwise returns false.\", \"name\": \"endsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, endPosition?: number) => boolean\" } }, \"normalize\": { \"defaultValue\": null, \"description\": \"Returns the String value result of normalizing the string into the normalization form\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\nReturns the String value result of normalizing the string into the normalization form\\r\\nnamed by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\\n@param form Applicable values: \\\"NFC\\\", \\\"NFD\\\", \\\"NFKC\\\", or \\\"NFKD\\\", If not specified default\\ris \\\"NFC\\\"\", \"name\": \"normalize\", \"required\": true, \"type\": { \"name\": \"{ (form: \\\"NFC\\\" | \\\"NFD\\\" | \\\"NFKC\\\" | \\\"NFKD\\\"): string; (form?: string): string; }\" } }, \"repeat\": { \"defaultValue\": null, \"description\": \"Returns a String value that is made from count copies appended together. If count is 0,\\nthe empty string is returned.\\n@param count number of copies to append\", \"name\": \"repeat\", \"required\": true, \"type\": { \"name\": \"(count: number) => string\" } }, \"startsWith\": { \"defaultValue\": null, \"description\": \"Returns true if the sequence of elements of searchString converted to a String is the\\nsame as the corresponding elements of this object (converted to a String) starting at\\r\\nposition. Otherwise returns false.\", \"name\": \"startsWith\", \"required\": true, \"type\": { \"name\": \"(searchString: string, position?: number) => boolean\" } }, \"anchor\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML anchor element and sets the name attribute to the text value\\n@param name\", \"name\": \"anchor\", \"required\": true, \"type\": { \"name\": \"(name: string) => string\" } }, \"big\": { \"defaultValue\": null, \"description\": \"Returns a <big> HTML element\", \"name\": \"big\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"blink\": { \"defaultValue\": null, \"description\": \"Returns a <blink> HTML element\", \"name\": \"blink\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"bold\": { \"defaultValue\": null, \"description\": \"Returns a <b> HTML element\", \"name\": \"bold\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fixed\": { \"defaultValue\": null, \"description\": \"Returns a <tt> HTML element\", \"name\": \"fixed\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"fontcolor\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the color attribute value\", \"name\": \"fontcolor\", \"required\": true, \"type\": { \"name\": \"(color: string) => string\" } }, \"fontsize\": { \"defaultValue\": null, \"description\": \"Returns a <font> HTML element and sets the size attribute value\\nReturns a <font> HTML element and sets the size attribute value\", \"name\": \"fontsize\", \"required\": true, \"type\": { \"name\": \"{ (size: number): string; (size: string): string; }\" } }, \"italics\": { \"defaultValue\": null, \"description\": \"Returns an <i> HTML element\", \"name\": \"italics\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"link\": { \"defaultValue\": null, \"description\": \"Returns an <a> HTML element and sets the href attribute value\", \"name\": \"link\", \"required\": true, \"type\": { \"name\": \"(url: string) => string\" } }, \"small\": { \"defaultValue\": null, \"description\": \"Returns a <small> HTML element\", \"name\": \"small\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"strike\": { \"defaultValue\": null, \"description\": \"Returns a <strike> HTML element\", \"name\": \"strike\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sub\": { \"defaultValue\": null, \"description\": \"Returns a <sub> HTML element\", \"name\": \"sub\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"sup\": { \"defaultValue\": null, \"description\": \"Returns a <sup> HTML element\", \"name\": \"sup\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"__@iterator\": { \"defaultValue\": null, \"description\": \"Iterator\", \"name\": \"__@iterator\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<string>\" } }, \"padStart\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the start (left) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padStart\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"padEnd\": { \"defaultValue\": null, \"description\": \"Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\\nThe padding is applied from the end (right) of the current string.\\n@param maxLength The length of the resulting string once the current string has been padded.\\rIf this parameter is smaller than the current string's length, the current string will be returned as it is.\\n@param fillString The string to pad the current string with.\\rIf this string is too long, it will be truncated and the left-most part will be applied.\\rThe default value for this parameter is \\\" \\\" (U+0020).\", \"name\": \"padEnd\", \"required\": true, \"type\": { \"name\": \"(maxLength: number, fillString?: string) => string\" } }, \"trimLeft\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the left end of a string.\", \"name\": \"trimLeft\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"trimRight\": { \"defaultValue\": null, \"description\": \"Removes whitespace from the right end of a string.\", \"name\": \"trimRight\", \"required\": true, \"type\": { \"name\": \"() => string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/utils/data/formatters.ts#timeFormatter\"] = { docgenInfo: timeFormatter.__docgenInfo, name: \"timeFormatter\", path: \"src/utils/data/formatters.ts#timeFormatter\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    niceTimeFormatter.displayName = \"niceTimeFormatter\";\n    // @ts-ignore\n    niceTimeFormatter.__docgenInfo = { \"description\": \"\", \"displayName\": \"niceTimeFormatter\", \"props\": { \"0\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"0\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"1\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"1\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"length\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"length\", \"required\": true, \"type\": { \"name\": \"2\" } }, \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of an array.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"toLocaleString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of an array. The elements are converted to string using their toLocalString methods.\", \"name\": \"toLocaleString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"pop\": { \"defaultValue\": null, \"description\": \"Removes the last element from an array and returns it.\", \"name\": \"pop\", \"required\": true, \"type\": { \"name\": \"() => number\" } }, \"push\": { \"defaultValue\": null, \"description\": \"Appends new elements to an array, and returns the new length of the array.\\n@param items New elements of the Array.\", \"name\": \"push\", \"required\": true, \"type\": { \"name\": \"(...items: number[]) => number\" } }, \"concat\": { \"defaultValue\": null, \"description\": \"Combines two or more arrays.\\nCombines two or more arrays.\\n@param items Additional items to add to the end of array1.\\n@param items Additional items to add to the end of array1.\", \"name\": \"concat\", \"required\": true, \"type\": { \"name\": \"{ (...items: ConcatArray<number>[]): number[]; (...items: (number | ConcatArray<number>)[]): number[]; }\" } }, \"join\": { \"defaultValue\": null, \"description\": \"Adds all the elements of an array separated by the specified separator string.\\n@param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.\", \"name\": \"join\", \"required\": true, \"type\": { \"name\": \"(separator?: string) => string\" } }, \"reverse\": { \"defaultValue\": null, \"description\": \"Reverses the elements in an Array.\", \"name\": \"reverse\", \"required\": true, \"type\": { \"name\": \"() => number[]\" } }, \"shift\": { \"defaultValue\": null, \"description\": \"Removes the first element from an array and returns it.\", \"name\": \"shift\", \"required\": true, \"type\": { \"name\": \"() => number\" } }, \"slice\": { \"defaultValue\": null, \"description\": \"Returns a section of an array.\\n@param start The beginning of the specified portion of the array.\\n@param end The end of the specified portion of the array.\", \"name\": \"slice\", \"required\": true, \"type\": { \"name\": \"(start?: number, end?: number) => number[]\" } }, \"sort\": { \"defaultValue\": null, \"description\": \"Sorts an array.\\n@param compareFn The name of the function used to determine the order of the elements. If omitted, the elements are sorted in ascending, ASCII character order.\", \"name\": \"sort\", \"required\": true, \"type\": { \"name\": \"(compareFn?: (a: number, b: number) => number) => [number, number]\" } }, \"splice\": { \"defaultValue\": null, \"description\": \"Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\nRemoves elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param start The zero-based location in the array from which to start removing elements.\\n@param deleteCount The number of elements to remove.\\n@param items Elements to insert into the array in place of the deleted elements.\", \"name\": \"splice\", \"required\": true, \"type\": { \"name\": \"{ (start: number, deleteCount?: number): number[]; (start: number, deleteCount: number, ...items: number[]): number[]; }\" } }, \"unshift\": { \"defaultValue\": null, \"description\": \"Inserts new elements at the start of an array.\\n@param items Elements to insert at the start of the Array.\", \"name\": \"unshift\", \"required\": true, \"type\": { \"name\": \"(...items: number[]) => number\" } }, \"indexOf\": { \"defaultValue\": null, \"description\": \"Returns the index of the first occurrence of a value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\", \"name\": \"indexOf\", \"required\": true, \"type\": { \"name\": \"(searchElement: number, fromIndex?: number) => number\" } }, \"lastIndexOf\": { \"defaultValue\": null, \"description\": \"Returns the index of the last occurrence of a specified value in an array.\\n@param searchElement The value to locate in the array.\\n@param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.\", \"name\": \"lastIndexOf\", \"required\": true, \"type\": { \"name\": \"(searchElement: number, fromIndex?: number) => number\" } }, \"every\": { \"defaultValue\": null, \"description\": \"Determines whether all the members of an array satisfy the specified test.\\n@param callbackfn A function that accepts up to three arguments. The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"every\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: number, index: number, array: number[]) => boolean, thisArg?: any) => boolean\" } }, \"some\": { \"defaultValue\": null, \"description\": \"Determines whether the specified callback function returns true for any element of an array.\\n@param callbackfn A function that accepts up to three arguments. The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"some\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: number, index: number, array: number[]) => boolean, thisArg?: any) => boolean\" } }, \"forEach\": { \"defaultValue\": null, \"description\": \"Performs the specified action for each element in an array.\\n@param callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"forEach\", \"required\": true, \"type\": { \"name\": \"(callbackfn: (value: number, index: number, array: number[]) => void, thisArg?: any) => void\" } }, \"map\": { \"defaultValue\": null, \"description\": \"Calls a defined callback function on each element of an array, and returns an array that contains the results.\\n@param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"map\", \"required\": true, \"type\": { \"name\": \"<U>(callbackfn: (value: number, index: number, array: number[]) => U, thisArg?: any) => U[]\" } }, \"filter\": { \"defaultValue\": null, \"description\": \"Returns the elements of an array that meet the condition specified in a callback function.\\nReturns the elements of an array that meet the condition specified in a callback function.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\\n@param callbackfn A function that accepts up to three arguments. The filter method calls the callbackfn function one time for each element in the array.\\n@param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\", \"name\": \"filter\", \"required\": true, \"type\": { \"name\": \"{ <S extends number>(callbackfn: (value: number, index: number, array: number[]) => value is S, thisArg?: any): S[]; (callbackfn: (value: number, index: number, array: number[]) => any, thisArg?: any): number[]; }\" } }, \"reduce\": { \"defaultValue\": null, \"description\": \"Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\", \"name\": \"reduce\", \"required\": true, \"type\": { \"name\": \"{ (callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: number[]) => number): number; (callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: number[]) => number, initialValue: number): number; <U>(callbackfn: (previousValue: U, currentValue: number, ...\" } }, \"reduceRight\": { \"defaultValue\": null, \"description\": \"Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\nCalls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\\n@param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\\n@param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\", \"name\": \"reduceRight\", \"required\": true, \"type\": { \"name\": \"{ (callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: number[]) => number): number; (callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: number[]) => number, initialValue: number): number; <U>(callbackfn: (previousValue: U, currentValue: number, ...\" } }, \"find\": { \"defaultValue\": null, \"description\": \"Returns the value of the first element in the array where predicate is true, and undefined\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\rorder, until it finds one where predicate returns true. If such an element is found, find\\rimmediately returns that element value. Otherwise, find returns undefined.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\rpredicate. If it is not provided, undefined is used instead.\", \"name\": \"find\", \"required\": true, \"type\": { \"name\": \"{ <S extends number>(predicate: (this: void, value: number, index: number, obj: number[]) => value is S, thisArg?: any): S; (predicate: (value: number, index: number, obj: number[]) => boolean, thisArg?: any): number; }\" } }, \"findIndex\": { \"defaultValue\": null, \"description\": \"Returns the index of the first element in the array where predicate is true, and -1\\notherwise.\\n@param predicate find calls predicate once for each element of the array, in ascending\\rorder, until it finds one where predicate returns true. If such an element is found,\\rfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\\n@param thisArg If provided, it will be used as the this value for each invocation of\\rpredicate. If it is not provided, undefined is used instead.\", \"name\": \"findIndex\", \"required\": true, \"type\": { \"name\": \"(predicate: (value: number, index: number, obj: number[]) => boolean, thisArg?: any) => number\" } }, \"fill\": { \"defaultValue\": null, \"description\": \"Returns the this object after filling the section identified by start and end with value\\n@param value value to fill array section with\\n@param start index to start filling the array at. If start is negative, it is treated as\\rlength+start where length is the length of the array.\\n@param end index to stop filling the array at. If end is negative, it is treated as\\rlength+end.\", \"name\": \"fill\", \"required\": true, \"type\": { \"name\": \"(value: number, start?: number, end?: number) => [number, number]\" } }, \"copyWithin\": { \"defaultValue\": null, \"description\": \"Returns the this object after copying a section of the array identified by start and end\\nto the same array starting at position target\\n@param target If target is negative, it is treated as length+target where length is the\\rlength of the array.\\n@param start If start is negative, it is treated as length+start. If end is negative, it\\ris treated as length+end.\\n@param end If not specified, length of the this object is used as its default value.\", \"name\": \"copyWithin\", \"required\": true, \"type\": { \"name\": \"(target: number, start: number, end?: number) => [number, number]\" } }, \"__@iterator\": { \"defaultValue\": null, \"description\": \"Iterator\", \"name\": \"__@iterator\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<number>\" } }, \"entries\": { \"defaultValue\": null, \"description\": \"Returns an iterable of key, value pairs for every entry in the array\", \"name\": \"entries\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<[number, number]>\" } }, \"keys\": { \"defaultValue\": null, \"description\": \"Returns an iterable of keys in the array\", \"name\": \"keys\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<number>\" } }, \"values\": { \"defaultValue\": null, \"description\": \"Returns an iterable of values in the array\", \"name\": \"values\", \"required\": true, \"type\": { \"name\": \"() => IterableIterator<number>\" } }, \"__@unscopables\": { \"defaultValue\": null, \"description\": \"Returns an object whose properties have the value 'true'\\nwhen they will be absent when used in a 'with' statement.\", \"name\": \"__@unscopables\", \"required\": true, \"type\": { \"name\": \"() => { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; }\" } }, \"includes\": { \"defaultValue\": null, \"description\": \"Determines whether an array includes a certain element, returning true or false as appropriate.\\n@param searchElement The element to search for.\\n@param fromIndex The position in this array at which to begin searching for searchElement.\", \"name\": \"includes\", \"required\": true, \"type\": { \"name\": \"(searchElement: number, fromIndex?: number) => boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/utils/data/formatters.ts#niceTimeFormatter\"] = { docgenInfo: niceTimeFormatter.__docgenInfo, name: \"niceTimeFormatter\", path: \"src/utils/data/formatters.ts#niceTimeFormatter\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    niceTimeFormat.displayName = \"niceTimeFormat\";\n    // @ts-ignore\n    niceTimeFormat.__docgenInfo = { \"description\": \"\", \"displayName\": \"niceTimeFormat\", \"props\": { \"end\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"end\", \"required\": true, \"type\": { \"name\": \"DateTime\" } }, \"invalidReason\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"invalidReason\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"invalidExplanation\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"invalidExplanation\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"isValid\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isValid\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"start\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"start\", \"required\": true, \"type\": { \"name\": \"DateTime\" } }, \"abutsEnd\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"abutsEnd\", \"required\": true, \"type\": { \"name\": \"(other: Interval) => boolean\" } }, \"abutsStart\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"abutsStart\", \"required\": true, \"type\": { \"name\": \"(other: Interval) => boolean\" } }, \"contains\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"contains\", \"required\": true, \"type\": { \"name\": \"(dateTime: DateTime) => boolean\" } }, \"count\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"count\", \"required\": true, \"type\": { \"name\": \"(unit?: \\\"year\\\" | \\\"years\\\" | \\\"quarter\\\" | \\\"quarters\\\" | \\\"month\\\" | \\\"months\\\" | \\\"week\\\" | \\\"weeks\\\" | \\\"day\\\" | \\\"days\\\" | \\\"hour\\\" | \\\"hours\\\" | \\\"minute\\\" | \\\"minutes\\\" | \\\"second\\\" | \\\"seconds\\\" | \\\"millisecond\\\" | \\\"milliseconds\\\") => number\" } }, \"difference\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"difference\", \"required\": true, \"type\": { \"name\": \"(...intervals: Interval[]) => Interval[]\" } }, \"divideEqually\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"divideEqually\", \"required\": true, \"type\": { \"name\": \"(numberOfParts?: number) => Interval[]\" } }, \"engulfs\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"engulfs\", \"required\": true, \"type\": { \"name\": \"(other: Interval) => boolean\" } }, \"equals\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"equals\", \"required\": true, \"type\": { \"name\": \"(other: Interval) => boolean\" } }, \"hasSame\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"hasSame\", \"required\": true, \"type\": { \"name\": \"(unit: \\\"year\\\" | \\\"years\\\" | \\\"quarter\\\" | \\\"quarters\\\" | \\\"month\\\" | \\\"months\\\" | \\\"week\\\" | \\\"weeks\\\" | \\\"day\\\" | \\\"days\\\" | \\\"hour\\\" | \\\"hours\\\" | \\\"minute\\\" | \\\"minutes\\\" | \\\"second\\\" | \\\"seconds\\\" | \\\"millisecond\\\" | \\\"milliseconds\\\") => boolean\" } }, \"intersection\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"intersection\", \"required\": true, \"type\": { \"name\": \"(other: Interval) => Interval\" } }, \"isAfter\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isAfter\", \"required\": true, \"type\": { \"name\": \"(dateTime: DateTime) => boolean\" } }, \"isBefore\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isBefore\", \"required\": true, \"type\": { \"name\": \"(dateTime: DateTime) => boolean\" } }, \"isEmpty\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isEmpty\", \"required\": true, \"type\": { \"name\": \"() => boolean\" } }, \"length\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"length\", \"required\": true, \"type\": { \"name\": \"(unit?: \\\"year\\\" | \\\"years\\\" | \\\"quarter\\\" | \\\"quarters\\\" | \\\"month\\\" | \\\"months\\\" | \\\"week\\\" | \\\"weeks\\\" | \\\"day\\\" | \\\"days\\\" | \\\"hour\\\" | \\\"hours\\\" | \\\"minute\\\" | \\\"minutes\\\" | \\\"second\\\" | \\\"seconds\\\" | \\\"millisecond\\\" | \\\"milliseconds\\\") => number\" } }, \"overlaps\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"overlaps\", \"required\": true, \"type\": { \"name\": \"(other: Interval) => boolean\" } }, \"set\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"set\", \"required\": true, \"type\": { \"name\": \"(values: IntervalObject) => Interval\" } }, \"splitAt\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"splitAt\", \"required\": true, \"type\": { \"name\": \"(...dateTimes: DateTime[]) => Interval[]\" } }, \"splitBy\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"splitBy\", \"required\": true, \"type\": { \"name\": \"(duration: number | Duration | DurationObject) => Interval[]\" } }, \"toDuration\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"toDuration\", \"required\": true, \"type\": { \"name\": \"(unit?: \\\"year\\\" | \\\"years\\\" | \\\"quarter\\\" | \\\"quarters\\\" | \\\"month\\\" | \\\"months\\\" | \\\"week\\\" | \\\"weeks\\\" | \\\"day\\\" | \\\"days\\\" | \\\"hour\\\" | \\\"hours\\\" | \\\"minute\\\" | \\\"minutes\\\" | \\\"second\\\" | \\\"seconds\\\" | \\\"millisecond\\\" | \\\"milliseconds\\\" | (\\\"year\\\" | ... 16 more ... | \\\"milliseconds\\\")[], options?: DiffOptions) => Duration\" } }, \"toFormat\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"toFormat\", \"required\": true, \"type\": { \"name\": \"(dateFormat: string, options?: { separator?: string; }) => string\" } }, \"toISO\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"toISO\", \"required\": true, \"type\": { \"name\": \"(options?: ToISOTimeOptions) => string\" } }, \"toString\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"() => string\" } }, \"union\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"union\", \"required\": true, \"type\": { \"name\": \"(other: Interval) => Interval\" } }, \"mapEndpoints\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"mapEndpoints\", \"required\": true, \"type\": { \"name\": \"(cb: (d: DateTime) => DateTime) => Interval\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/utils/data/formatters.ts#niceTimeFormat\"] = { docgenInfo: niceTimeFormat.__docgenInfo, name: \"niceTimeFormat\", path: \"src/utils/data/formatters.ts#niceTimeFormat\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    niceTimeFormatByDay.displayName = \"niceTimeFormatByDay\";\n    // @ts-ignore\n    niceTimeFormatByDay.__docgenInfo = { \"description\": \"\", \"displayName\": \"niceTimeFormatByDay\", \"props\": { \"toString\": { \"defaultValue\": null, \"description\": \"Returns a string representation of an object.\\n@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.\", \"name\": \"toString\", \"required\": true, \"type\": { \"name\": \"(radix?: number) => string\" } }, \"toFixed\": { \"defaultValue\": null, \"description\": \"Returns a string representing a number in fixed-point notation.\\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.\", \"name\": \"toFixed\", \"required\": true, \"type\": { \"name\": \"(fractionDigits?: number) => string\" } }, \"toExponential\": { \"defaultValue\": null, \"description\": \"Returns a string containing a number represented in exponential notation.\\n@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.\", \"name\": \"toExponential\", \"required\": true, \"type\": { \"name\": \"(fractionDigits?: number) => string\" } }, \"toPrecision\": { \"defaultValue\": null, \"description\": \"Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\\n@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.\", \"name\": \"toPrecision\", \"required\": true, \"type\": { \"name\": \"(precision?: number) => string\" } }, \"valueOf\": { \"defaultValue\": null, \"description\": \"Returns the primitive value of the specified object.\", \"name\": \"valueOf\", \"required\": true, \"type\": { \"name\": \"() => number\" } }, \"toLocaleString\": { \"defaultValue\": null, \"description\": \"Converts a number to a string by using the current or specified locale.\\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\\n@param options An object that contains one or more properties that specify comparison options.\", \"name\": \"toLocaleString\", \"required\": true, \"type\": { \"name\": \"(locales?: string | string[], options?: NumberFormatOptions) => string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/utils/data/formatters.ts#niceTimeFormatByDay\"] = { docgenInfo: niceTimeFormatByDay.__docgenInfo, name: \"niceTimeFormatByDay\", path: \"src/utils/data/formatters.ts#niceTimeFormatByDay\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","export const TSVB_DATASET = {\n  id: '61ca57f0-469d-11e7-af02-69e470af7417',\n  series: [\n    {\n      id: '61ca57f1-469d-11e7-af02-69e470af7417:jpg',\n      label: 'jpg',\n      color: 'rgb(104, 188, 0)',\n      data: [\n        [1552830600000, 0],\n        [1552831200000, 0],\n        [1552831800000, 0],\n        [1552832400000, 0],\n        [1552833000000, 0],\n        [1552833600000, 0],\n        [1552834200000, 0],\n        [1552834800000, 0],\n        [1552835400000, 0],\n        [1552836000000, 0],\n        [1552836600000, 0],\n        [1552837200000, 0],\n        [1552837800000, 0],\n        [1552838400000, 0],\n        [1552839000000, 0],\n        [1552839600000, 0],\n        [1552840200000, 0],\n        [1552840800000, 0],\n        [1552841400000, 0],\n        [1552842000000, 0],\n        [1552842600000, 0],\n        [1552843200000, 0],\n        [1552843800000, 0],\n        [1552844400000, 0],\n        [1552845000000, 0],\n        [1552845600000, 0],\n        [1552846200000, 0],\n        [1552846800000, 0],\n        [1552847400000, 0],\n        [1552848000000, 0],\n        [1552848600000, 0],\n        [1552849200000, 0],\n        [1552849800000, 0],\n        [1552850400000, 0],\n        [1552851000000, 0],\n        [1552851600000, 0],\n        [1552852200000, 0],\n        [1552852800000, 0],\n        [1552853400000, 0],\n        [1552854000000, 0],\n        [1552854600000, 0],\n        [1552855200000, 0],\n        [1552855800000, 0],\n        [1552856400000, 6],\n        [1552857000000, 0],\n        [1552857600000, 0],\n        [1552858200000, 0],\n        [1552858800000, 1],\n        [1552859400000, 1],\n        [1552860000000, 0],\n        [1552860600000, 1],\n        [1552861200000, 1],\n        [1552861800000, 1],\n        [1552862400000, 0],\n        [1552863000000, 2],\n        [1552863600000, 1],\n        [1552864200000, 0],\n        [1552864800000, 1],\n        [1552865400000, 4],\n        [1552866000000, 6],\n        [1552866600000, 6],\n        [1552867200000, 4],\n        [1552867800000, 7],\n        [1552868400000, 3],\n        [1552869000000, 20],\n        [1552869600000, 30],\n        [1552870200000, 40],\n        [1552870800000, null],\n        [1552871400000, 5],\n        [1552872000000, 6],\n        [1552872600000, 12],\n        [1552873200000, 0],\n        [1552873800000, 10],\n        [1552874400000, 10],\n        [1552875000000, 13],\n        [1552875600000, 8],\n        [1552876200000, 13],\n        [1552876800000, 10],\n        [1552877400000, 10],\n        [1552878000000, 20],\n        [1552878600000, 16],\n        [1552879200000, 16],\n        [1552879800000, 15],\n        [1552880400000, 21],\n        [1552881000000, 19],\n        [1552881600000, 29],\n        [1552882200000, 31],\n        [1552882800000, 28],\n        [1552883400000, 33],\n        [1552884000000, 30],\n        [1552884600000, 29],\n        [1552885200000, 24],\n        [1552885800000, 35],\n        [1552886400000, 33],\n        [1552887000000, 32],\n        [1552887600000, 28],\n        [1552888200000, 48],\n        [1552888800000, 44],\n        [1552889400000, 26],\n        [1552890000000, 44],\n        [1552890600000, 65],\n        [1552891200000, 42],\n        [1552891800000, 49],\n        [1552892400000, 51],\n        [1552893000000, 59],\n        [1552893600000, 47],\n        [1552894200000, 47],\n        [1552894800000, 54],\n        [1552895400000, 48],\n        [1552896000000, 61],\n        [1552896600000, 63],\n        [1552897200000, 59],\n        [1552897800000, 58],\n        [1552898400000, 52],\n        [1552899000000, 61],\n        [1552899600000, 42],\n        [1552900200000, 48],\n        [1552900800000, 47],\n        [1552901400000, 52],\n        [1552902000000, 67],\n        [1552902600000, 49],\n        [1552903200000, 56],\n        [1552903800000, 36],\n        [1552904400000, 38],\n        [1552905000000, 42],\n        [1552905600000, 59],\n        [1552906200000, 41],\n        [1552906800000, 32],\n        [1552907400000, 48],\n        [1552908000000, 41],\n        [1552908600000, 41],\n        [1552909200000, 44],\n        [1552909800000, 46],\n        [1552910400000, 32],\n        [1552911000000, 40],\n        [1552911600000, 33],\n        [1552912200000, 30],\n        [1552912800000, 33],\n        [1552913400000, 31],\n        [1552914000000, 35],\n        [1552914600000, 22],\n        [1552915200000, 26],\n        [1552915800000, 22],\n        [1552916400000, 14],\n        [1552917000000, 22],\n        [1552917600000, 20],\n        [1552918200000, 13],\n        [1552918800000, 21],\n        [1552919400000, 14],\n        [1552920000000, 15],\n        [1552920600000, 13],\n        [1552921200000, 16],\n        [1552921800000, 14],\n        [1552922400000, 12],\n        [1552923000000, 10],\n        [1552923600000, 7],\n        [1552924200000, 12],\n        [1552924800000, 3],\n        [1552925400000, 0],\n        [1552926000000, 3],\n        [1552926600000, 6],\n        [1552927200000, 6],\n        [1552927800000, 7],\n        [1552928400000, 10],\n        [1552929000000, 4],\n        [1552929600000, 6],\n        [1552930200000, 9],\n        [1552930800000, 4],\n        [1552931400000, 2],\n        [1552932000000, 1],\n        [1552932600000, 3],\n        [1552933200000, 4],\n        [1552933800000, 6],\n        [1552934400000, 1],\n        [1552935000000, 0],\n        [1552935600000, 0],\n        [1552936200000, 0],\n        [1552936800000, 1],\n        [1552937400000, 1],\n        [1552938000000, 0],\n        [1552938600000, 1],\n        [1552939200000, 0],\n        [1552939800000, 0],\n        [1552940400000, 1],\n        [1552941000000, 0],\n        [1552941600000, 0],\n        [1552942200000, 0],\n        [1552942800000, 2],\n        [1552943400000, 0],\n        [1552944000000, 0],\n        [1552944600000, 1],\n        [1552945200000, 0],\n        [1552945800000, 2],\n        [1552946400000, 1],\n        [1552947000000, 0],\n        [1552947600000, 1],\n        [1552948200000, 1],\n        [1552948800000, 1],\n        [1552949400000, 2],\n      ],\n      stack: false,\n      lines: { show: true, fill: 0.5, lineWidth: 1, steps: false },\n      points: { show: true, radius: 1, lineWidth: 1 },\n      bars: { show: false, fill: 0.5, lineWidth: 1 },\n    },\n    {\n      id: '61ca57f1-469d-11e7-af02-69e470af7417:css',\n      label: 'css',\n      color: 'rgb(77, 138, 0)',\n      data: [\n        [1552830600000, 0],\n        [1552831200000, 0],\n        [1552831800000, 0],\n        [1552832400000, 0],\n        [1552833000000, 0],\n        [1552833600000, 0],\n        [1552834200000, 0],\n        [1552834800000, 0],\n        [1552835400000, 0],\n        [1552836000000, 0],\n        [1552836600000, 0],\n        [1552837200000, 0],\n        [1552837800000, 0],\n        [1552838400000, 0],\n        [1552839000000, 0],\n        [1552839600000, 0],\n        [1552840200000, 0],\n        [1552840800000, 0],\n        [1552841400000, 0],\n        [1552842000000, 0],\n        [1552842600000, 0],\n        [1552843200000, 0],\n        [1552843800000, 0],\n        [1552844400000, 0],\n        [1552845000000, 0],\n        [1552845600000, 0],\n        [1552846200000, 0],\n        [1552846800000, 0],\n        [1552847400000, 0],\n        [1552848000000, 0],\n        [1552848600000, 0],\n        [1552849200000, 0],\n        [1552849800000, 0],\n        [1552850400000, 0],\n        [1552851000000, 0],\n        [1552851600000, 0],\n        [1552852200000, 0],\n        [1552852800000, 0],\n        [1552853400000, 0],\n        [1552854000000, 0],\n        [1552854600000, 0],\n        [1552855200000, 0],\n        [1552855800000, 0],\n        [1552856400000, 0],\n        [1552857000000, 0],\n        [1552857600000, 0],\n        [1552858200000, 1],\n        [1552858800000, 0],\n        [1552859400000, 0],\n        [1552860000000, 1],\n        [1552860600000, 0],\n        [1552861200000, 0],\n        [1552861800000, 2],\n        [1552862400000, 0],\n        [1552863000000, 0],\n        [1552863600000, 1],\n        [1552864200000, 0],\n        [1552864800000, 1],\n        [1552865400000, 1],\n        [1552866000000, 0],\n        [1552866600000, 0],\n        [1552867200000, 2],\n        [1552867800000, 0],\n        [1552868400000, 4],\n        [1552869000000, 0],\n        [1552869600000, 1],\n        [1552870200000, 0],\n        [1552870800000, 2],\n        [1552871400000, 2],\n        [1552872000000, 2],\n        [1552872600000, 1],\n        [1552873200000, 0],\n        [1552873800000, 2],\n        [1552874400000, 1],\n        [1552875000000, 2],\n        [1552875600000, 4],\n        [1552876200000, 4],\n        [1552876800000, 4],\n        [1552877400000, 3],\n        [1552878000000, 3],\n        [1552878600000, 3],\n        [1552879200000, 0],\n        [1552879800000, 3],\n        [1552880400000, 4],\n        [1552881000000, 4],\n        [1552881600000, 4],\n        [1552882200000, 8],\n        [1552882800000, 7],\n        [1552883400000, 7],\n        [1552884000000, 3],\n        [1552884600000, 8],\n        [1552885200000, 6],\n        [1552885800000, 6],\n        [1552886400000, 8],\n        [1552887000000, 11],\n        [1552887600000, 7],\n        [1552888200000, 8],\n        [1552888800000, 7],\n        [1552889400000, 11],\n        [1552890000000, 16],\n        [1552890600000, 14],\n        [1552891200000, 10],\n        [1552891800000, 12],\n        [1552892400000, 7],\n        [1552893000000, 15],\n        [1552893600000, 13],\n        [1552894200000, 9],\n        [1552894800000, 16],\n        [1552895400000, 15],\n        [1552896000000, 14],\n        [1552896600000, 9],\n        [1552897200000, 10],\n        [1552897800000, 15],\n        [1552898400000, 15],\n        [1552899000000, 13],\n        [1552899600000, 18],\n        [1552900200000, 17],\n        [1552900800000, 18],\n        [1552901400000, 18],\n        [1552902000000, 6],\n        [1552902600000, 19],\n        [1552903200000, 20],\n        [1552903800000, 14],\n        [1552904400000, 11],\n        [1552905000000, 7],\n        [1552905600000, 20],\n        [1552906200000, 11],\n        [1552906800000, 13],\n        [1552907400000, 8],\n        [1552908000000, 15],\n        [1552908600000, 10],\n        [1552909200000, 13],\n        [1552909800000, 16],\n        [1552910400000, 11],\n        [1552911000000, 11],\n        [1552911600000, 11],\n        [1552912200000, 7],\n        [1552912800000, 10],\n        [1552913400000, 6],\n        [1552914000000, 4],\n        [1552914600000, 6],\n        [1552915200000, 4],\n        [1552915800000, 5],\n        [1552916400000, 7],\n        [1552917000000, 7],\n        [1552917600000, 5],\n        [1552918200000, 2],\n        [1552918800000, 3],\n        [1552919400000, 4],\n        [1552920000000, 3],\n        [1552920600000, 4],\n        [1552921200000, 1],\n        [1552921800000, 4],\n        [1552922400000, 4],\n        [1552923000000, 2],\n        [1552923600000, 3],\n        [1552924200000, 3],\n        [1552924800000, 2],\n        [1552925400000, 0],\n        [1552926000000, 1],\n        [1552926600000, 0],\n        [1552927200000, 2],\n        [1552927800000, 4],\n        [1552928400000, 2],\n        [1552929000000, 2],\n        [1552929600000, 0],\n        [1552930200000, 0],\n        [1552930800000, 0],\n        [1552931400000, 2],\n        [1552932000000, 0],\n        [1552932600000, 1],\n        [1552933200000, 1],\n        [1552933800000, 0],\n        [1552934400000, 1],\n        [1552935000000, 0],\n        [1552935600000, 0],\n        [1552936200000, 0],\n        [1552936800000, 2],\n        [1552937400000, 0],\n        [1552938000000, 0],\n        [1552938600000, 0],\n        [1552939200000, 0],\n        [1552939800000, 0],\n        [1552940400000, 0],\n        [1552941000000, 0],\n        [1552941600000, 1],\n        [1552942200000, 0],\n        [1552942800000, 1],\n        [1552943400000, 0],\n        [1552944000000, 0],\n        [1552944600000, 0],\n        [1552945200000, 0],\n        [1552945800000, 0],\n        [1552946400000, 1],\n        [1552947000000, 1],\n        [1552947600000, 0],\n        [1552948200000, 0],\n        [1552948800000, 1],\n        [1552949400000, 0],\n      ],\n      stack: false,\n      lines: { show: true, fill: 0.5, lineWidth: 1, steps: false },\n      points: { show: true, radius: 1, lineWidth: 1 },\n      bars: { show: false, fill: 0.5, lineWidth: 1 },\n    },\n    {\n      id: '61ca57f1-469d-11e7-af02-69e470af7417:png',\n      label: 'png',\n      color: 'rgb(49, 89, 0)',\n      data: [\n        [1552830600000, 0],\n        [1552831200000, 0],\n        [1552831800000, 0],\n        [1552832400000, 0],\n        [1552833000000, 0],\n        [1552833600000, 0],\n        [1552834200000, 0],\n        [1552834800000, 0],\n        [1552835400000, 0],\n        [1552836000000, 0],\n        [1552836600000, 0],\n        [1552837200000, 0],\n        [1552837800000, 0],\n        [1552838400000, 0],\n        [1552839000000, 0],\n        [1552839600000, 0],\n        [1552840200000, 0],\n        [1552840800000, 0],\n        [1552841400000, 0],\n        [1552842000000, 0],\n        [1552842600000, 0],\n        [1552843200000, 0],\n        [1552843800000, 0],\n        [1552844400000, 0],\n        [1552845000000, 0],\n        [1552845600000, 0],\n        [1552846200000, 0],\n        [1552846800000, 0],\n        [1552847400000, 0],\n        [1552848000000, 0],\n        [1552848600000, 0],\n        [1552849200000, 0],\n        [1552849800000, 0],\n        [1552850400000, 0],\n        [1552851000000, 0],\n        [1552851600000, 0],\n        [1552852200000, 0],\n        [1552852800000, 0],\n        [1552853400000, 0],\n        [1552854000000, 0],\n        [1552854600000, 0],\n        [1552855200000, 0],\n        [1552855800000, 0],\n        [1552856400000, 2],\n        [1552857000000, 0],\n        [1552857600000, 0],\n        [1552858200000, 0],\n        [1552858800000, 0],\n        [1552859400000, 0],\n        [1552860000000, 1],\n        [1552860600000, 1],\n        [1552861200000, 0],\n        [1552861800000, 0],\n        [1552862400000, 1],\n        [1552863000000, 0],\n        [1552863600000, 1],\n        [1552864200000, 1],\n        [1552864800000, 0],\n        [1552865400000, 0],\n        [1552866000000, 0],\n        [1552866600000, 1],\n        [1552867200000, 0],\n        [1552867800000, 2],\n        [1552868400000, 0],\n        [1552869000000, 0],\n        [1552869600000, 0],\n        [1552870200000, 0],\n        [1552870800000, 2],\n        [1552871400000, 3],\n        [1552872000000, 0],\n        [1552872600000, 0],\n        [1552873200000, 0],\n        [1552873800000, 0],\n        [1552874400000, 0],\n        [1552875000000, 2],\n        [1552875600000, 4],\n        [1552876200000, 0],\n        [1552876800000, 7],\n        [1552877400000, 0],\n        [1552878000000, 2],\n        [1552878600000, 0],\n        [1552879200000, 2],\n        [1552879800000, 4],\n        [1552880400000, 0],\n        [1552881000000, 2],\n        [1552881600000, 7],\n        [1552882200000, 4],\n        [1552882800000, 2],\n        [1552883400000, 4],\n        [1552884000000, 2],\n        [1552884600000, 6],\n        [1552885200000, 4],\n        [1552885800000, 5],\n        [1552886400000, 2],\n        [1552887000000, 7],\n        [1552887600000, 7],\n        [1552888200000, 5],\n        [1552888800000, 2],\n        [1552889400000, 1],\n        [1552890000000, 10],\n        [1552890600000, 9],\n        [1552891200000, 5],\n        [1552891800000, 10],\n        [1552892400000, 5],\n        [1552893000000, 7],\n        [1552893600000, 14],\n        [1552894200000, 10],\n        [1552894800000, 3],\n        [1552895400000, 11],\n        [1552896000000, 4],\n        [1552896600000, 15],\n        [1552897200000, 13],\n        [1552897800000, 15],\n        [1552898400000, 10],\n        [1552899000000, 4],\n        [1552899600000, 7],\n        [1552900200000, 12],\n        [1552900800000, 6],\n        [1552901400000, 9],\n        [1552902000000, 12],\n        [1552902600000, 3],\n        [1552903200000, 11],\n        [1552903800000, 10],\n        [1552904400000, 9],\n        [1552905000000, 6],\n        [1552905600000, 10],\n        [1552906200000, 5],\n        [1552906800000, 7],\n        [1552907400000, 9],\n        [1552908000000, 6],\n        [1552908600000, 7],\n        [1552909200000, 2],\n        [1552909800000, 3],\n        [1552910400000, 8],\n        [1552911000000, 2],\n        [1552911600000, 4],\n        [1552912200000, 6],\n        [1552912800000, 1],\n        [1552913400000, 6],\n        [1552914000000, 3],\n        [1552914600000, 2],\n        [1552915200000, 6],\n        [1552915800000, 6],\n        [1552916400000, 4],\n        [1552917000000, 3],\n        [1552917600000, 3],\n        [1552918200000, 1],\n        [1552918800000, 2],\n        [1552919400000, 4],\n        [1552920000000, 4],\n        [1552920600000, 2],\n        [1552921200000, 3],\n        [1552921800000, 1],\n        [1552922400000, 4],\n        [1552923000000, 1],\n        [1552923600000, 3],\n        [1552924200000, 1],\n        [1552924800000, 0],\n        [1552925400000, 0],\n        [1552926000000, 1],\n        [1552926600000, 1],\n        [1552927200000, 0],\n        [1552927800000, 0],\n        [1552928400000, 1],\n        [1552929000000, 1],\n        [1552929600000, 1],\n        [1552930200000, 0],\n        [1552930800000, 0],\n        [1552931400000, 0],\n        [1552932000000, 0],\n        [1552932600000, 0],\n        [1552933200000, 0],\n        [1552933800000, 0],\n        [1552934400000, 0],\n        [1552935000000, 0],\n        [1552935600000, 0],\n        [1552936200000, 0],\n        [1552936800000, 0],\n        [1552937400000, 0],\n        [1552938000000, 0],\n        [1552938600000, 0],\n        [1552939200000, 0],\n        [1552939800000, 0],\n        [1552940400000, 0],\n        [1552941000000, 0],\n        [1552941600000, 0],\n        [1552942200000, 0],\n        [1552942800000, 0],\n        [1552943400000, 0],\n        [1552944000000, 0],\n        [1552944600000, 0],\n        [1552945200000, 0],\n        [1552945800000, 0],\n        [1552946400000, 0],\n        [1552947000000, 1],\n        [1552947600000, 0],\n        [1552948200000, 1],\n        [1552948800000, 0],\n        [1552949400000, 1],\n      ],\n      stack: false,\n      lines: { show: true, fill: 0.5, lineWidth: 1, steps: false },\n      points: { show: true, radius: 1, lineWidth: 1 },\n      bars: { show: false, fill: 0.5, lineWidth: 1 },\n    },\n    {\n      id: '61ca57f1-469d-11e7-af02-69e470af7417:gif',\n      label: 'gif',\n      color: 'rgb(22, 39, 0)',\n      data: [\n        [1552830600000, 0],\n        [1552831200000, 0],\n        [1552831800000, 0],\n        [1552832400000, 0],\n        [1552833000000, 0],\n        [1552833600000, 0],\n        [1552834200000, 0],\n        [1552834800000, 0],\n        [1552835400000, 0],\n        [1552836000000, 0],\n        [1552836600000, 0],\n        [1552837200000, 0],\n        [1552837800000, 0],\n        [1552838400000, 0],\n        [1552839000000, 0],\n        [1552839600000, 0],\n        [1552840200000, 0],\n        [1552840800000, 0],\n        [1552841400000, 0],\n        [1552842000000, 0],\n        [1552842600000, 0],\n        [1552843200000, 0],\n        [1552843800000, 0],\n        [1552844400000, 0],\n        [1552845000000, 0],\n        [1552845600000, 0],\n        [1552846200000, 0],\n        [1552846800000, 0],\n        [1552847400000, 0],\n        [1552848000000, 0],\n        [1552848600000, 0],\n        [1552849200000, 0],\n        [1552849800000, 0],\n        [1552850400000, 0],\n        [1552851000000, 0],\n        [1552851600000, 0],\n        [1552852200000, 0],\n        [1552852800000, 0],\n        [1552853400000, 0],\n        [1552854000000, 0],\n        [1552854600000, 0],\n        [1552855200000, 0],\n        [1552855800000, 0],\n        [1552856400000, 0],\n        [1552857000000, 0],\n        [1552857600000, 0],\n        [1552858200000, 0],\n        [1552858800000, 0],\n        [1552859400000, 0],\n        [1552860000000, 0],\n        [1552860600000, 0],\n        [1552861200000, 0],\n        [1552861800000, 0],\n        [1552862400000, 0],\n        [1552863000000, 0],\n        [1552863600000, 0],\n        [1552864200000, 0],\n        [1552864800000, 0],\n        [1552865400000, 0],\n        [1552866000000, 0],\n        [1552866600000, 0],\n        [1552867200000, 1],\n        [1552867800000, 0],\n        [1552868400000, 2],\n        [1552869000000, 1],\n        [1552869600000, 0],\n        [1552870200000, 1],\n        [1552870800000, 1],\n        [1552871400000, 2],\n        [1552872000000, 1],\n        [1552872600000, 2],\n        [1552873200000, 0],\n        [1552873800000, 1],\n        [1552874400000, 0],\n        [1552875000000, 0],\n        [1552875600000, 1],\n        [1552876200000, 1],\n        [1552876800000, 1],\n        [1552877400000, 2],\n        [1552878000000, 0],\n        [1552878600000, 2],\n        [1552879200000, 1],\n        [1552879800000, 2],\n        [1552880400000, 3],\n        [1552881000000, 2],\n        [1552881600000, 1],\n        [1552882200000, 2],\n        [1552882800000, 6],\n        [1552883400000, 4],\n        [1552884000000, 3],\n        [1552884600000, 5],\n        [1552885200000, 3],\n        [1552885800000, 3],\n        [1552886400000, 3],\n        [1552887000000, 3],\n        [1552887600000, 3],\n        [1552888200000, 3],\n        [1552888800000, 5],\n        [1552889400000, 1],\n        [1552890000000, 3],\n        [1552890600000, 4],\n        [1552891200000, 5],\n        [1552891800000, 4],\n        [1552892400000, 6],\n        [1552893000000, 4],\n        [1552893600000, 5],\n        [1552894200000, 5],\n        [1552894800000, 12],\n        [1552895400000, 7],\n        [1552896000000, 2],\n        [1552896600000, 8],\n        [1552897200000, 8],\n        [1552897800000, 5],\n        [1552898400000, 6],\n        [1552899000000, 8],\n        [1552899600000, 6],\n        [1552900200000, 3],\n        [1552900800000, 8],\n        [1552901400000, 4],\n        [1552902000000, 3],\n        [1552902600000, 9],\n        [1552903200000, 6],\n        [1552903800000, 14],\n        [1552904400000, 3],\n        [1552905000000, 7],\n        [1552905600000, 3],\n        [1552906200000, 4],\n        [1552906800000, 3],\n        [1552907400000, 5],\n        [1552908000000, 2],\n        [1552908600000, 3],\n        [1552909200000, 1],\n        [1552909800000, 2],\n        [1552910400000, 2],\n        [1552911000000, 5],\n        [1552911600000, 2],\n        [1552912200000, 1],\n        [1552912800000, 4],\n        [1552913400000, 3],\n        [1552914000000, 3],\n        [1552914600000, 4],\n        [1552915200000, 1],\n        [1552915800000, 4],\n        [1552916400000, 2],\n        [1552917000000, 3],\n        [1552917600000, 2],\n        [1552918200000, 2],\n        [1552918800000, 2],\n        [1552919400000, 0],\n        [1552920000000, 1],\n        [1552920600000, 2],\n        [1552921200000, 1],\n        [1552921800000, 4],\n        [1552922400000, 0],\n        [1552923000000, 0],\n        [1552923600000, 0],\n        [1552924200000, 0],\n        [1552924800000, 0],\n        [1552925400000, 0],\n        [1552926000000, 1],\n        [1552926600000, 2],\n        [1552927200000, 0],\n        [1552927800000, 0],\n        [1552928400000, 0],\n        [1552929000000, 0],\n        [1552929600000, 1],\n        [1552930200000, 0],\n        [1552930800000, 0],\n        [1552931400000, 0],\n        [1552932000000, 1],\n        [1552932600000, 1],\n        [1552933200000, 0],\n        [1552933800000, 0],\n        [1552934400000, 0],\n        [1552935000000, 0],\n        [1552935600000, 0],\n        [1552936200000, 0],\n        [1552936800000, 0],\n        [1552937400000, 0],\n        [1552938000000, 0],\n        [1552938600000, 0],\n        [1552939200000, 0],\n        [1552939800000, 0],\n        [1552940400000, 0],\n        [1552941000000, 0],\n        [1552941600000, 0],\n        [1552942200000, 0],\n        [1552942800000, 0],\n        [1552943400000, 0],\n        [1552944000000, 0],\n        [1552944600000, 0],\n        [1552945200000, 0],\n        [1552945800000, 0],\n        [1552946400000, 0],\n        [1552947000000, 0],\n        [1552947600000, 0],\n        [1552948200000, 0],\n        [1552948800000, 0],\n        [1552949400000, 0],\n      ],\n      stack: false,\n      lines: { show: true, fill: 0.5, lineWidth: 1, steps: false },\n      points: { show: true, radius: 1, lineWidth: 1 },\n      bars: { show: false, fill: 0.5, lineWidth: 1 },\n    },\n    {\n      id: '61ca57f1-469d-11e7-af02-69e470af7417:php',\n      label: 'php',\n      color: 'rgb(0, 0, 0)',\n      data: [\n        [1552830600000, 0],\n        [1552831200000, 0],\n        [1552831800000, 0],\n        [1552832400000, 0],\n        [1552833000000, 0],\n        [1552833600000, 0],\n        [1552834200000, 0],\n        [1552834800000, 0],\n        [1552835400000, 0],\n        [1552836000000, 0],\n        [1552836600000, 0],\n        [1552837200000, 0],\n        [1552837800000, 0],\n        [1552838400000, 0],\n        [1552839000000, 0],\n        [1552839600000, 0],\n        [1552840200000, 0],\n        [1552840800000, 0],\n        [1552841400000, 0],\n        [1552842000000, 0],\n        [1552842600000, 0],\n        [1552843200000, 0],\n        [1552843800000, 0],\n        [1552844400000, 0],\n        [1552845000000, 0],\n        [1552845600000, 0],\n        [1552846200000, 0],\n        [1552846800000, 0],\n        [1552847400000, 0],\n        [1552848000000, 0],\n        [1552848600000, 0],\n        [1552849200000, 0],\n        [1552849800000, 0],\n        [1552850400000, 0],\n        [1552851000000, 0],\n        [1552851600000, 0],\n        [1552852200000, 0],\n        [1552852800000, 0],\n        [1552853400000, 0],\n        [1552854000000, 0],\n        [1552854600000, 0],\n        [1552855200000, 0],\n        [1552855800000, 0],\n        [1552856400000, 0],\n        [1552857000000, 0],\n        [1552857600000, 0],\n        [1552858200000, 0],\n        [1552858800000, 0],\n        [1552859400000, 0],\n        [1552860000000, 0],\n        [1552860600000, 0],\n        [1552861200000, 0],\n        [1552861800000, 0],\n        [1552862400000, 0],\n        [1552863000000, 0],\n        [1552863600000, 0],\n        [1552864200000, 0],\n        [1552864800000, 1],\n        [1552865400000, 0],\n        [1552866000000, 0],\n        [1552866600000, 0],\n        [1552867200000, 0],\n        [1552867800000, 0],\n        [1552868400000, 0],\n        [1552869000000, 0],\n        [1552869600000, 0],\n        [1552870200000, 0],\n        [1552870800000, 0],\n        [1552871400000, 1],\n        [1552872000000, 1],\n        [1552872600000, 1],\n        [1552873200000, 0],\n        [1552873800000, 1],\n        [1552874400000, 0],\n        [1552875000000, 0],\n        [1552875600000, 0],\n        [1552876200000, 0],\n        [1552876800000, 0],\n        [1552877400000, 3],\n        [1552878000000, 0],\n        [1552878600000, 0],\n        [1552879200000, 0],\n        [1552879800000, 0],\n        [1552880400000, 1],\n        [1552881000000, 1],\n        [1552881600000, 1],\n        [1552882200000, 1],\n        [1552882800000, 1],\n        [1552883400000, 2],\n        [1552884000000, 0],\n        [1552884600000, 1],\n        [1552885200000, 1],\n        [1552885800000, 1],\n        [1552886400000, 0],\n        [1552887000000, 1],\n        [1552887600000, 5],\n        [1552888200000, 2],\n        [1552888800000, 1],\n        [1552889400000, 4],\n        [1552890000000, 1],\n        [1552890600000, 2],\n        [1552891200000, 4],\n        [1552891800000, 8],\n        [1552892400000, 3],\n        [1552893000000, 4],\n        [1552893600000, 3],\n        [1552894200000, 2],\n        [1552894800000, 0],\n        [1552895400000, 5],\n        [1552896000000, 3],\n        [1552896600000, 4],\n        [1552897200000, 2],\n        [1552897800000, 1],\n        [1552898400000, 2],\n        [1552899000000, 2],\n        [1552899600000, 1],\n        [1552900200000, 3],\n        [1552900800000, 1],\n        [1552901400000, 1],\n        [1552902000000, 3],\n        [1552902600000, 4],\n        [1552903200000, 2],\n        [1552903800000, 4],\n        [1552904400000, 4],\n        [1552905000000, 4],\n        [1552905600000, 0],\n        [1552906200000, 5],\n        [1552906800000, 2],\n        [1552907400000, 5],\n        [1552908000000, 3],\n        [1552908600000, 0],\n        [1552909200000, 3],\n        [1552909800000, 0],\n        [1552910400000, 4],\n        [1552911000000, 1],\n        [1552911600000, 1],\n        [1552912200000, 0],\n        [1552912800000, 0],\n        [1552913400000, 2],\n        [1552914000000, 1],\n        [1552914600000, 2],\n        [1552915200000, 0],\n        [1552915800000, 0],\n        [1552916400000, 0],\n        [1552917000000, 1],\n        [1552917600000, 0],\n        [1552918200000, 1],\n        [1552918800000, 0],\n        [1552919400000, 2],\n        [1552920000000, 1],\n        [1552920600000, 0],\n        [1552921200000, 0],\n        [1552921800000, 0],\n        [1552922400000, 3],\n        [1552923000000, 0],\n        [1552923600000, 0],\n        [1552924200000, 0],\n        [1552924800000, 0],\n        [1552925400000, 0],\n        [1552926000000, 0],\n        [1552926600000, 0],\n        [1552927200000, 0],\n        [1552927800000, 0],\n        [1552928400000, 0],\n        [1552929000000, 0],\n        [1552929600000, 1],\n        [1552930200000, 0],\n        [1552930800000, 0],\n        [1552931400000, 0],\n        [1552932000000, 0],\n        [1552932600000, 0],\n        [1552933200000, 0],\n        [1552933800000, 0],\n        [1552934400000, 0],\n        [1552935000000, 0],\n        [1552935600000, 0],\n        [1552936200000, 1],\n        [1552936800000, 0],\n        [1552937400000, 0],\n        [1552938000000, 0],\n        [1552938600000, 0],\n        [1552939200000, 0],\n        [1552939800000, 0],\n        [1552940400000, 0],\n        [1552941000000, 0],\n        [1552941600000, 0],\n        [1552942200000, 0],\n        [1552942800000, 0],\n        [1552943400000, 0],\n        [1552944000000, 0],\n        [1552944600000, 0],\n        [1552945200000, 0],\n        [1552945800000, 0],\n        [1552946400000, 0],\n        [1552947000000, 0],\n        [1552947600000, 0],\n        [1552948200000, 0],\n        [1552948800000, 0],\n        [1552949400000, 1],\n      ],\n      stack: false,\n      lines: { show: true, fill: 0.5, lineWidth: 1, steps: false },\n      points: { show: true, radius: 1, lineWidth: 1 },\n      bars: { show: false, fill: 0.5, lineWidth: 1 },\n    },\n  ],\n};\n","import { withInfo } from '@storybook/addon-info';\nimport { withKnobs } from '@storybook/addon-knobs';\nimport { withOptions } from '@storybook/addon-options';\nimport { addDecorator, configure } from '@storybook/react';\nimport '../src/index.scss';\nimport './style.scss';\nimport { switchTheme } from './theme_service';\n\nswitchTheme('light');\n\naddDecorator(\n  withOptions({\n    name: 'Elastic Charts',\n    url: 'https://github.com/elastic/elastic-charts',\n    addonPanelInRight: true,\n    sidebarAnimations: true,\n  }),\n);\naddDecorator(withKnobs);\naddDecorator(\n  withInfo({\n    inline: true,\n    source: false,\n    styles: {\n      infoBody: {\n        marginTop: 0,\n        marginBottom: 0,\n      },\n    },\n  }),\n);\n\nfunction loadStories() {\n  require('../stories/bar_chart.tsx');\n  require('../stories/line_chart.tsx');\n  require('../stories/area_chart.tsx');\n  require('../stories/axis.tsx');\n  require('../stories/mixed.tsx');\n  require('../stories/legend.tsx');\n  require('../stories/interactions.tsx');\n  require('../stories/rotations.tsx');\n  require('../stories/styling.tsx');\n  require('../stories/grid.tsx');\n  require('../stories/annotations.tsx');\n  require('../stories/scales.tsx');\n}\n\nconfigure(loadStories, module);\n","var map = {\n\t\"./nestedObjectAssign\": 429,\n\t\"./nestedObjectAssign.js\": 429\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 942;"],"sourceRoot":""}